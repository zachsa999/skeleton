{"code":"(()=>{\n\"use strict\";var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});Object.defineProperty(exports,\"__esModule\",{value:true});function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}__name(_interopRequireDefault,\"_interopRequireDefault\");var _keywords=require(\"../parser/tokenizer/keywords\");var _types=require(\"../parser/tokenizer/types\");var _getClassInfo=require(\"../util/getClassInfo\");var _getClassInfo2=_interopRequireDefault(_getClassInfo);var _CJSImportTransformer=require(\"./CJSImportTransformer\");var _CJSImportTransformer2=_interopRequireDefault(_CJSImportTransformer);var _ESMImportTransformer=require(\"./ESMImportTransformer\");var _ESMImportTransformer2=_interopRequireDefault(_ESMImportTransformer);var _FlowTransformer=require(\"./FlowTransformer\");var _FlowTransformer2=_interopRequireDefault(_FlowTransformer);var _JestHoistTransformer=require(\"./JestHoistTransformer\");var _JestHoistTransformer2=_interopRequireDefault(_JestHoistTransformer);var _JSXTransformer=require(\"./JSXTransformer\");var _JSXTransformer2=_interopRequireDefault(_JSXTransformer);var _NumericSeparatorTransformer=require(\"./NumericSeparatorTransformer\");var _NumericSeparatorTransformer2=_interopRequireDefault(_NumericSeparatorTransformer);var _OptionalCatchBindingTransformer=require(\"./OptionalCatchBindingTransformer\");var _OptionalCatchBindingTransformer2=_interopRequireDefault(_OptionalCatchBindingTransformer);var _OptionalChainingNullishTransformer=require(\"./OptionalChainingNullishTransformer\");var _OptionalChainingNullishTransformer2=_interopRequireDefault(_OptionalChainingNullishTransformer);var _ReactDisplayNameTransformer=require(\"./ReactDisplayNameTransformer\");var _ReactDisplayNameTransformer2=_interopRequireDefault(_ReactDisplayNameTransformer);var _ReactHotLoaderTransformer=require(\"./ReactHotLoaderTransformer\");var _ReactHotLoaderTransformer2=_interopRequireDefault(_ReactHotLoaderTransformer);var _TypeScriptTransformer=require(\"./TypeScriptTransformer\");var _TypeScriptTransformer2=_interopRequireDefault(_TypeScriptTransformer);class RootTransformer{__init(){this.transformers=[]}__init2(){this.generatedVariables=[]}constructor(sucraseContext,transforms,enableLegacyBabel5ModuleInterop,options){;RootTransformer.prototype.__init.call(this);RootTransformer.prototype.__init2.call(this);this.nameManager=sucraseContext.nameManager;this.helperManager=sucraseContext.helperManager;const{tokenProcessor,importProcessor}=sucraseContext;this.tokens=tokenProcessor;this.isImportsTransformEnabled=transforms.includes(\"imports\");this.isReactHotLoaderTransformEnabled=transforms.includes(\"react-hot-loader\");this.disableESTransforms=Boolean(options.disableESTransforms);if(!options.disableESTransforms){this.transformers.push(new(0,_OptionalChainingNullishTransformer2.default)(tokenProcessor,this.nameManager));this.transformers.push(new(0,_NumericSeparatorTransformer2.default)(tokenProcessor));this.transformers.push(new(0,_OptionalCatchBindingTransformer2.default)(tokenProcessor,this.nameManager))}if(transforms.includes(\"jsx\")){if(options.jsxRuntime!==\"preserve\"){this.transformers.push(new(0,_JSXTransformer2.default)(this,tokenProcessor,importProcessor,this.nameManager,options))}this.transformers.push(new(0,_ReactDisplayNameTransformer2.default)(this,tokenProcessor,importProcessor,options))}let reactHotLoaderTransformer=null;if(transforms.includes(\"react-hot-loader\")){if(!options.filePath){throw new Error(\"filePath is required when using the react-hot-loader transform.\")}reactHotLoaderTransformer=new(0,_ReactHotLoaderTransformer2.default)(tokenProcessor,options.filePath);this.transformers.push(reactHotLoaderTransformer)}if(transforms.includes(\"imports\")){if(importProcessor===null){throw new Error(\"Expected non-null importProcessor with imports transform enabled.\")}this.transformers.push(new(0,_CJSImportTransformer2.default)(this,tokenProcessor,importProcessor,this.nameManager,this.helperManager,reactHotLoaderTransformer,enableLegacyBabel5ModuleInterop,Boolean(options.enableLegacyTypeScriptModuleInterop),transforms.includes(\"typescript\"),Boolean(options.preserveDynamicImport)))}else{this.transformers.push(new(0,_ESMImportTransformer2.default)(tokenProcessor,this.nameManager,this.helperManager,reactHotLoaderTransformer,transforms.includes(\"typescript\"),options))}if(transforms.includes(\"flow\")){this.transformers.push(new(0,_FlowTransformer2.default)(this,tokenProcessor,transforms.includes(\"imports\")))}if(transforms.includes(\"typescript\")){this.transformers.push(new(0,_TypeScriptTransformer2.default)(this,tokenProcessor,transforms.includes(\"imports\")))}if(transforms.includes(\"jest\")){this.transformers.push(new(0,_JestHoistTransformer2.default)(this,tokenProcessor,this.nameManager,importProcessor))}}transform(){this.tokens.reset();this.processBalancedCode();const shouldAddUseStrict=this.isImportsTransformEnabled;let prefix=shouldAddUseStrict?'\"use strict\";':\"\";for(const transformer of this.transformers){prefix+=transformer.getPrefixCode()}prefix+=this.helperManager.emitHelpers();prefix+=this.generatedVariables.map(v=>` var ${v};`).join(\"\");for(const transformer of this.transformers){prefix+=transformer.getHoistedCode()}let suffix=\"\";for(const transformer of this.transformers){suffix+=transformer.getSuffixCode()}const result=this.tokens.finish();let{code}=result;if(code.startsWith(\"#!\")){let newlineIndex=code.indexOf(\"\\n\");if(newlineIndex===-1){newlineIndex=code.length;code+=\"\\n\"}return{code:code.slice(0,newlineIndex+1)+prefix+code.slice(newlineIndex+1)+suffix,mappings:this.shiftMappings(result.mappings,prefix.length)}}else{return{code:prefix+code+suffix,mappings:this.shiftMappings(result.mappings,prefix.length)}}}processBalancedCode(){let braceDepth=0;let parenDepth=0;while(!this.tokens.isAtEnd()){if(this.tokens.matches1(_types.TokenType.braceL)||this.tokens.matches1(_types.TokenType.dollarBraceL)){braceDepth++}else if(this.tokens.matches1(_types.TokenType.braceR)){if(braceDepth===0){return}braceDepth--}if(this.tokens.matches1(_types.TokenType.parenL)){parenDepth++}else if(this.tokens.matches1(_types.TokenType.parenR)){if(parenDepth===0){return}parenDepth--}this.processToken()}}processToken(){if(this.tokens.matches1(_types.TokenType._class)){this.processClass();return}for(const transformer of this.transformers){const wasProcessed=transformer.process();if(wasProcessed){return}}this.tokens.copyToken()}processNamedClass(){if(!this.tokens.matches2(_types.TokenType._class,_types.TokenType.name)){throw new Error(\"Expected identifier for exported class name.\")}const name=this.tokens.identifierNameAtIndex(this.tokens.currentIndex()+1);this.processClass();return name}processClass(){const classInfo=_getClassInfo2.default.call(void 0,this,this.tokens,this.nameManager,this.disableESTransforms);const needsCommaExpression=(classInfo.headerInfo.isExpression||!classInfo.headerInfo.className)&&classInfo.staticInitializerNames.length+classInfo.instanceInitializerNames.length>0;let className=classInfo.headerInfo.className;if(needsCommaExpression){className=this.nameManager.claimFreeName(\"_class\");this.generatedVariables.push(className);this.tokens.appendCode(` (${className} =`)}const classToken=this.tokens.currentToken();const contextId=classToken.contextId;if(contextId==null){throw new Error(\"Expected class to have a context ID.\")}this.tokens.copyExpectedToken(_types.TokenType._class);while(!this.tokens.matchesContextIdAndLabel(_types.TokenType.braceL,contextId)){this.processToken()}this.processClassBody(classInfo,className);const staticInitializerStatements=classInfo.staticInitializerNames.map(name=>`${className}.${name}()`);if(needsCommaExpression){this.tokens.appendCode(`, ${staticInitializerStatements.map(s=>`${s}, `).join(\"\")}${className})`)}else if(classInfo.staticInitializerNames.length>0){this.tokens.appendCode(` ${staticInitializerStatements.map(s=>`${s};`).join(\" \")}`)}}processClassBody(classInfo,className){const{headerInfo,constructorInsertPos,constructorInitializerStatements,fields,instanceInitializerNames,rangesToRemove}=classInfo;let fieldIndex=0;let rangeToRemoveIndex=0;const classContextId=this.tokens.currentToken().contextId;if(classContextId==null){throw new Error(\"Expected non-null context ID on class.\")}this.tokens.copyExpectedToken(_types.TokenType.braceL);if(this.isReactHotLoaderTransformEnabled){this.tokens.appendCode(\"__reactstandin__regenerateByEval(key, code) {this[key] = eval(code);}\")}const needsConstructorInit=constructorInitializerStatements.length+instanceInitializerNames.length>0;if(constructorInsertPos===null&&needsConstructorInit){const constructorInitializersCode=this.makeConstructorInitCode(constructorInitializerStatements,instanceInitializerNames,className);if(headerInfo.hasSuperclass){const argsName=this.nameManager.claimFreeName(\"args\");this.tokens.appendCode(`constructor(...${argsName}) { super(...${argsName}); ${constructorInitializersCode}; }`)}else{this.tokens.appendCode(`constructor() { ${constructorInitializersCode}; }`)}}while(!this.tokens.matchesContextIdAndLabel(_types.TokenType.braceR,classContextId)){if(fieldIndex<fields.length&&this.tokens.currentIndex()===fields[fieldIndex].start){let needsCloseBrace=false;if(this.tokens.matches1(_types.TokenType.bracketL)){this.tokens.copyTokenWithPrefix(`${fields[fieldIndex].initializerName}() {this`)}else if(this.tokens.matches1(_types.TokenType.string)||this.tokens.matches1(_types.TokenType.num)){this.tokens.copyTokenWithPrefix(`${fields[fieldIndex].initializerName}() {this[`);needsCloseBrace=true}else{this.tokens.copyTokenWithPrefix(`${fields[fieldIndex].initializerName}() {this.`)}while(this.tokens.currentIndex()<fields[fieldIndex].end){if(needsCloseBrace&&this.tokens.currentIndex()===fields[fieldIndex].equalsIndex){this.tokens.appendCode(\"]\")}this.processToken()}this.tokens.appendCode(\"}\");fieldIndex++}else if(rangeToRemoveIndex<rangesToRemove.length&&this.tokens.currentIndex()>=rangesToRemove[rangeToRemoveIndex].start){if(this.tokens.currentIndex()<rangesToRemove[rangeToRemoveIndex].end){this.tokens.removeInitialToken()}while(this.tokens.currentIndex()<rangesToRemove[rangeToRemoveIndex].end){this.tokens.removeToken()}rangeToRemoveIndex++}else if(this.tokens.currentIndex()===constructorInsertPos){this.tokens.copyToken();if(needsConstructorInit){this.tokens.appendCode(`;${this.makeConstructorInitCode(constructorInitializerStatements,instanceInitializerNames,className)};`)}this.processToken()}else{this.processToken()}}this.tokens.copyExpectedToken(_types.TokenType.braceR)}makeConstructorInitCode(constructorInitializerStatements,instanceInitializerNames,className){return[...constructorInitializerStatements,...instanceInitializerNames.map(name=>`${className}.prototype.${name}.call(this)`)].join(\";\")}processPossibleArrowParamEnd(){if(this.tokens.matches2(_types.TokenType.parenR,_types.TokenType.colon)&&this.tokens.tokenAtRelativeIndex(1).isType){let nextNonTypeIndex=this.tokens.currentIndex()+1;while(this.tokens.tokens[nextNonTypeIndex].isType){nextNonTypeIndex++}if(this.tokens.matches1AtIndex(nextNonTypeIndex,_types.TokenType.arrow)){this.tokens.removeInitialToken();while(this.tokens.currentIndex()<nextNonTypeIndex){this.tokens.removeToken()}this.tokens.replaceTokenTrimmingLeftWhitespace(\") =>\");return true}}return false}processPossibleAsyncArrowWithTypeParams(){if(!this.tokens.matchesContextual(_keywords.ContextualKeyword._async)&&!this.tokens.matches1(_types.TokenType._async)){return false}const nextToken=this.tokens.tokenAtRelativeIndex(1);if(nextToken.type!==_types.TokenType.lessThan||!nextToken.isType){return false}let nextNonTypeIndex=this.tokens.currentIndex()+1;while(this.tokens.tokens[nextNonTypeIndex].isType){nextNonTypeIndex++}if(this.tokens.matches1AtIndex(nextNonTypeIndex,_types.TokenType.parenL)){this.tokens.replaceToken(\"async (\");this.tokens.removeInitialToken();while(this.tokens.currentIndex()<nextNonTypeIndex){this.tokens.removeToken()}this.tokens.removeToken();this.processBalancedCode();this.processToken();return true}return false}processPossibleTypeRange(){if(this.tokens.currentToken().isType){this.tokens.removeInitialToken();while(this.tokens.currentToken().isType){this.tokens.removeToken()}return true}return false}shiftMappings(mappings,prefixLength){for(let i=0;i<mappings.length;i++){const mapping=mappings[i];if(mapping!==void 0){mappings[i]=mapping+prefixLength}}return mappings}}__name(RootTransformer,\"RootTransformer\");exports.default=RootTransformer;\n})()\n","warnings":[],"map":{"version":3,"mappings":"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","names":[],"sources":["/root/projects/zachw-i/packages/plugin/node_modules/.pnpm/sucrase@3.32.0/node_modules/sucrase/dist/transformers/RootTransformer.js"],"sourcesContent":["\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true}); function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\nvar _keywords = require('../parser/tokenizer/keywords');\nvar _types = require('../parser/tokenizer/types');\n\nvar _getClassInfo = require('../util/getClassInfo'); var _getClassInfo2 = _interopRequireDefault(_getClassInfo);\nvar _CJSImportTransformer = require('./CJSImportTransformer'); var _CJSImportTransformer2 = _interopRequireDefault(_CJSImportTransformer);\nvar _ESMImportTransformer = require('./ESMImportTransformer'); var _ESMImportTransformer2 = _interopRequireDefault(_ESMImportTransformer);\nvar _FlowTransformer = require('./FlowTransformer'); var _FlowTransformer2 = _interopRequireDefault(_FlowTransformer);\nvar _JestHoistTransformer = require('./JestHoistTransformer'); var _JestHoistTransformer2 = _interopRequireDefault(_JestHoistTransformer);\nvar _JSXTransformer = require('./JSXTransformer'); var _JSXTransformer2 = _interopRequireDefault(_JSXTransformer);\nvar _NumericSeparatorTransformer = require('./NumericSeparatorTransformer'); var _NumericSeparatorTransformer2 = _interopRequireDefault(_NumericSeparatorTransformer);\nvar _OptionalCatchBindingTransformer = require('./OptionalCatchBindingTransformer'); var _OptionalCatchBindingTransformer2 = _interopRequireDefault(_OptionalCatchBindingTransformer);\nvar _OptionalChainingNullishTransformer = require('./OptionalChainingNullishTransformer'); var _OptionalChainingNullishTransformer2 = _interopRequireDefault(_OptionalChainingNullishTransformer);\nvar _ReactDisplayNameTransformer = require('./ReactDisplayNameTransformer'); var _ReactDisplayNameTransformer2 = _interopRequireDefault(_ReactDisplayNameTransformer);\nvar _ReactHotLoaderTransformer = require('./ReactHotLoaderTransformer'); var _ReactHotLoaderTransformer2 = _interopRequireDefault(_ReactHotLoaderTransformer);\n\nvar _TypeScriptTransformer = require('./TypeScriptTransformer'); var _TypeScriptTransformer2 = _interopRequireDefault(_TypeScriptTransformer);\n\n\n\n\n\n\n\n\n class RootTransformer {\n   __init() {this.transformers = []}\n  \n  \n   __init2() {this.generatedVariables = []}\n  \n  \n  \n  \n\n  constructor(\n    sucraseContext,\n    transforms,\n    enableLegacyBabel5ModuleInterop,\n    options,\n  ) {;RootTransformer.prototype.__init.call(this);RootTransformer.prototype.__init2.call(this);\n    this.nameManager = sucraseContext.nameManager;\n    this.helperManager = sucraseContext.helperManager;\n    const {tokenProcessor, importProcessor} = sucraseContext;\n    this.tokens = tokenProcessor;\n    this.isImportsTransformEnabled = transforms.includes(\"imports\");\n    this.isReactHotLoaderTransformEnabled = transforms.includes(\"react-hot-loader\");\n    this.disableESTransforms = Boolean(options.disableESTransforms);\n\n    if (!options.disableESTransforms) {\n      this.transformers.push(\n        new (0, _OptionalChainingNullishTransformer2.default)(tokenProcessor, this.nameManager),\n      );\n      this.transformers.push(new (0, _NumericSeparatorTransformer2.default)(tokenProcessor));\n      this.transformers.push(new (0, _OptionalCatchBindingTransformer2.default)(tokenProcessor, this.nameManager));\n    }\n\n    if (transforms.includes(\"jsx\")) {\n      if (options.jsxRuntime !== \"preserve\") {\n        this.transformers.push(\n          new (0, _JSXTransformer2.default)(this, tokenProcessor, importProcessor, this.nameManager, options),\n        );\n      }\n      this.transformers.push(\n        new (0, _ReactDisplayNameTransformer2.default)(this, tokenProcessor, importProcessor, options),\n      );\n    }\n\n    let reactHotLoaderTransformer = null;\n    if (transforms.includes(\"react-hot-loader\")) {\n      if (!options.filePath) {\n        throw new Error(\"filePath is required when using the react-hot-loader transform.\");\n      }\n      reactHotLoaderTransformer = new (0, _ReactHotLoaderTransformer2.default)(tokenProcessor, options.filePath);\n      this.transformers.push(reactHotLoaderTransformer);\n    }\n\n    // Note that we always want to enable the imports transformer, even when the import transform\n    // itself isn't enabled, since we need to do type-only import pruning for both Flow and\n    // TypeScript.\n    if (transforms.includes(\"imports\")) {\n      if (importProcessor === null) {\n        throw new Error(\"Expected non-null importProcessor with imports transform enabled.\");\n      }\n      this.transformers.push(\n        new (0, _CJSImportTransformer2.default)(\n          this,\n          tokenProcessor,\n          importProcessor,\n          this.nameManager,\n          this.helperManager,\n          reactHotLoaderTransformer,\n          enableLegacyBabel5ModuleInterop,\n          Boolean(options.enableLegacyTypeScriptModuleInterop),\n          transforms.includes(\"typescript\"),\n          Boolean(options.preserveDynamicImport),\n        ),\n      );\n    } else {\n      this.transformers.push(\n        new (0, _ESMImportTransformer2.default)(\n          tokenProcessor,\n          this.nameManager,\n          this.helperManager,\n          reactHotLoaderTransformer,\n          transforms.includes(\"typescript\"),\n          options,\n        ),\n      );\n    }\n\n    if (transforms.includes(\"flow\")) {\n      this.transformers.push(\n        new (0, _FlowTransformer2.default)(this, tokenProcessor, transforms.includes(\"imports\")),\n      );\n    }\n    if (transforms.includes(\"typescript\")) {\n      this.transformers.push(\n        new (0, _TypeScriptTransformer2.default)(this, tokenProcessor, transforms.includes(\"imports\")),\n      );\n    }\n    if (transforms.includes(\"jest\")) {\n      this.transformers.push(\n        new (0, _JestHoistTransformer2.default)(this, tokenProcessor, this.nameManager, importProcessor),\n      );\n    }\n  }\n\n  transform() {\n    this.tokens.reset();\n    this.processBalancedCode();\n    const shouldAddUseStrict = this.isImportsTransformEnabled;\n    // \"use strict\" always needs to be first, so override the normal transformer order.\n    let prefix = shouldAddUseStrict ? '\"use strict\";' : \"\";\n    for (const transformer of this.transformers) {\n      prefix += transformer.getPrefixCode();\n    }\n    prefix += this.helperManager.emitHelpers();\n    prefix += this.generatedVariables.map((v) => ` var ${v};`).join(\"\");\n    for (const transformer of this.transformers) {\n      prefix += transformer.getHoistedCode();\n    }\n    let suffix = \"\";\n    for (const transformer of this.transformers) {\n      suffix += transformer.getSuffixCode();\n    }\n    const result = this.tokens.finish();\n    let {code} = result;\n    if (code.startsWith(\"#!\")) {\n      let newlineIndex = code.indexOf(\"\\n\");\n      if (newlineIndex === -1) {\n        newlineIndex = code.length;\n        code += \"\\n\";\n      }\n      return {\n        code: code.slice(0, newlineIndex + 1) + prefix + code.slice(newlineIndex + 1) + suffix,\n        // The hashbang line has no tokens, so shifting the tokens to account\n        // for prefix can happen normally.\n        mappings: this.shiftMappings(result.mappings, prefix.length),\n      };\n    } else {\n      return {\n        code: prefix + code + suffix,\n        mappings: this.shiftMappings(result.mappings, prefix.length),\n      };\n    }\n  }\n\n  processBalancedCode() {\n    let braceDepth = 0;\n    let parenDepth = 0;\n    while (!this.tokens.isAtEnd()) {\n      if (this.tokens.matches1(_types.TokenType.braceL) || this.tokens.matches1(_types.TokenType.dollarBraceL)) {\n        braceDepth++;\n      } else if (this.tokens.matches1(_types.TokenType.braceR)) {\n        if (braceDepth === 0) {\n          return;\n        }\n        braceDepth--;\n      }\n      if (this.tokens.matches1(_types.TokenType.parenL)) {\n        parenDepth++;\n      } else if (this.tokens.matches1(_types.TokenType.parenR)) {\n        if (parenDepth === 0) {\n          return;\n        }\n        parenDepth--;\n      }\n      this.processToken();\n    }\n  }\n\n  processToken() {\n    if (this.tokens.matches1(_types.TokenType._class)) {\n      this.processClass();\n      return;\n    }\n    for (const transformer of this.transformers) {\n      const wasProcessed = transformer.process();\n      if (wasProcessed) {\n        return;\n      }\n    }\n    this.tokens.copyToken();\n  }\n\n  /**\n   * Skip past a class with a name and return that name.\n   */\n  processNamedClass() {\n    if (!this.tokens.matches2(_types.TokenType._class, _types.TokenType.name)) {\n      throw new Error(\"Expected identifier for exported class name.\");\n    }\n    const name = this.tokens.identifierNameAtIndex(this.tokens.currentIndex() + 1);\n    this.processClass();\n    return name;\n  }\n\n  processClass() {\n    const classInfo = _getClassInfo2.default.call(void 0, this, this.tokens, this.nameManager, this.disableESTransforms);\n\n    // Both static and instance initializers need a class name to use to invoke the initializer, so\n    // assign to one if necessary.\n    const needsCommaExpression =\n      (classInfo.headerInfo.isExpression || !classInfo.headerInfo.className) &&\n      classInfo.staticInitializerNames.length + classInfo.instanceInitializerNames.length > 0;\n\n    let className = classInfo.headerInfo.className;\n    if (needsCommaExpression) {\n      className = this.nameManager.claimFreeName(\"_class\");\n      this.generatedVariables.push(className);\n      this.tokens.appendCode(` (${className} =`);\n    }\n\n    const classToken = this.tokens.currentToken();\n    const contextId = classToken.contextId;\n    if (contextId == null) {\n      throw new Error(\"Expected class to have a context ID.\");\n    }\n    this.tokens.copyExpectedToken(_types.TokenType._class);\n    while (!this.tokens.matchesContextIdAndLabel(_types.TokenType.braceL, contextId)) {\n      this.processToken();\n    }\n\n    this.processClassBody(classInfo, className);\n\n    const staticInitializerStatements = classInfo.staticInitializerNames.map(\n      (name) => `${className}.${name}()`,\n    );\n    if (needsCommaExpression) {\n      this.tokens.appendCode(\n        `, ${staticInitializerStatements.map((s) => `${s}, `).join(\"\")}${className})`,\n      );\n    } else if (classInfo.staticInitializerNames.length > 0) {\n      this.tokens.appendCode(` ${staticInitializerStatements.map((s) => `${s};`).join(\" \")}`);\n    }\n  }\n\n  /**\n   * We want to just handle class fields in all contexts, since TypeScript supports them. Later,\n   * when some JS implementations support class fields, this should be made optional.\n   */\n  processClassBody(classInfo, className) {\n    const {\n      headerInfo,\n      constructorInsertPos,\n      constructorInitializerStatements,\n      fields,\n      instanceInitializerNames,\n      rangesToRemove,\n    } = classInfo;\n    let fieldIndex = 0;\n    let rangeToRemoveIndex = 0;\n    const classContextId = this.tokens.currentToken().contextId;\n    if (classContextId == null) {\n      throw new Error(\"Expected non-null context ID on class.\");\n    }\n    this.tokens.copyExpectedToken(_types.TokenType.braceL);\n    if (this.isReactHotLoaderTransformEnabled) {\n      this.tokens.appendCode(\n        \"__reactstandin__regenerateByEval(key, code) {this[key] = eval(code);}\",\n      );\n    }\n\n    const needsConstructorInit =\n      constructorInitializerStatements.length + instanceInitializerNames.length > 0;\n\n    if (constructorInsertPos === null && needsConstructorInit) {\n      const constructorInitializersCode = this.makeConstructorInitCode(\n        constructorInitializerStatements,\n        instanceInitializerNames,\n        className,\n      );\n      if (headerInfo.hasSuperclass) {\n        const argsName = this.nameManager.claimFreeName(\"args\");\n        this.tokens.appendCode(\n          `constructor(...${argsName}) { super(...${argsName}); ${constructorInitializersCode}; }`,\n        );\n      } else {\n        this.tokens.appendCode(`constructor() { ${constructorInitializersCode}; }`);\n      }\n    }\n\n    while (!this.tokens.matchesContextIdAndLabel(_types.TokenType.braceR, classContextId)) {\n      if (fieldIndex < fields.length && this.tokens.currentIndex() === fields[fieldIndex].start) {\n        let needsCloseBrace = false;\n        if (this.tokens.matches1(_types.TokenType.bracketL)) {\n          this.tokens.copyTokenWithPrefix(`${fields[fieldIndex].initializerName}() {this`);\n        } else if (this.tokens.matches1(_types.TokenType.string) || this.tokens.matches1(_types.TokenType.num)) {\n          this.tokens.copyTokenWithPrefix(`${fields[fieldIndex].initializerName}() {this[`);\n          needsCloseBrace = true;\n        } else {\n          this.tokens.copyTokenWithPrefix(`${fields[fieldIndex].initializerName}() {this.`);\n        }\n        while (this.tokens.currentIndex() < fields[fieldIndex].end) {\n          if (needsCloseBrace && this.tokens.currentIndex() === fields[fieldIndex].equalsIndex) {\n            this.tokens.appendCode(\"]\");\n          }\n          this.processToken();\n        }\n        this.tokens.appendCode(\"}\");\n        fieldIndex++;\n      } else if (\n        rangeToRemoveIndex < rangesToRemove.length &&\n        this.tokens.currentIndex() >= rangesToRemove[rangeToRemoveIndex].start\n      ) {\n        if (this.tokens.currentIndex() < rangesToRemove[rangeToRemoveIndex].end) {\n          this.tokens.removeInitialToken();\n        }\n        while (this.tokens.currentIndex() < rangesToRemove[rangeToRemoveIndex].end) {\n          this.tokens.removeToken();\n        }\n        rangeToRemoveIndex++;\n      } else if (this.tokens.currentIndex() === constructorInsertPos) {\n        this.tokens.copyToken();\n        if (needsConstructorInit) {\n          this.tokens.appendCode(\n            `;${this.makeConstructorInitCode(\n              constructorInitializerStatements,\n              instanceInitializerNames,\n              className,\n            )};`,\n          );\n        }\n        this.processToken();\n      } else {\n        this.processToken();\n      }\n    }\n    this.tokens.copyExpectedToken(_types.TokenType.braceR);\n  }\n\n  makeConstructorInitCode(\n    constructorInitializerStatements,\n    instanceInitializerNames,\n    className,\n  ) {\n    return [\n      ...constructorInitializerStatements,\n      ...instanceInitializerNames.map((name) => `${className}.prototype.${name}.call(this)`),\n    ].join(\";\");\n  }\n\n  /**\n   * Normally it's ok to simply remove type tokens, but we need to be more careful when dealing with\n   * arrow function return types since they can confuse the parser. In that case, we want to move\n   * the close-paren to the same line as the arrow.\n   *\n   * See https://github.com/alangpierce/sucrase/issues/391 for more details.\n   */\n  processPossibleArrowParamEnd() {\n    if (this.tokens.matches2(_types.TokenType.parenR, _types.TokenType.colon) && this.tokens.tokenAtRelativeIndex(1).isType) {\n      let nextNonTypeIndex = this.tokens.currentIndex() + 1;\n      // Look ahead to see if this is an arrow function or something else.\n      while (this.tokens.tokens[nextNonTypeIndex].isType) {\n        nextNonTypeIndex++;\n      }\n      if (this.tokens.matches1AtIndex(nextNonTypeIndex, _types.TokenType.arrow)) {\n        this.tokens.removeInitialToken();\n        while (this.tokens.currentIndex() < nextNonTypeIndex) {\n          this.tokens.removeToken();\n        }\n        this.tokens.replaceTokenTrimmingLeftWhitespace(\") =>\");\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * An async arrow function might be of the form:\n   *\n   * async <\n   *   T\n   * >() => {}\n   *\n   * in which case, removing the type parameters will cause a syntax error. Detect this case and\n   * move the open-paren earlier.\n   */\n  processPossibleAsyncArrowWithTypeParams() {\n    if (\n      !this.tokens.matchesContextual(_keywords.ContextualKeyword._async) &&\n      !this.tokens.matches1(_types.TokenType._async)\n    ) {\n      return false;\n    }\n    const nextToken = this.tokens.tokenAtRelativeIndex(1);\n    if (nextToken.type !== _types.TokenType.lessThan || !nextToken.isType) {\n      return false;\n    }\n\n    let nextNonTypeIndex = this.tokens.currentIndex() + 1;\n    // Look ahead to see if this is an arrow function or something else.\n    while (this.tokens.tokens[nextNonTypeIndex].isType) {\n      nextNonTypeIndex++;\n    }\n    if (this.tokens.matches1AtIndex(nextNonTypeIndex, _types.TokenType.parenL)) {\n      this.tokens.replaceToken(\"async (\");\n      this.tokens.removeInitialToken();\n      while (this.tokens.currentIndex() < nextNonTypeIndex) {\n        this.tokens.removeToken();\n      }\n      this.tokens.removeToken();\n      // We ate a ( token, so we need to process the tokens in between and then the ) token so that\n      // we remain balanced.\n      this.processBalancedCode();\n      this.processToken();\n      return true;\n    }\n    return false;\n  }\n\n  processPossibleTypeRange() {\n    if (this.tokens.currentToken().isType) {\n      this.tokens.removeInitialToken();\n      while (this.tokens.currentToken().isType) {\n        this.tokens.removeToken();\n      }\n      return true;\n    }\n    return false;\n  }\n\n  shiftMappings(\n    mappings,\n    prefixLength,\n  ) {\n    for (let i = 0; i < mappings.length; i++) {\n      const mapping = mappings[i];\n      if (mapping !== undefined) {\n        mappings[i] = mapping + prefixLength;\n      }\n    }\n    return mappings;\n  }\n} exports.default = RootTransformer;\n"]}}