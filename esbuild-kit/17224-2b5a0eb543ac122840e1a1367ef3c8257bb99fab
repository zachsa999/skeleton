{"code":"(()=>{\n\"use strict\";var __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __hasOwnProp=Object.prototype.hasOwnProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});var __export=(target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:true})};var __copyProps=(to,from,except,desc)=>{if(from&&typeof from===\"object\"||typeof from===\"function\"){for(let key of __getOwnPropNames(from))if(!__hasOwnProp.call(to,key)&&key!==except)__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable})}return to};var __toCommonJS=mod=>__copyProps(__defProp({},\"__esModule\",{value:true}),mod);var borders_exports={};__export(borders_exports,{borders:()=>borders,default:()=>borders_default});module.exports=__toCommonJS(borders_exports);var import_settings=require(\"../settings.js\");const borders=__name(()=>{const classes={\".border-token\":{\"border-width\":\"var(--theme-border-base)\"}};import_settings.settings.colorNames.forEach(n=>{import_settings.settings.colorPairings.forEach(p=>{classes[`.border-${n}-${p.light}-${p.dark}-token`]={\"border-color\":`rgb(var(--color-${n}-${p.light}))`};classes[`.dark .border-${n}-${p.light}-${p.dark}-token`]={\"border-color\":`rgb(var(--color-${n}-${p.dark}))`};classes[`.divide-${n}-${p.light}-${p.dark}-token`]={\"border-color\":`rgb(var(--color-${n}-${p.light}))`};classes[`.dark .divide-${n}-${p.light}-${p.dark}-token`]={\"border-color\":`rgb(var(--color-${n}-${p.dark}))`}})});return classes},\"borders\");var borders_default=borders;\n})()\n","warnings":[],"map":{"version":3,"mappings":";mvBAAA,gJAGA,oBAA0C,0BAEnC,MAAM,QAAU,WAAkB,CACxC,MAAM,QAAsB,CAE3B,gBAAiB,CAAE,eAAgB,0BAA2B,CAC/D,EACA,yBAAS,WAAW,QAAS,GAAM,CAGlC,yBAAS,cAAc,QAAS,GAAM,CAErC,QAAQ,WAAW,KAAK,EAAE,SAAS,EAAE,YAAY,EAAI,CAAE,eAAgB,mBAAmB,KAAK,EAAE,SAAU,EAC3G,QAAQ,iBAAiB,KAAK,EAAE,SAAS,EAAE,YAAY,EAAI,CAAE,eAAgB,mBAAmB,KAAK,EAAE,QAAS,EAEhH,QAAQ,WAAW,KAAK,EAAE,SAAS,EAAE,YAAY,EAAI,CAAE,eAAgB,mBAAmB,KAAK,EAAE,SAAU,EAC3G,QAAQ,iBAAiB,KAAK,EAAE,SAAS,EAAE,YAAY,EAAI,CAAE,eAAgB,mBAAmB,KAAK,EAAE,QAAS,CACjH,CAAC,CACF,CAAC,EACD,OAAO,OACR,EAlBuB,WAoBvB,IAAO,gBAAQ","names":[],"sources":["/root/projects/zachw-i/packages/plugin/src/tailwind/tokens/borders.ts"],"sourcesContent":["// Design Tokens: Borders\n// Doc: https://www.skeleton.dev/docs/tokens\n\nimport { settings, type CssClasses } from '../settings.js';\n\nexport const borders = (): CssClasses => {\n\tconst classes: CssClasses = {\n\t\t// Border Width - ex: .border-token\n\t\t'.border-token': { 'border-width': 'var(--theme-border-base)' }\n\t};\n\tsettings.colorNames.forEach((n) => {\n\t\t// Color Pairings\n\t\t// Example: .border-primary-50-900-token | .border-primary-900-50-token\n\t\tsettings.colorPairings.forEach((p) => {\n\t\t\t// Standard Border\n\t\t\tclasses[`.border-${n}-${p.light}-${p.dark}-token`] = { 'border-color': `rgb(var(--color-${n}-${p.light}))` };\n\t\t\tclasses[`.dark .border-${n}-${p.light}-${p.dark}-token`] = { 'border-color': `rgb(var(--color-${n}-${p.dark}))` };\n\t\t\t// Divide Border\n\t\t\tclasses[`.divide-${n}-${p.light}-${p.dark}-token`] = { 'border-color': `rgb(var(--color-${n}-${p.light}))` };\n\t\t\tclasses[`.dark .divide-${n}-${p.light}-${p.dark}-token`] = { 'border-color': `rgb(var(--color-${n}-${p.dark}))` };\n\t\t});\n\t});\n\treturn classes;\n};\n\nexport default borders;\n"]}}