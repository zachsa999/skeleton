{"code":"(()=>{\n\"use strict\";var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});Object.defineProperty(exports,\"__esModule\",{value:true});const utils=require(\"../../utils\");class EntryTransformer{constructor(_settings){this._settings=_settings}getTransformer(){return entry=>this._transform(entry)}_transform(entry){let filepath=entry.path;if(this._settings.absolute){filepath=utils.path.makeAbsolute(this._settings.cwd,filepath);filepath=utils.path.unixify(filepath)}if(this._settings.markDirectories&&entry.dirent.isDirectory()){filepath+=\"/\"}if(!this._settings.objectMode){return filepath}return Object.assign(Object.assign({},entry),{path:filepath})}}__name(EntryTransformer,\"EntryTransformer\");exports.default=EntryTransformer;\n})()\n","warnings":[],"map":{"version":3,"mappings":";+HACA,OAAO,eAAe,QAAS,aAAc,CAAE,MAAO,IAAK,CAAC,EAC5D,MAAM,MAAQ,QAAQ,aAAa,EACnC,MAAM,gBAAiB,CACnB,YAAY,UAAW,CACnB,KAAK,UAAY,SACrB,CACA,gBAAiB,CACb,OAAQ,OAAU,KAAK,WAAW,KAAK,CAC3C,CACA,WAAW,MAAO,CACd,IAAI,SAAW,MAAM,KACrB,GAAI,KAAK,UAAU,SAAU,CACzB,SAAW,MAAM,KAAK,aAAa,KAAK,UAAU,IAAK,QAAQ,EAC/D,SAAW,MAAM,KAAK,QAAQ,QAAQ,CAC1C,CACA,GAAI,KAAK,UAAU,iBAAmB,MAAM,OAAO,YAAY,EAAG,CAC9D,UAAY,GAChB,CACA,GAAI,CAAC,KAAK,UAAU,WAAY,CAC5B,OAAO,QACX,CACA,OAAO,OAAO,OAAO,OAAO,OAAO,CAAC,EAAG,KAAK,EAAG,CAAE,KAAM,QAAS,CAAC,CACrE,CACJ,CArBM,4CAsBN,QAAQ,QAAU","names":[],"sources":["/root/projects/zachw-i/packages/plugin/node_modules/.pnpm/fast-glob@3.2.12/node_modules/fast-glob/out/providers/transformers/entry.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst utils = require(\"../../utils\");\r\nclass EntryTransformer {\r\n    constructor(_settings) {\r\n        this._settings = _settings;\r\n    }\r\n    getTransformer() {\r\n        return (entry) => this._transform(entry);\r\n    }\r\n    _transform(entry) {\r\n        let filepath = entry.path;\r\n        if (this._settings.absolute) {\r\n            filepath = utils.path.makeAbsolute(this._settings.cwd, filepath);\r\n            filepath = utils.path.unixify(filepath);\r\n        }\r\n        if (this._settings.markDirectories && entry.dirent.isDirectory()) {\r\n            filepath += '/';\r\n        }\r\n        if (!this._settings.objectMode) {\r\n            return filepath;\r\n        }\r\n        return Object.assign(Object.assign({}, entry), { path: filepath });\r\n    }\r\n}\r\nexports.default = EntryTransformer;\r\n"]}}