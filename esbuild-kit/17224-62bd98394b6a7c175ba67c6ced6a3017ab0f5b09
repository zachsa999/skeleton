{"code":"(()=>{\n\"use strict\";var __create=Object.create;var __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __getProtoOf=Object.getPrototypeOf;var __hasOwnProp=Object.prototype.hasOwnProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});var __copyProps=(to,from,except,desc)=>{if(from&&typeof from===\"object\"||typeof from===\"function\"){for(let key of __getOwnPropNames(from))if(!__hasOwnProp.call(to,key)&&key!==except)__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable})}return to};var __toESM=(mod,isNodeMode,target)=>(target=mod!=null?__create(__getProtoOf(mod)):{},__copyProps(isNodeMode||!mod||!mod.__esModule?__defProp(target,\"default\",{value:mod,enumerable:true}):target,mod));var import_compile_css_to_js=require(\"./compile-css-to-js.js\");var import_promises=require(\"fs/promises\");var import_plugin=__toESM(require(\"tailwindcss/plugin.js\"));const INTELLISENSE_FILE_NAME=\"generated-classes.js\";const GENERATED_DIR_PATH=`./src/tailwind/generated`;async function exec(){await(0,import_promises.mkdir)(GENERATED_DIR_PATH).catch(()=>{});const generatedComponentJSS=await(0,import_compile_css_to_js.transpileCssToJs)(\"./src/styles/components.css\");const componentClasses=patchMediaQueries(generatedComponentJSS);const componentPlugin=(0,import_plugin.default)(({addComponents})=>{addComponents(componentClasses)});const baseStyles=await(0,import_compile_css_to_js.transpileCssToJs)(\"./src/styles/base.css\",[componentPlugin]);await(0,import_promises.writeFile)(`${GENERATED_DIR_PATH}/${INTELLISENSE_FILE_NAME}`,`module.exports = { components: ${JSON.stringify(componentClasses)}, base: ${JSON.stringify(baseStyles)} };`).catch(e=>console.error(e))}__name(exec,\"exec\");function patchMediaQueries(cssInJs){const mediaQueries={};for(const key of Object.keys(cssInJs)){if(key.startsWith(\"@media\")){mediaQueries[key]=cssInJs[key];delete cssInJs[key]}}for(const key of Object.keys(mediaQueries)){cssInJs[key]=mediaQueries[key]}return cssInJs}__name(patchMediaQueries,\"patchMediaQueries\");exec();\n})()\n","warnings":[],"map":{"version":3,"mappings":";u0BACA,6BAAiC,kCACjC,oBAAiC,uBACjC,kBAAmB,0CAEnB,MAAM,uBAAyB,uBAC/B,MAAM,mBAAqB,2BAE3B,eAAe,MAAO,CAErB,QAAM,uBAAM,kBAAkB,EAAE,MAAM,IAAM,CAE5C,CAAC,EAED,MAAM,sBAAwB,QAAM,2CAAiB,6BAA6B,EAClF,MAAM,iBAAmB,kBAAkB,qBAAqB,EAEhE,MAAM,mBAAkB,uBAAO,CAAC,CAAE,aAAc,IAAM,CACrD,cAAc,gBAAgB,CAC/B,CAAC,EACD,MAAM,WAAa,QAAM,2CAAiB,wBAAyB,CAAC,eAAe,CAAC,EAGpF,QAAM,2BACL,GAAG,sBAAsB,yBACzB,kCAAkC,KAAK,UAAU,gBAAgB,YAAY,KAAK,UAAU,UAAU,MACvG,EAAE,MAAO,GAAM,QAAQ,MAAM,CAAC,CAAC,CAChC,CAnBe,oBAsBf,SAAS,kBAAkB,QAAkB,CAC5C,MAAM,aAAwB,CAAC,EAE/B,UAAW,OAAO,OAAO,KAAK,OAAO,EAAG,CACvC,GAAI,IAAI,WAAW,QAAQ,EAAG,CAC7B,aAAa,GAAG,EAAI,QAAQ,GAAG,EAC/B,OAAO,QAAQ,GAAG,CACnB,CACD,CAEA,UAAW,OAAO,OAAO,KAAK,YAAY,EAAG,CAC5C,QAAQ,GAAG,EAAI,aAAa,GAAG,CAChC,CAEA,OAAO,OACR,CAfS,8CAiBT,KAAK","names":[],"sources":["/root/projects/zachw-i/packages/plugin/scripts/generate-jss.ts"],"sourcesContent":["import type { CssInJs } from 'postcss-js';\nimport { transpileCssToJs } from './compile-css-to-js.js';\nimport { mkdir, writeFile } from 'fs/promises';\nimport plugin from 'tailwindcss/plugin.js';\n\nconst INTELLISENSE_FILE_NAME = 'generated-classes.js';\nconst GENERATED_DIR_PATH = `./src/tailwind/generated`;\n\nasync function exec() {\n\t// Makes directory that stores our generated CSS-in-JS\n\tawait mkdir(GENERATED_DIR_PATH).catch(() => {\n\t\t// directory already exists\n\t});\n\n\tconst generatedComponentJSS = await transpileCssToJs('./src/styles/components.css');\n\tconst componentClasses = patchMediaQueries(generatedComponentJSS);\n\n\tconst componentPlugin = plugin(({ addComponents }) => {\n\t\taddComponents(componentClasses);\n\t});\n\tconst baseStyles = await transpileCssToJs('./src/styles/base.css', [componentPlugin]);\n\n\t// Creates the generated CSS-in-JS file\n\tawait writeFile(\n\t\t`${GENERATED_DIR_PATH}/${INTELLISENSE_FILE_NAME}`,\n\t\t`module.exports = { components: ${JSON.stringify(componentClasses)}, base: ${JSON.stringify(baseStyles)} };`\n\t).catch((e) => console.error(e));\n}\n\n// Moves all of the media queries towards the end of the cssInJs object.\nfunction patchMediaQueries(cssInJs: CssInJs) {\n\tconst mediaQueries: CssInJs = {};\n\n\tfor (const key of Object.keys(cssInJs)) {\n\t\tif (key.startsWith('@media')) {\n\t\t\tmediaQueries[key] = cssInJs[key];\n\t\t\tdelete cssInJs[key];\n\t\t}\n\t}\n\n\tfor (const key of Object.keys(mediaQueries)) {\n\t\tcssInJs[key] = mediaQueries[key];\n\t}\n\n\treturn cssInJs;\n}\n\nexec();\n"]}}