{"code":"(()=>{\n\"use strict\";var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});let Container=require(\"./container\");let LazyResult,Processor;class Root extends Container{constructor(defaults){super(defaults);this.type=\"root\";if(!this.nodes)this.nodes=[]}removeChild(child,ignore){let index=this.index(child);if(!ignore&&index===0&&this.nodes.length>1){this.nodes[1].raws.before=this.nodes[index].raws.before}return super.removeChild(child)}normalize(child,sample,type){let nodes=super.normalize(child);if(sample){if(type===\"prepend\"){if(this.nodes.length>1){sample.raws.before=this.nodes[1].raws.before}else{delete sample.raws.before}}else if(this.first!==sample){for(let node of nodes){node.raws.before=sample.raws.before}}}return nodes}toResult(opts={}){let lazy=new LazyResult(new Processor,this,opts);return lazy.stringify()}}__name(Root,\"Root\");Root.registerLazyResult=dependant=>{LazyResult=dependant};Root.registerProcessor=dependant=>{Processor=dependant};module.exports=Root;Root.default=Root;Container.registerRoot(Root);\n})()\n","warnings":[],"map":{"version":3,"mappings":";+HAEA,IAAI,UAAY,QAAQ,aAAa,EAErC,IAAI,WAAY,UAEhB,MAAM,aAAa,SAAU,CAC3B,YAAY,SAAU,CACpB,MAAM,QAAQ,EACd,KAAK,KAAO,OACZ,GAAI,CAAC,KAAK,MAAO,KAAK,MAAQ,CAAC,CACjC,CAEA,YAAY,MAAO,OAAQ,CACzB,IAAI,MAAQ,KAAK,MAAM,KAAK,EAE5B,GAAI,CAAC,QAAU,QAAU,GAAK,KAAK,MAAM,OAAS,EAAG,CACnD,KAAK,MAAM,CAAC,EAAE,KAAK,OAAS,KAAK,MAAM,KAAK,EAAE,KAAK,MACrD,CAEA,OAAO,MAAM,YAAY,KAAK,CAChC,CAEA,UAAU,MAAO,OAAQ,KAAM,CAC7B,IAAI,MAAQ,MAAM,UAAU,KAAK,EAEjC,GAAI,OAAQ,CACV,GAAI,OAAS,UAAW,CACtB,GAAI,KAAK,MAAM,OAAS,EAAG,CACzB,OAAO,KAAK,OAAS,KAAK,MAAM,CAAC,EAAE,KAAK,MAC1C,KAAO,CACL,OAAO,OAAO,KAAK,MACrB,CACF,SAAW,KAAK,QAAU,OAAQ,CAChC,QAAS,QAAQ,MAAO,CACtB,KAAK,KAAK,OAAS,OAAO,KAAK,MACjC,CACF,CACF,CAEA,OAAO,KACT,CAEA,SAAS,KAAO,CAAC,EAAG,CAClB,IAAI,KAAO,IAAI,WAAW,IAAI,UAAa,KAAM,IAAI,EACrD,OAAO,KAAK,UAAU,CACxB,CACF,CAzCM,oBA2CN,KAAK,mBAAqB,WAAa,CACrC,WAAa,SACf,EAEA,KAAK,kBAAoB,WAAa,CACpC,UAAY,SACd,EAEA,OAAO,QAAU,KACjB,KAAK,QAAU,KAEf,UAAU,aAAa,IAAI","names":[],"sources":["/root/projects/zachw-i/packages/plugin/node_modules/.pnpm/postcss@8.4.24/node_modules/postcss/lib/root.js"],"sourcesContent":["'use strict'\n\nlet Container = require('./container')\n\nlet LazyResult, Processor\n\nclass Root extends Container {\n  constructor(defaults) {\n    super(defaults)\n    this.type = 'root'\n    if (!this.nodes) this.nodes = []\n  }\n\n  removeChild(child, ignore) {\n    let index = this.index(child)\n\n    if (!ignore && index === 0 && this.nodes.length > 1) {\n      this.nodes[1].raws.before = this.nodes[index].raws.before\n    }\n\n    return super.removeChild(child)\n  }\n\n  normalize(child, sample, type) {\n    let nodes = super.normalize(child)\n\n    if (sample) {\n      if (type === 'prepend') {\n        if (this.nodes.length > 1) {\n          sample.raws.before = this.nodes[1].raws.before\n        } else {\n          delete sample.raws.before\n        }\n      } else if (this.first !== sample) {\n        for (let node of nodes) {\n          node.raws.before = sample.raws.before\n        }\n      }\n    }\n\n    return nodes\n  }\n\n  toResult(opts = {}) {\n    let lazy = new LazyResult(new Processor(), this, opts)\n    return lazy.stringify()\n  }\n}\n\nRoot.registerLazyResult = dependant => {\n  LazyResult = dependant\n}\n\nRoot.registerProcessor = dependant => {\n  Processor = dependant\n}\n\nmodule.exports = Root\nRoot.default = Root\n\nContainer.registerRoot(Root)\n"]}}