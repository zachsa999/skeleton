{"code":"(()=>{\nvar __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});var base64VLQ=require(\"./base64-vlq\");var util=require(\"./util\");var ArraySet=require(\"./array-set\").ArraySet;var MappingList=require(\"./mapping-list\").MappingList;function SourceMapGenerator(aArgs){if(!aArgs){aArgs={}}this._file=util.getArg(aArgs,\"file\",null);this._sourceRoot=util.getArg(aArgs,\"sourceRoot\",null);this._skipValidation=util.getArg(aArgs,\"skipValidation\",false);this._sources=new ArraySet;this._names=new ArraySet;this._mappings=new MappingList;this._sourcesContents=null}__name(SourceMapGenerator,\"SourceMapGenerator\");SourceMapGenerator.prototype._version=3;SourceMapGenerator.fromSourceMap=__name(function SourceMapGenerator_fromSourceMap(aSourceMapConsumer){var sourceRoot=aSourceMapConsumer.sourceRoot;var generator=new SourceMapGenerator({file:aSourceMapConsumer.file,sourceRoot});aSourceMapConsumer.eachMapping(function(mapping){var newMapping={generated:{line:mapping.generatedLine,column:mapping.generatedColumn}};if(mapping.source!=null){newMapping.source=mapping.source;if(sourceRoot!=null){newMapping.source=util.relative(sourceRoot,newMapping.source)}newMapping.original={line:mapping.originalLine,column:mapping.originalColumn};if(mapping.name!=null){newMapping.name=mapping.name}}generator.addMapping(newMapping)});aSourceMapConsumer.sources.forEach(function(sourceFile){var sourceRelative=sourceFile;if(sourceRoot!==null){sourceRelative=util.relative(sourceRoot,sourceFile)}if(!generator._sources.has(sourceRelative)){generator._sources.add(sourceRelative)}var content=aSourceMapConsumer.sourceContentFor(sourceFile);if(content!=null){generator.setSourceContent(sourceFile,content)}});return generator},\"SourceMapGenerator_fromSourceMap\");SourceMapGenerator.prototype.addMapping=__name(function SourceMapGenerator_addMapping(aArgs){var generated=util.getArg(aArgs,\"generated\");var original=util.getArg(aArgs,\"original\",null);var source=util.getArg(aArgs,\"source\",null);var name=util.getArg(aArgs,\"name\",null);if(!this._skipValidation){this._validateMapping(generated,original,source,name)}if(source!=null){source=String(source);if(!this._sources.has(source)){this._sources.add(source)}}if(name!=null){name=String(name);if(!this._names.has(name)){this._names.add(name)}}this._mappings.add({generatedLine:generated.line,generatedColumn:generated.column,originalLine:original!=null&&original.line,originalColumn:original!=null&&original.column,source,name})},\"SourceMapGenerator_addMapping\");SourceMapGenerator.prototype.setSourceContent=__name(function SourceMapGenerator_setSourceContent(aSourceFile,aSourceContent){var source=aSourceFile;if(this._sourceRoot!=null){source=util.relative(this._sourceRoot,source)}if(aSourceContent!=null){if(!this._sourcesContents){this._sourcesContents=Object.create(null)}this._sourcesContents[util.toSetString(source)]=aSourceContent}else if(this._sourcesContents){delete this._sourcesContents[util.toSetString(source)];if(Object.keys(this._sourcesContents).length===0){this._sourcesContents=null}}},\"SourceMapGenerator_setSourceContent\");SourceMapGenerator.prototype.applySourceMap=__name(function SourceMapGenerator_applySourceMap(aSourceMapConsumer,aSourceFile,aSourceMapPath){var sourceFile=aSourceFile;if(aSourceFile==null){if(aSourceMapConsumer.file==null){throw new Error(`SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, or the source map's \"file\" property. Both were omitted.`)}sourceFile=aSourceMapConsumer.file}var sourceRoot=this._sourceRoot;if(sourceRoot!=null){sourceFile=util.relative(sourceRoot,sourceFile)}var newSources=new ArraySet;var newNames=new ArraySet;this._mappings.unsortedForEach(function(mapping){if(mapping.source===sourceFile&&mapping.originalLine!=null){var original=aSourceMapConsumer.originalPositionFor({line:mapping.originalLine,column:mapping.originalColumn});if(original.source!=null){mapping.source=original.source;if(aSourceMapPath!=null){mapping.source=util.join(aSourceMapPath,mapping.source)}if(sourceRoot!=null){mapping.source=util.relative(sourceRoot,mapping.source)}mapping.originalLine=original.line;mapping.originalColumn=original.column;if(original.name!=null){mapping.name=original.name}}}var source=mapping.source;if(source!=null&&!newSources.has(source)){newSources.add(source)}var name=mapping.name;if(name!=null&&!newNames.has(name)){newNames.add(name)}},this);this._sources=newSources;this._names=newNames;aSourceMapConsumer.sources.forEach(function(sourceFile2){var content=aSourceMapConsumer.sourceContentFor(sourceFile2);if(content!=null){if(aSourceMapPath!=null){sourceFile2=util.join(aSourceMapPath,sourceFile2)}if(sourceRoot!=null){sourceFile2=util.relative(sourceRoot,sourceFile2)}this.setSourceContent(sourceFile2,content)}},this)},\"SourceMapGenerator_applySourceMap\");SourceMapGenerator.prototype._validateMapping=__name(function SourceMapGenerator_validateMapping(aGenerated,aOriginal,aSource,aName){if(aOriginal&&typeof aOriginal.line!==\"number\"&&typeof aOriginal.column!==\"number\"){throw new Error(\"original.line and original.column are not numbers -- you probably meant to omit the original mapping entirely and only map the generated position. If so, pass null for the original mapping instead of an object with empty or null values.\")}if(aGenerated&&\"line\"in aGenerated&&\"column\"in aGenerated&&aGenerated.line>0&&aGenerated.column>=0&&!aOriginal&&!aSource&&!aName){return}else if(aGenerated&&\"line\"in aGenerated&&\"column\"in aGenerated&&aOriginal&&\"line\"in aOriginal&&\"column\"in aOriginal&&aGenerated.line>0&&aGenerated.column>=0&&aOriginal.line>0&&aOriginal.column>=0&&aSource){return}else{throw new Error(\"Invalid mapping: \"+JSON.stringify({generated:aGenerated,source:aSource,original:aOriginal,name:aName}))}},\"SourceMapGenerator_validateMapping\");SourceMapGenerator.prototype._serializeMappings=__name(function SourceMapGenerator_serializeMappings(){var previousGeneratedColumn=0;var previousGeneratedLine=1;var previousOriginalColumn=0;var previousOriginalLine=0;var previousName=0;var previousSource=0;var result=\"\";var next;var mapping;var nameIdx;var sourceIdx;var mappings=this._mappings.toArray();for(var i=0,len=mappings.length;i<len;i++){mapping=mappings[i];next=\"\";if(mapping.generatedLine!==previousGeneratedLine){previousGeneratedColumn=0;while(mapping.generatedLine!==previousGeneratedLine){next+=\";\";previousGeneratedLine++}}else{if(i>0){if(!util.compareByGeneratedPositionsInflated(mapping,mappings[i-1])){continue}next+=\",\"}}next+=base64VLQ.encode(mapping.generatedColumn-previousGeneratedColumn);previousGeneratedColumn=mapping.generatedColumn;if(mapping.source!=null){sourceIdx=this._sources.indexOf(mapping.source);next+=base64VLQ.encode(sourceIdx-previousSource);previousSource=sourceIdx;next+=base64VLQ.encode(mapping.originalLine-1-previousOriginalLine);previousOriginalLine=mapping.originalLine-1;next+=base64VLQ.encode(mapping.originalColumn-previousOriginalColumn);previousOriginalColumn=mapping.originalColumn;if(mapping.name!=null){nameIdx=this._names.indexOf(mapping.name);next+=base64VLQ.encode(nameIdx-previousName);previousName=nameIdx}}result+=next}return result},\"SourceMapGenerator_serializeMappings\");SourceMapGenerator.prototype._generateSourcesContent=__name(function SourceMapGenerator_generateSourcesContent(aSources,aSourceRoot){return aSources.map(function(source){if(!this._sourcesContents){return null}if(aSourceRoot!=null){source=util.relative(aSourceRoot,source)}var key=util.toSetString(source);return Object.prototype.hasOwnProperty.call(this._sourcesContents,key)?this._sourcesContents[key]:null},this)},\"SourceMapGenerator_generateSourcesContent\");SourceMapGenerator.prototype.toJSON=__name(function SourceMapGenerator_toJSON(){var map={version:this._version,sources:this._sources.toArray(),names:this._names.toArray(),mappings:this._serializeMappings()};if(this._file!=null){map.file=this._file}if(this._sourceRoot!=null){map.sourceRoot=this._sourceRoot}if(this._sourcesContents){map.sourcesContent=this._generateSourcesContent(map.sources,map.sourceRoot)}return map},\"SourceMapGenerator_toJSON\");SourceMapGenerator.prototype.toString=__name(function SourceMapGenerator_toString(){return JSON.stringify(this.toJSON())},\"SourceMapGenerator_toString\");exports.SourceMapGenerator=SourceMapGenerator;\n})()\n","warnings":[],"map":{"version":3,"mappings":"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","names":["sourceFile"],"sources":["/root/projects/zachw-i/packages/plugin/node_modules/.pnpm/source-map-js@1.0.2/node_modules/source-map-js/lib/source-map-generator.js"],"sourcesContent":["/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar base64VLQ = require('./base64-vlq');\nvar util = require('./util');\nvar ArraySet = require('./array-set').ArraySet;\nvar MappingList = require('./mapping-list').MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nfunction SourceMapGenerator(aArgs) {\n  if (!aArgs) {\n    aArgs = {};\n  }\n  this._file = util.getArg(aArgs, 'file', null);\n  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n  this._mappings = new MappingList();\n  this._sourcesContents = null;\n}\n\nSourceMapGenerator.prototype._version = 3;\n\n/**\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\n *\n * @param aSourceMapConsumer The SourceMap.\n */\nSourceMapGenerator.fromSourceMap =\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\n    var generator = new SourceMapGenerator({\n      file: aSourceMapConsumer.file,\n      sourceRoot: sourceRoot\n    });\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      var newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var sourceRelative = sourceFile;\n      if (sourceRoot !== null) {\n        sourceRelative = util.relative(sourceRoot, sourceFile);\n      }\n\n      if (!generator._sources.has(sourceRelative)) {\n        generator._sources.add(sourceRelative);\n      }\n\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  };\n\n/**\n * Add a single mapping from original source line and column to the generated\n * source's line and column for this source map being created. The mapping\n * object should have the following properties:\n *\n *   - generated: An object with the generated line and column positions.\n *   - original: An object with the original line and column positions.\n *   - source: The original source file (relative to the sourceRoot).\n *   - name: An optional original token name for this mapping.\n */\nSourceMapGenerator.prototype.addMapping =\n  function SourceMapGenerator_addMapping(aArgs) {\n    var generated = util.getArg(aArgs, 'generated');\n    var original = util.getArg(aArgs, 'original', null);\n    var source = util.getArg(aArgs, 'source', null);\n    var name = util.getArg(aArgs, 'name', null);\n\n    if (!this._skipValidation) {\n      this._validateMapping(generated, original, source, name);\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source: source,\n      name: name\n    });\n  };\n\n/**\n * Set the source content for a source file.\n */\nSourceMapGenerator.prototype.setSourceContent =\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n    var source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  };\n\n/**\n * Applies the mappings of a sub-source-map for a specific source file to the\n * source map being generated. Each mapping to the supplied source file is\n * rewritten using the supplied source map. Note: The resolution for the\n * resulting mappings is the minimium of this map and the supplied map.\n *\n * @param aSourceMapConsumer The source map to be applied.\n * @param aSourceFile Optional. The filename of the source file.\n *        If omitted, SourceMapConsumer's file property will be used.\n * @param aSourceMapPath Optional. The dirname of the path to the source map\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\n *        This parameter is needed when the two source maps aren't in the same\n *        directory, and the source map to be applied contains relative source\n *        paths. If so, those relative source paths need to be rewritten\n *        relative to the SourceMapGenerator.\n */\nSourceMapGenerator.prototype.applySourceMap =\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    var sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    var sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    var newSources = new ArraySet();\n    var newNames = new ArraySet();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function (mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        var original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source)\n          }\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      var source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      var name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          sourceFile = util.join(aSourceMapPath, sourceFile);\n        }\n        if (sourceRoot != null) {\n          sourceFile = util.relative(sourceRoot, sourceFile);\n        }\n        this.setSourceContent(sourceFile, content);\n      }\n    }, this);\n  };\n\n/**\n * A mapping can have one of the three levels of data:\n *\n *   1. Just the generated position.\n *   2. The Generated position, original position, and original source.\n *   3. Generated and original position, original source, as well as a name\n *      token.\n *\n * To maintain consistency, we validate that any new mapping being added falls\n * in to one of these categories.\n */\nSourceMapGenerator.prototype._validateMapping =\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                              aName) {\n    // When aOriginal is truthy but has empty values for .line and .column,\n    // it is most likely a programmer error. In this case we throw a very\n    // specific error message to try to guide them the right way.\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\n    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {\n        throw new Error(\n            'original.line and original.column are not numbers -- you probably meant to omit ' +\n            'the original mapping entirely and only map the generated position. If so, pass ' +\n            'null for the original mapping instead of an object with empty or null values.'\n        );\n    }\n\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n      return;\n    }\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n      return;\n    }\n    else {\n      throw new Error('Invalid mapping: ' + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      }));\n    }\n  };\n\n/**\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\n * specified by the source map format.\n */\nSourceMapGenerator.prototype._serializeMappings =\n  function SourceMapGenerator_serializeMappings() {\n    var previousGeneratedColumn = 0;\n    var previousGeneratedLine = 1;\n    var previousOriginalColumn = 0;\n    var previousOriginalLine = 0;\n    var previousName = 0;\n    var previousSource = 0;\n    var result = '';\n    var next;\n    var mapping;\n    var nameIdx;\n    var sourceIdx;\n\n    var mappings = this._mappings.toArray();\n    for (var i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = ''\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += ';';\n          previousGeneratedLine++;\n        }\n      }\n      else {\n        if (i > 0) {\n          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n          next += ',';\n        }\n      }\n\n      next += base64VLQ.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64VLQ.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64VLQ.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64VLQ.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  };\n\nSourceMapGenerator.prototype._generateSourcesContent =\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function (source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n      var key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  };\n\n/**\n * Externalize the source map.\n */\nSourceMapGenerator.prototype.toJSON =\n  function SourceMapGenerator_toJSON() {\n    var map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  };\n\n/**\n * Render the source map being generated to a string.\n */\nSourceMapGenerator.prototype.toString =\n  function SourceMapGenerator_toString() {\n    return JSON.stringify(this.toJSON());\n  };\n\nexports.SourceMapGenerator = SourceMapGenerator;\n"]}}