{"code":"(()=>{\n\"use strict\";var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});/*! https://mths.be/cssesc v3.0.0 by @mathias */var object={};var hasOwnProperty=object.hasOwnProperty;var merge=__name(function merge2(options,defaults){if(!options){return defaults}var result={};for(var key in defaults){result[key]=hasOwnProperty.call(options,key)?options[key]:defaults[key]}return result},\"merge\");var regexAnySingleEscape=/[ -,\\.\\/:-@\\[-\\^`\\{-~]/;var regexSingleEscape=/[ -,\\.\\/:-@\\[\\]\\^`\\{-~]/;var regexAlwaysEscape=/['\"\\\\]/;var regexExcessiveSpaces=/(^|\\\\+)?(\\\\[A-F0-9]{1,6})\\x20(?![a-fA-F0-9\\x20])/g;var cssesc=__name(function cssesc2(string,options){options=merge(options,cssesc2.options);if(options.quotes!=\"single\"&&options.quotes!=\"double\"){options.quotes=\"single\"}var quote=options.quotes==\"double\"?'\"':\"'\";var isIdentifier=options.isIdentifier;var firstChar=string.charAt(0);var output=\"\";var counter=0;var length=string.length;while(counter<length){var character=string.charAt(counter++);var codePoint=character.charCodeAt();var value=void 0;if(codePoint<32||codePoint>126){if(codePoint>=55296&&codePoint<=56319&&counter<length){var extra=string.charCodeAt(counter++);if((extra&64512)==56320){codePoint=((codePoint&1023)<<10)+(extra&1023)+65536}else{counter--}}value=\"\\\\\"+codePoint.toString(16).toUpperCase()+\" \"}else{if(options.escapeEverything){if(regexAnySingleEscape.test(character)){value=\"\\\\\"+character}else{value=\"\\\\\"+codePoint.toString(16).toUpperCase()+\" \"}}else if(/[\\t\\n\\f\\r\\x0B]/.test(character)){value=\"\\\\\"+codePoint.toString(16).toUpperCase()+\" \"}else if(character==\"\\\\\"||!isIdentifier&&(character=='\"'&&quote==character||character==\"'\"&&quote==character)||isIdentifier&&regexSingleEscape.test(character)){value=\"\\\\\"+character}else{value=character}}output+=value}if(isIdentifier){if(/^-[-\\d]/.test(output)){output=\"\\\\-\"+output.slice(1)}else if(/\\d/.test(firstChar)){output=\"\\\\3\"+firstChar+\" \"+output.slice(1)}}output=output.replace(regexExcessiveSpaces,function($0,$1,$2){if($1&&$1.length%2){return $0}return($1||\"\")+$2});if(!isIdentifier&&options.wrap){return quote+output+quote}return output},\"cssesc\");cssesc.options={\"escapeEverything\":false,\"isIdentifier\":false,\"quotes\":\"single\",\"wrap\":false};cssesc.version=\"3.0.0\";module.exports=cssesc;\n})()\n","warnings":[],"map":{"version":3,"mappings":";+HAAA,gDAGA,IAAI,OAAS,CAAC,EACd,IAAI,eAAiB,OAAO,eAC5B,IAAI,MAAQ,gBAASA,OAAM,QAAS,SAAU,CAC7C,GAAI,CAAC,QAAS,CACb,OAAO,QACR,CACA,IAAI,OAAS,CAAC,EACd,QAAS,OAAO,SAAU,CAGzB,OAAO,GAAG,EAAI,eAAe,KAAK,QAAS,GAAG,EAAI,QAAQ,GAAG,EAAI,SAAS,GAAG,CAC9E,CACA,OAAO,MACR,EAXY,SAaZ,IAAI,qBAAuB,yBAC3B,IAAI,kBAAoB,0BACxB,IAAI,kBAAoB,SACxB,IAAI,qBAAuB,oDAG3B,IAAI,OAAS,gBAASC,QAAO,OAAQ,QAAS,CAC7C,QAAU,MAAM,QAASA,QAAO,OAAO,EACvC,GAAI,QAAQ,QAAU,UAAY,QAAQ,QAAU,SAAU,CAC7D,QAAQ,OAAS,QAClB,CACA,IAAI,MAAQ,QAAQ,QAAU,SAAW,IAAM,IAC/C,IAAI,aAAe,QAAQ,aAE3B,IAAI,UAAY,OAAO,OAAO,CAAC,EAC/B,IAAI,OAAS,GACb,IAAI,QAAU,EACd,IAAI,OAAS,OAAO,OACpB,MAAO,QAAU,OAAQ,CACxB,IAAI,UAAY,OAAO,OAAO,SAAS,EACvC,IAAI,UAAY,UAAU,WAAW,EACrC,IAAI,MAAQ,OAEZ,GAAI,UAAY,IAAQ,UAAY,IAAM,CACzC,GAAI,WAAa,OAAU,WAAa,OAAU,QAAU,OAAQ,CAEnE,IAAI,MAAQ,OAAO,WAAW,SAAS,EACvC,IAAK,MAAQ,QAAW,MAAQ,CAE/B,YAAc,UAAY,OAAU,KAAO,MAAQ,MAAS,KAC7D,KAAO,CAGN,SACD,CACD,CACA,MAAQ,KAAO,UAAU,SAAS,EAAE,EAAE,YAAY,EAAI,GACvD,KAAO,CACN,GAAI,QAAQ,iBAAkB,CAC7B,GAAI,qBAAqB,KAAK,SAAS,EAAG,CACzC,MAAQ,KAAO,SAChB,KAAO,CACN,MAAQ,KAAO,UAAU,SAAS,EAAE,EAAE,YAAY,EAAI,GACvD,CACD,SAAW,iBAAiB,KAAK,SAAS,EAAG,CAC5C,MAAQ,KAAO,UAAU,SAAS,EAAE,EAAE,YAAY,EAAI,GACvD,SAAW,WAAa,MAAQ,CAAC,eAAiB,WAAa,KAAO,OAAS,WAAa,WAAa,KAAQ,OAAS,YAAc,cAAgB,kBAAkB,KAAK,SAAS,EAAG,CAC1L,MAAQ,KAAO,SAChB,KAAO,CACN,MAAQ,SACT,CACD,CACA,QAAU,KACX,CAEA,GAAI,aAAc,CACjB,GAAI,UAAU,KAAK,MAAM,EAAG,CAC3B,OAAS,MAAQ,OAAO,MAAM,CAAC,CAChC,SAAW,KAAK,KAAK,SAAS,EAAG,CAChC,OAAS,MAAQ,UAAY,IAAM,OAAO,MAAM,CAAC,CAClD,CACD,CAKA,OAAS,OAAO,QAAQ,qBAAsB,SAAU,GAAI,GAAI,GAAI,CACnE,GAAI,IAAM,GAAG,OAAS,EAAG,CAExB,OAAO,EACR,CAEA,OAAQ,IAAM,IAAM,EACrB,CAAC,EAED,GAAI,CAAC,cAAgB,QAAQ,KAAM,CAClC,OAAO,MAAQ,OAAS,KACzB,CACA,OAAO,MACR,EAzEa,UA4Eb,OAAO,QAAU,CAChB,mBAAoB,MACpB,eAAgB,MAChB,SAAU,SACV,OAAQ,KACT,EAEA,OAAO,QAAU,QAEjB,OAAO,QAAU","names":["merge","cssesc"],"sources":["/root/projects/zachw-i/packages/plugin/node_modules/.pnpm/cssesc@3.0.0/node_modules/cssesc/cssesc.js"],"sourcesContent":["/*! https://mths.be/cssesc v3.0.0 by @mathias */\n'use strict';\n\nvar object = {};\nvar hasOwnProperty = object.hasOwnProperty;\nvar merge = function merge(options, defaults) {\n\tif (!options) {\n\t\treturn defaults;\n\t}\n\tvar result = {};\n\tfor (var key in defaults) {\n\t\t// `if (defaults.hasOwnProperty(key) { … }` is not needed here, since\n\t\t// only recognized option names are used.\n\t\tresult[key] = hasOwnProperty.call(options, key) ? options[key] : defaults[key];\n\t}\n\treturn result;\n};\n\nvar regexAnySingleEscape = /[ -,\\.\\/:-@\\[-\\^`\\{-~]/;\nvar regexSingleEscape = /[ -,\\.\\/:-@\\[\\]\\^`\\{-~]/;\nvar regexAlwaysEscape = /['\"\\\\]/;\nvar regexExcessiveSpaces = /(^|\\\\+)?(\\\\[A-F0-9]{1,6})\\x20(?![a-fA-F0-9\\x20])/g;\n\n// https://mathiasbynens.be/notes/css-escapes#css\nvar cssesc = function cssesc(string, options) {\n\toptions = merge(options, cssesc.options);\n\tif (options.quotes != 'single' && options.quotes != 'double') {\n\t\toptions.quotes = 'single';\n\t}\n\tvar quote = options.quotes == 'double' ? '\"' : '\\'';\n\tvar isIdentifier = options.isIdentifier;\n\n\tvar firstChar = string.charAt(0);\n\tvar output = '';\n\tvar counter = 0;\n\tvar length = string.length;\n\twhile (counter < length) {\n\t\tvar character = string.charAt(counter++);\n\t\tvar codePoint = character.charCodeAt();\n\t\tvar value = void 0;\n\t\t// If it’s not a printable ASCII character…\n\t\tif (codePoint < 0x20 || codePoint > 0x7E) {\n\t\t\tif (codePoint >= 0xD800 && codePoint <= 0xDBFF && counter < length) {\n\t\t\t\t// It’s a high surrogate, and there is a next character.\n\t\t\t\tvar extra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) {\n\t\t\t\t\t// next character is low surrogate\n\t\t\t\t\tcodePoint = ((codePoint & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000;\n\t\t\t\t} else {\n\t\t\t\t\t// It’s an unmatched surrogate; only append this code unit, in case\n\t\t\t\t\t// the next code unit is the high surrogate of a surrogate pair.\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvalue = '\\\\' + codePoint.toString(16).toUpperCase() + ' ';\n\t\t} else {\n\t\t\tif (options.escapeEverything) {\n\t\t\t\tif (regexAnySingleEscape.test(character)) {\n\t\t\t\t\tvalue = '\\\\' + character;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = '\\\\' + codePoint.toString(16).toUpperCase() + ' ';\n\t\t\t\t}\n\t\t\t} else if (/[\\t\\n\\f\\r\\x0B]/.test(character)) {\n\t\t\t\tvalue = '\\\\' + codePoint.toString(16).toUpperCase() + ' ';\n\t\t\t} else if (character == '\\\\' || !isIdentifier && (character == '\"' && quote == character || character == '\\'' && quote == character) || isIdentifier && regexSingleEscape.test(character)) {\n\t\t\t\tvalue = '\\\\' + character;\n\t\t\t} else {\n\t\t\t\tvalue = character;\n\t\t\t}\n\t\t}\n\t\toutput += value;\n\t}\n\n\tif (isIdentifier) {\n\t\tif (/^-[-\\d]/.test(output)) {\n\t\t\toutput = '\\\\-' + output.slice(1);\n\t\t} else if (/\\d/.test(firstChar)) {\n\t\t\toutput = '\\\\3' + firstChar + ' ' + output.slice(1);\n\t\t}\n\t}\n\n\t// Remove spaces after `\\HEX` escapes that are not followed by a hex digit,\n\t// since they’re redundant. Note that this is only possible if the escape\n\t// sequence isn’t preceded by an odd number of backslashes.\n\toutput = output.replace(regexExcessiveSpaces, function ($0, $1, $2) {\n\t\tif ($1 && $1.length % 2) {\n\t\t\t// It’s not safe to remove the space, so don’t.\n\t\t\treturn $0;\n\t\t}\n\t\t// Strip the space.\n\t\treturn ($1 || '') + $2;\n\t});\n\n\tif (!isIdentifier && options.wrap) {\n\t\treturn quote + output + quote;\n\t}\n\treturn output;\n};\n\n// Expose default options (so they can be overridden globally).\ncssesc.options = {\n\t'escapeEverything': false,\n\t'isIdentifier': false,\n\t'quotes': 'single',\n\t'wrap': false\n};\n\ncssesc.version = '3.0.0';\n\nmodule.exports = cssesc;\n"]}}