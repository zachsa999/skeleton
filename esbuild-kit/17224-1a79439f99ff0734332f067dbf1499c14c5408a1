{"code":"(()=>{\n\"use strict\";var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});Object.defineProperty(exports,\"__esModule\",{value:true});Object.defineProperty(exports,\"backgroundSize\",{enumerable:true,get:function(){return backgroundSize}});const _dataTypes=require(\"./dataTypes\");const _splitAtTopLevelOnly=require(\"./splitAtTopLevelOnly\");function backgroundSize(value){let keywordValues=[\"cover\",\"contain\"];return(0,_splitAtTopLevelOnly.splitAtTopLevelOnly)(value,\",\").every(part=>{let sizes=(0,_splitAtTopLevelOnly.splitAtTopLevelOnly)(part,\"_\").filter(Boolean);if(sizes.length===1&&keywordValues.includes(sizes[0]))return true;if(sizes.length!==1&&sizes.length!==2)return false;return sizes.every(size=>(0,_dataTypes.length)(size)||(0,_dataTypes.percentage)(size)||size===\"auto\")})}__name(backgroundSize,\"backgroundSize\");\n})()\n","warnings":[],"map":{"version":3,"mappings":";+HACA,OAAO,eAAe,QAAS,aAAc,CACzC,MAAO,IACX,CAAC,EACD,OAAO,eAAe,QAAS,iBAAkB,CAC7C,WAAY,KACZ,IAAK,UAAW,CACZ,OAAO,cACX,CACJ,CAAC,EACD,MAAM,WAAa,QAAQ,aAAa,EACxC,MAAM,qBAAuB,QAAQ,uBAAuB,EAC5D,SAAS,eAAe,MAAO,CAC3B,IAAI,cAAgB,CAChB,QACA,SACJ,EAGA,OAAQ,EAAG,qBAAqB,qBAAqB,MAAO,GAAG,EAAE,MAAO,MAAO,CAC3E,IAAI,OAAS,EAAG,qBAAqB,qBAAqB,KAAM,GAAG,EAAE,OAAO,OAAO,EACnF,GAAI,MAAM,SAAW,GAAK,cAAc,SAAS,MAAM,CAAC,CAAC,EAAG,MAAO,MACnE,GAAI,MAAM,SAAW,GAAK,MAAM,SAAW,EAAG,MAAO,OACrD,OAAO,MAAM,MAAO,OAAQ,EAAG,WAAW,QAAQ,IAAI,IAAM,EAAG,WAAW,YAAY,IAAI,GAAK,OAAS,MAAM,CAClH,CAAC,CACL,CAbS","names":[],"sources":["/root/projects/zachw-i/packages/plugin/node_modules/.pnpm/tailwindcss@3.3.2/node_modules/tailwindcss/lib/util/validateFormalSyntax.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"backgroundSize\", {\n    enumerable: true,\n    get: function() {\n        return backgroundSize;\n    }\n});\nconst _dataTypes = require(\"./dataTypes\");\nconst _splitAtTopLevelOnly = require(\"./splitAtTopLevelOnly\");\nfunction backgroundSize(value) {\n    let keywordValues = [\n        \"cover\",\n        \"contain\"\n    ];\n    // the <length-percentage> type will probably be a css function\n    // so we have to use `splitAtTopLevelOnly`\n    return (0, _splitAtTopLevelOnly.splitAtTopLevelOnly)(value, \",\").every((part)=>{\n        let sizes = (0, _splitAtTopLevelOnly.splitAtTopLevelOnly)(part, \"_\").filter(Boolean);\n        if (sizes.length === 1 && keywordValues.includes(sizes[0])) return true;\n        if (sizes.length !== 1 && sizes.length !== 2) return false;\n        return sizes.every((size)=>(0, _dataTypes.length)(size) || (0, _dataTypes.percentage)(size) || size === \"auto\");\n    });\n}\n"]}}