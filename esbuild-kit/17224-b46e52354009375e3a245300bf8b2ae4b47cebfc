{"code":"(()=>{\n\"use strict\";var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});Object.defineProperty(exports,\"__esModule\",{value:true});Object.defineProperty(exports,\"default\",{enumerable:true,get:function(){return _default}});const _dlv=_interop_require_default(require(\"dlv\"));const _didyoumean=_interop_require_default(require(\"didyoumean\"));const _transformThemeValue=_interop_require_default(require(\"../util/transformThemeValue\"));const _postcssvalueparser=_interop_require_default(require(\"postcss-value-parser\"));const _normalizeScreens=require(\"../util/normalizeScreens\");const _buildMediaQuery=_interop_require_default(require(\"../util/buildMediaQuery\"));const _toPath=require(\"../util/toPath\");const _withAlphaVariable=require(\"../util/withAlphaVariable\");const _pluginUtils=require(\"../util/pluginUtils\");const _log=_interop_require_default(require(\"../util/log\"));function _interop_require_default(obj){return obj&&obj.__esModule?obj:{default:obj}}__name(_interop_require_default,\"_interop_require_default\");function isObject(input){return typeof input===\"object\"&&input!==null}__name(isObject,\"isObject\");function findClosestExistingPath(theme,path){let parts=(0,_toPath.toPath)(path);do{parts.pop();if((0,_dlv.default)(theme,parts)!==void 0)break}while(parts.length);return parts.length?parts:void 0}__name(findClosestExistingPath,\"findClosestExistingPath\");function pathToString(path){if(typeof path===\"string\")return path;return path.reduce((acc,cur,i)=>{if(cur.includes(\".\"))return`${acc}[${cur}]`;return i===0?cur:`${acc}.${cur}`},\"\")}__name(pathToString,\"pathToString\");function list(items){return items.map(key=>`'${key}'`).join(\", \")}__name(list,\"list\");function listKeys(obj){return list(Object.keys(obj))}__name(listKeys,\"listKeys\");function validatePath(config,path,defaultValue,themeOpts={}){const pathString=Array.isArray(path)?pathToString(path):path.replace(/^['\"]+|['\"]+$/g,\"\");const pathSegments=Array.isArray(path)?path:(0,_toPath.toPath)(pathString);const value=(0,_dlv.default)(config.theme,pathSegments,defaultValue);if(value===void 0){let error=`'${pathString}' does not exist in your theme config.`;const parentSegments=pathSegments.slice(0,-1);const parentValue=(0,_dlv.default)(config.theme,parentSegments);if(isObject(parentValue)){const validKeys=Object.keys(parentValue).filter(key=>validatePath(config,[...parentSegments,key]).isValid);const suggestion=(0,_didyoumean.default)(pathSegments[pathSegments.length-1],validKeys);if(suggestion){error+=` Did you mean '${pathToString([...parentSegments,suggestion])}'?`}else if(validKeys.length>0){error+=` '${pathToString(parentSegments)}' has the following valid keys: ${list(validKeys)}`}}else{const closestPath=findClosestExistingPath(config.theme,pathString);if(closestPath){const closestValue=(0,_dlv.default)(config.theme,closestPath);if(isObject(closestValue)){error+=` '${pathToString(closestPath)}' has the following keys: ${listKeys(closestValue)}`}else{error+=` '${pathToString(closestPath)}' is not an object.`}}else{error+=` Your theme has the following top-level keys: ${listKeys(config.theme)}`}}return{isValid:false,error}}if(!(typeof value===\"string\"||typeof value===\"number\"||typeof value===\"function\"||value instanceof String||value instanceof Number||Array.isArray(value))){let error=`'${pathString}' was found but does not resolve to a string.`;if(isObject(value)){let validKeys=Object.keys(value).filter(key=>validatePath(config,[...pathSegments,key]).isValid);if(validKeys.length){error+=` Did you mean something like '${pathToString([...pathSegments,validKeys[0]])}'?`}}return{isValid:false,error}}const[themeSection]=pathSegments;return{isValid:true,value:(0,_transformThemeValue.default)(themeSection)(value,themeOpts)}}__name(validatePath,\"validatePath\");function extractArgs(node,vNodes,functions){vNodes=vNodes.map(vNode=>resolveVNode(node,vNode,functions));let args=[\"\"];for(let vNode of vNodes){if(vNode.type===\"div\"&&vNode.value===\",\"){args.push(\"\")}else{args[args.length-1]+=_postcssvalueparser.default.stringify(vNode)}}return args}__name(extractArgs,\"extractArgs\");function resolveVNode(node,vNode,functions){if(vNode.type===\"function\"&&functions[vNode.value]!==void 0){let args=extractArgs(node,vNode.nodes,functions);vNode.type=\"word\";vNode.value=functions[vNode.value](node,...args)}return vNode}__name(resolveVNode,\"resolveVNode\");function resolveFunctions(node,input,functions){return(0,_postcssvalueparser.default)(input).walk(vNode=>{resolveVNode(node,vNode,functions)}).toString()}__name(resolveFunctions,\"resolveFunctions\");let nodeTypePropertyMap={atrule:\"params\",decl:\"value\"};function*toPaths(path){path=path.replace(/^['\"]+|['\"]+$/g,\"\");let matches=path.match(/^([^\\s]+)(?![^\\[]*\\])(?:\\s*\\/\\s*([^\\/\\s]+))$/);let alpha=void 0;yield[path,void 0];if(matches){path=matches[1];alpha=matches[2];yield[path,alpha]}}__name(toPaths,\"toPaths\");function resolvePath(config,path,defaultValue){const results=Array.from(toPaths(path)).map(([path2,alpha])=>{return Object.assign(validatePath(config,path2,defaultValue,{opacityValue:alpha}),{resolvedPath:path2,alpha})});var _results_find;return(_results_find=results.find(result=>result.isValid))!==null&&_results_find!==void 0?_results_find:results[0]}__name(resolvePath,\"resolvePath\");function _default(context){let config=context.tailwindConfig;let functions={theme:(node,path,...defaultValue)=>{let{isValid,value,error,alpha}=resolvePath(config,path,defaultValue.length?defaultValue:void 0);if(!isValid){var _parentNode_raws_tailwind;let parentNode=node.parent;let candidate=(_parentNode_raws_tailwind=parentNode===null||parentNode===void 0?void 0:parentNode.raws.tailwind)===null||_parentNode_raws_tailwind===void 0?void 0:_parentNode_raws_tailwind.candidate;if(parentNode&&candidate!==void 0){context.markInvalidUtilityNode(parentNode);parentNode.remove();_log.default.warn(\"invalid-theme-key-in-class\",[`The utility \\`${candidate}\\` contains an invalid theme value and was not generated.`]);return}throw node.error(error)}let maybeColor=(0,_pluginUtils.parseColorFormat)(value);let isColorFunction=maybeColor!==void 0&&typeof maybeColor===\"function\";if(alpha!==void 0||isColorFunction){if(alpha===void 0){alpha=1}value=(0,_withAlphaVariable.withAlphaValue)(maybeColor,alpha,maybeColor)}return value},screen:(node,screen)=>{screen=screen.replace(/^['\"]+/g,\"\").replace(/['\"]+$/g,\"\");let screens=(0,_normalizeScreens.normalizeScreens)(config.theme.screens);let screenDefinition=screens.find(({name})=>name===screen);if(!screenDefinition){throw node.error(`The '${screen}' screen does not exist in your theme.`)}return(0,_buildMediaQuery.default)(screenDefinition)}};return root=>{root.walk(node=>{let property=nodeTypePropertyMap[node.type];if(property===void 0){return}node[property]=resolveFunctions(node,node[property],functions)})}}__name(_default,\"_default\");\n})()\n","warnings":[],"map":{"version":3,"mappings":"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","names":["path"],"sources":["/root/projects/zachw-i/packages/plugin/node_modules/.pnpm/tailwindcss@3.3.2/node_modules/tailwindcss/lib/lib/evaluateTailwindFunctions.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function() {\n        return _default;\n    }\n});\nconst _dlv = /*#__PURE__*/ _interop_require_default(require(\"dlv\"));\nconst _didyoumean = /*#__PURE__*/ _interop_require_default(require(\"didyoumean\"));\nconst _transformThemeValue = /*#__PURE__*/ _interop_require_default(require(\"../util/transformThemeValue\"));\nconst _postcssvalueparser = /*#__PURE__*/ _interop_require_default(require(\"postcss-value-parser\"));\nconst _normalizeScreens = require(\"../util/normalizeScreens\");\nconst _buildMediaQuery = /*#__PURE__*/ _interop_require_default(require(\"../util/buildMediaQuery\"));\nconst _toPath = require(\"../util/toPath\");\nconst _withAlphaVariable = require(\"../util/withAlphaVariable\");\nconst _pluginUtils = require(\"../util/pluginUtils\");\nconst _log = /*#__PURE__*/ _interop_require_default(require(\"../util/log\"));\nfunction _interop_require_default(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction isObject(input) {\n    return typeof input === \"object\" && input !== null;\n}\nfunction findClosestExistingPath(theme, path) {\n    let parts = (0, _toPath.toPath)(path);\n    do {\n        parts.pop();\n        if ((0, _dlv.default)(theme, parts) !== undefined) break;\n    }while (parts.length);\n    return parts.length ? parts : undefined;\n}\nfunction pathToString(path) {\n    if (typeof path === \"string\") return path;\n    return path.reduce((acc, cur, i)=>{\n        if (cur.includes(\".\")) return `${acc}[${cur}]`;\n        return i === 0 ? cur : `${acc}.${cur}`;\n    }, \"\");\n}\nfunction list(items) {\n    return items.map((key)=>`'${key}'`).join(\", \");\n}\nfunction listKeys(obj) {\n    return list(Object.keys(obj));\n}\nfunction validatePath(config, path, defaultValue, themeOpts = {}) {\n    const pathString = Array.isArray(path) ? pathToString(path) : path.replace(/^['\"]+|['\"]+$/g, \"\");\n    const pathSegments = Array.isArray(path) ? path : (0, _toPath.toPath)(pathString);\n    const value = (0, _dlv.default)(config.theme, pathSegments, defaultValue);\n    if (value === undefined) {\n        let error = `'${pathString}' does not exist in your theme config.`;\n        const parentSegments = pathSegments.slice(0, -1);\n        const parentValue = (0, _dlv.default)(config.theme, parentSegments);\n        if (isObject(parentValue)) {\n            const validKeys = Object.keys(parentValue).filter((key)=>validatePath(config, [\n                    ...parentSegments,\n                    key\n                ]).isValid);\n            const suggestion = (0, _didyoumean.default)(pathSegments[pathSegments.length - 1], validKeys);\n            if (suggestion) {\n                error += ` Did you mean '${pathToString([\n                    ...parentSegments,\n                    suggestion\n                ])}'?`;\n            } else if (validKeys.length > 0) {\n                error += ` '${pathToString(parentSegments)}' has the following valid keys: ${list(validKeys)}`;\n            }\n        } else {\n            const closestPath = findClosestExistingPath(config.theme, pathString);\n            if (closestPath) {\n                const closestValue = (0, _dlv.default)(config.theme, closestPath);\n                if (isObject(closestValue)) {\n                    error += ` '${pathToString(closestPath)}' has the following keys: ${listKeys(closestValue)}`;\n                } else {\n                    error += ` '${pathToString(closestPath)}' is not an object.`;\n                }\n            } else {\n                error += ` Your theme has the following top-level keys: ${listKeys(config.theme)}`;\n            }\n        }\n        return {\n            isValid: false,\n            error\n        };\n    }\n    if (!(typeof value === \"string\" || typeof value === \"number\" || typeof value === \"function\" || value instanceof String || value instanceof Number || Array.isArray(value))) {\n        let error = `'${pathString}' was found but does not resolve to a string.`;\n        if (isObject(value)) {\n            let validKeys = Object.keys(value).filter((key)=>validatePath(config, [\n                    ...pathSegments,\n                    key\n                ]).isValid);\n            if (validKeys.length) {\n                error += ` Did you mean something like '${pathToString([\n                    ...pathSegments,\n                    validKeys[0]\n                ])}'?`;\n            }\n        }\n        return {\n            isValid: false,\n            error\n        };\n    }\n    const [themeSection] = pathSegments;\n    return {\n        isValid: true,\n        value: (0, _transformThemeValue.default)(themeSection)(value, themeOpts)\n    };\n}\nfunction extractArgs(node, vNodes, functions) {\n    vNodes = vNodes.map((vNode)=>resolveVNode(node, vNode, functions));\n    let args = [\n        \"\"\n    ];\n    for (let vNode of vNodes){\n        if (vNode.type === \"div\" && vNode.value === \",\") {\n            args.push(\"\");\n        } else {\n            args[args.length - 1] += _postcssvalueparser.default.stringify(vNode);\n        }\n    }\n    return args;\n}\nfunction resolveVNode(node, vNode, functions) {\n    if (vNode.type === \"function\" && functions[vNode.value] !== undefined) {\n        let args = extractArgs(node, vNode.nodes, functions);\n        vNode.type = \"word\";\n        vNode.value = functions[vNode.value](node, ...args);\n    }\n    return vNode;\n}\nfunction resolveFunctions(node, input, functions) {\n    return (0, _postcssvalueparser.default)(input).walk((vNode)=>{\n        resolveVNode(node, vNode, functions);\n    }).toString();\n}\nlet nodeTypePropertyMap = {\n    atrule: \"params\",\n    decl: \"value\"\n};\n/**\n * @param {string} path\n * @returns {Iterable<[path: string, alpha: string|undefined]>}\n */ function* toPaths(path) {\n    // Strip quotes from beginning and end of string\n    // This allows the alpha value to be present inside of quotes\n    path = path.replace(/^['\"]+|['\"]+$/g, \"\");\n    let matches = path.match(/^([^\\s]+)(?![^\\[]*\\])(?:\\s*\\/\\s*([^\\/\\s]+))$/);\n    let alpha = undefined;\n    yield [\n        path,\n        undefined\n    ];\n    if (matches) {\n        path = matches[1];\n        alpha = matches[2];\n        yield [\n            path,\n            alpha\n        ];\n    }\n}\n/**\n *\n * @param {any} config\n * @param {string} path\n * @param {any} defaultValue\n */ function resolvePath(config, path, defaultValue) {\n    const results = Array.from(toPaths(path)).map(([path, alpha])=>{\n        return Object.assign(validatePath(config, path, defaultValue, {\n            opacityValue: alpha\n        }), {\n            resolvedPath: path,\n            alpha\n        });\n    });\n    var _results_find;\n    return (_results_find = results.find((result)=>result.isValid)) !== null && _results_find !== void 0 ? _results_find : results[0];\n}\nfunction _default(context) {\n    let config = context.tailwindConfig;\n    let functions = {\n        theme: (node, path, ...defaultValue)=>{\n            let { isValid , value , error , alpha  } = resolvePath(config, path, defaultValue.length ? defaultValue : undefined);\n            if (!isValid) {\n                var _parentNode_raws_tailwind;\n                let parentNode = node.parent;\n                let candidate = (_parentNode_raws_tailwind = parentNode === null || parentNode === void 0 ? void 0 : parentNode.raws.tailwind) === null || _parentNode_raws_tailwind === void 0 ? void 0 : _parentNode_raws_tailwind.candidate;\n                if (parentNode && candidate !== undefined) {\n                    // Remove this utility from any caches\n                    context.markInvalidUtilityNode(parentNode);\n                    // Remove the CSS node from the markup\n                    parentNode.remove();\n                    // Show a warning\n                    _log.default.warn(\"invalid-theme-key-in-class\", [\n                        `The utility \\`${candidate}\\` contains an invalid theme value and was not generated.`\n                    ]);\n                    return;\n                }\n                throw node.error(error);\n            }\n            let maybeColor = (0, _pluginUtils.parseColorFormat)(value);\n            let isColorFunction = maybeColor !== undefined && typeof maybeColor === \"function\";\n            if (alpha !== undefined || isColorFunction) {\n                if (alpha === undefined) {\n                    alpha = 1.0;\n                }\n                value = (0, _withAlphaVariable.withAlphaValue)(maybeColor, alpha, maybeColor);\n            }\n            return value;\n        },\n        screen: (node, screen)=>{\n            screen = screen.replace(/^['\"]+/g, \"\").replace(/['\"]+$/g, \"\");\n            let screens = (0, _normalizeScreens.normalizeScreens)(config.theme.screens);\n            let screenDefinition = screens.find(({ name  })=>name === screen);\n            if (!screenDefinition) {\n                throw node.error(`The '${screen}' screen does not exist in your theme.`);\n            }\n            return (0, _buildMediaQuery.default)(screenDefinition);\n        }\n    };\n    return (root)=>{\n        root.walk((node)=>{\n            let property = nodeTypePropertyMap[node.type];\n            if (property === undefined) {\n                return;\n            }\n            node[property] = resolveFunctions(node, node[property], functions);\n        });\n    };\n}\n"]}}