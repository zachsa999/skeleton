{"code":"(()=>{\nvar __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});var isCore=require(\"is-core-module\");var fs=require(\"fs\");var path=require(\"path\");var getHomedir=require(\"./homedir\");var caller=require(\"./caller\");var nodeModulesPaths=require(\"./node-modules-paths\");var normalizeOptions=require(\"./normalize-options\");var realpathFS=process.platform!==\"win32\"&&fs.realpathSync&&typeof fs.realpathSync.native===\"function\"?fs.realpathSync.native:fs.realpathSync;var homedir=getHomedir();var defaultPaths=__name(function(){return[path.join(homedir,\".node_modules\"),path.join(homedir,\".node_libraries\")]},\"defaultPaths\");var defaultIsFile=__name(function isFile(file){try{var stat=fs.statSync(file,{throwIfNoEntry:false})}catch(e){if(e&&(e.code===\"ENOENT\"||e.code===\"ENOTDIR\"))return false;throw e}return!!stat&&(stat.isFile()||stat.isFIFO())},\"isFile\");var defaultIsDir=__name(function isDirectory(dir){try{var stat=fs.statSync(dir,{throwIfNoEntry:false})}catch(e){if(e&&(e.code===\"ENOENT\"||e.code===\"ENOTDIR\"))return false;throw e}return!!stat&&stat.isDirectory()},\"isDirectory\");var defaultRealpathSync=__name(function realpathSync(x){try{return realpathFS(x)}catch(realpathErr){if(realpathErr.code!==\"ENOENT\"){throw realpathErr}}return x},\"realpathSync\");var maybeRealpathSync=__name(function maybeRealpathSync2(realpathSync2,x,opts){if(opts&&opts.preserveSymlinks===false){return realpathSync2(x)}return x},\"maybeRealpathSync\");var defaultReadPackageSync=__name(function defaultReadPackageSync2(readFileSync,pkgfile){var body=readFileSync(pkgfile);try{var pkg=JSON.parse(body);return pkg}catch(jsonErr){}},\"defaultReadPackageSync\");var getPackageCandidates=__name(function getPackageCandidates2(x,start,opts){var dirs=nodeModulesPaths(start,opts,x);for(var i=0;i<dirs.length;i++){dirs[i]=path.join(dirs[i],x)}return dirs},\"getPackageCandidates\");module.exports=__name(function resolveSync(x,options){if(typeof x!==\"string\"){throw new TypeError(\"Path must be a string.\")}var opts=normalizeOptions(x,options);var isFile2=opts.isFile||defaultIsFile;var readFileSync=opts.readFileSync||fs.readFileSync;var isDirectory2=opts.isDirectory||defaultIsDir;var realpathSync2=opts.realpathSync||defaultRealpathSync;var readPackageSync=opts.readPackageSync||defaultReadPackageSync;if(opts.readFileSync&&opts.readPackageSync){throw new TypeError(\"`readFileSync` and `readPackageSync` are mutually exclusive.\")}var packageIterator=opts.packageIterator;var extensions=opts.extensions||[\".js\"];var includeCoreModules=opts.includeCoreModules!==false;var basedir=opts.basedir||path.dirname(caller());var parent=opts.filename||basedir;opts.paths=opts.paths||defaultPaths();var absoluteStart=maybeRealpathSync(realpathSync2,path.resolve(basedir),opts);if(/^(?:\\.\\.?(?:\\/|$)|\\/|([A-Za-z]:)?[/\\\\])/.test(x)){var res=path.resolve(absoluteStart,x);if(x===\".\"||x===\"..\"||x.slice(-1)===\"/\")res+=\"/\";var m=loadAsFileSync(res)||loadAsDirectorySync(res);if(m)return maybeRealpathSync(realpathSync2,m,opts)}else if(includeCoreModules&&isCore(x)){return x}else{var n=loadNodeModulesSync(x,absoluteStart);if(n)return maybeRealpathSync(realpathSync2,n,opts)}var err=new Error(\"Cannot find module '\"+x+\"' from '\"+parent+\"'\");err.code=\"MODULE_NOT_FOUND\";throw err;function loadAsFileSync(x2){var pkg=loadpkg(path.dirname(x2));if(pkg&&pkg.dir&&pkg.pkg&&opts.pathFilter){var rfile=path.relative(pkg.dir,x2);var r=opts.pathFilter(pkg.pkg,x2,rfile);if(r){x2=path.resolve(pkg.dir,r)}}if(isFile2(x2)){return x2}for(var i=0;i<extensions.length;i++){var file=x2+extensions[i];if(isFile2(file)){return file}}}__name(loadAsFileSync,\"loadAsFileSync\");function loadpkg(dir){if(dir===\"\"||dir===\"/\")return;if(process.platform===\"win32\"&&/^\\w:[/\\\\]*$/.test(dir)){return}if(/[/\\\\]node_modules[/\\\\]*$/.test(dir))return;var pkgfile=path.join(maybeRealpathSync(realpathSync2,dir,opts),\"package.json\");if(!isFile2(pkgfile)){return loadpkg(path.dirname(dir))}var pkg=readPackageSync(readFileSync,pkgfile);if(pkg&&opts.packageFilter){pkg=opts.packageFilter(pkg,dir)}return{pkg,dir}}__name(loadpkg,\"loadpkg\");function loadAsDirectorySync(x2){var pkgfile=path.join(maybeRealpathSync(realpathSync2,x2,opts),\"/package.json\");if(isFile2(pkgfile)){try{var pkg=readPackageSync(readFileSync,pkgfile)}catch(e){}if(pkg&&opts.packageFilter){pkg=opts.packageFilter(pkg,x2)}if(pkg&&pkg.main){if(typeof pkg.main!==\"string\"){var mainError=new TypeError(\"package \\u201C\"+pkg.name+\"\\u201D `main` must be a string\");mainError.code=\"INVALID_PACKAGE_MAIN\";throw mainError}if(pkg.main===\".\"||pkg.main===\"./\"){pkg.main=\"index\"}try{var m2=loadAsFileSync(path.resolve(x2,pkg.main));if(m2)return m2;var n2=loadAsDirectorySync(path.resolve(x2,pkg.main));if(n2)return n2}catch(e){}}}return loadAsFileSync(path.join(x2,\"/index\"))}__name(loadAsDirectorySync,\"loadAsDirectorySync\");function loadNodeModulesSync(x2,start){var thunk=__name(function(){return getPackageCandidates(x2,start,opts)},\"thunk\");var dirs=packageIterator?packageIterator(x2,start,thunk,opts):thunk();for(var i=0;i<dirs.length;i++){var dir=dirs[i];if(isDirectory2(path.dirname(dir))){var m2=loadAsFileSync(dir);if(m2)return m2;var n2=loadAsDirectorySync(dir);if(n2)return n2}}}__name(loadNodeModulesSync,\"loadNodeModulesSync\")},\"resolveSync\");\n})()\n","warnings":[],"map":{"version":3,"mappings":";kHAAA,IAAI,OAAS,QAAQ,gBAAgB,EACrC,IAAI,GAAK,QAAQ,IAAI,EACrB,IAAI,KAAO,QAAQ,MAAM,EACzB,IAAI,WAAa,QAAQ,WAAW,EACpC,IAAI,OAAS,QAAQ,UAAU,EAC/B,IAAI,iBAAmB,QAAQ,sBAAsB,EACrD,IAAI,iBAAmB,QAAQ,qBAAqB,EAEpD,IAAI,WAAa,QAAQ,WAAa,SAAW,GAAG,cAAgB,OAAO,GAAG,aAAa,SAAW,WAAa,GAAG,aAAa,OAAS,GAAG,aAE/I,IAAI,QAAU,WAAW,EACzB,IAAI,aAAe,iBAAY,CAC3B,MAAO,CACH,KAAK,KAAK,QAAS,eAAe,EAClC,KAAK,KAAK,QAAS,iBAAiB,CACxC,CACJ,EALmB,gBAOnB,IAAI,cAAgB,gBAAS,OAAO,KAAM,CACtC,GAAI,CACA,IAAI,KAAO,GAAG,SAAS,KAAM,CAAE,eAAgB,KAAM,CAAC,CAC1D,OAAS,EAAP,CACE,GAAI,IAAM,EAAE,OAAS,UAAY,EAAE,OAAS,WAAY,MAAO,OAC/D,MAAM,CACV,CACA,MAAO,CAAC,CAAC,OAAS,KAAK,OAAO,GAAK,KAAK,OAAO,EACnD,EARoB,UAUpB,IAAI,aAAe,gBAAS,YAAY,IAAK,CACzC,GAAI,CACA,IAAI,KAAO,GAAG,SAAS,IAAK,CAAE,eAAgB,KAAM,CAAC,CACzD,OAAS,EAAP,CACE,GAAI,IAAM,EAAE,OAAS,UAAY,EAAE,OAAS,WAAY,MAAO,OAC/D,MAAM,CACV,CACA,MAAO,CAAC,CAAC,MAAQ,KAAK,YAAY,CACtC,EARmB,eAUnB,IAAI,oBAAsB,gBAAS,aAAa,EAAG,CAC/C,GAAI,CACA,OAAO,WAAW,CAAC,CACvB,OAAS,YAAP,CACE,GAAI,YAAY,OAAS,SAAU,CAC/B,MAAM,WACV,CACJ,CACA,OAAO,CACX,EAT0B,gBAW1B,IAAI,kBAAoB,gBAASA,mBAAkBC,cAAc,EAAG,KAAM,CACtE,GAAI,MAAQ,KAAK,mBAAqB,MAAO,CACzC,OAAOA,cAAa,CAAC,CACzB,CACA,OAAO,CACX,EALwB,qBAOxB,IAAI,uBAAyB,gBAASC,wBAAuB,aAAc,QAAS,CAChF,IAAI,KAAO,aAAa,OAAO,EAC/B,GAAI,CACA,IAAI,IAAM,KAAK,MAAM,IAAI,EACzB,OAAO,GACX,OAAS,QAAP,CAAiB,CACvB,EAN6B,0BAQ7B,IAAI,qBAAuB,gBAASC,sBAAqB,EAAG,MAAO,KAAM,CACrE,IAAI,KAAO,iBAAiB,MAAO,KAAM,CAAC,EAC1C,QAAS,EAAI,EAAG,EAAI,KAAK,OAAQ,IAAK,CAClC,KAAK,CAAC,EAAI,KAAK,KAAK,KAAK,CAAC,EAAG,CAAC,CAClC,CACA,OAAO,IACX,EAN2B,wBAQ3B,OAAO,QAAU,gBAAS,YAAY,EAAG,QAAS,CAC9C,GAAI,OAAO,IAAM,SAAU,CACvB,MAAM,IAAI,UAAU,wBAAwB,CAChD,CACA,IAAI,KAAO,iBAAiB,EAAG,OAAO,EAEtC,IAAIC,QAAS,KAAK,QAAU,cAC5B,IAAI,aAAe,KAAK,cAAgB,GAAG,aAC3C,IAAIC,aAAc,KAAK,aAAe,aACtC,IAAIJ,cAAe,KAAK,cAAgB,oBACxC,IAAI,gBAAkB,KAAK,iBAAmB,uBAC9C,GAAI,KAAK,cAAgB,KAAK,gBAAiB,CAC3C,MAAM,IAAI,UAAU,8DAA8D,CACtF,CACA,IAAI,gBAAkB,KAAK,gBAE3B,IAAI,WAAa,KAAK,YAAc,CAAC,KAAK,EAC1C,IAAI,mBAAqB,KAAK,qBAAuB,MACrD,IAAI,QAAU,KAAK,SAAW,KAAK,QAAQ,OAAO,CAAC,EACnD,IAAI,OAAS,KAAK,UAAY,QAE9B,KAAK,MAAQ,KAAK,OAAS,aAAa,EAGxC,IAAI,cAAgB,kBAAkBA,cAAc,KAAK,QAAQ,OAAO,EAAG,IAAI,EAE/E,GAAK,0CAA2C,KAAK,CAAC,EAAG,CACrD,IAAI,IAAM,KAAK,QAAQ,cAAe,CAAC,EACvC,GAAI,IAAM,KAAO,IAAM,MAAQ,EAAE,MAAM,EAAE,IAAM,IAAK,KAAO,IAC3D,IAAI,EAAI,eAAe,GAAG,GAAK,oBAAoB,GAAG,EACtD,GAAI,EAAG,OAAO,kBAAkBA,cAAc,EAAG,IAAI,CACzD,SAAW,oBAAsB,OAAO,CAAC,EAAG,CACxC,OAAO,CACX,KAAO,CACH,IAAI,EAAI,oBAAoB,EAAG,aAAa,EAC5C,GAAI,EAAG,OAAO,kBAAkBA,cAAc,EAAG,IAAI,CACzD,CAEA,IAAI,IAAM,IAAI,MAAM,uBAAyB,EAAI,WAAa,OAAS,GAAG,EAC1E,IAAI,KAAO,mBACX,MAAM,IAEN,SAAS,eAAeK,GAAG,CACvB,IAAI,IAAM,QAAQ,KAAK,QAAQA,EAAC,CAAC,EAEjC,GAAI,KAAO,IAAI,KAAO,IAAI,KAAO,KAAK,WAAY,CAC9C,IAAI,MAAQ,KAAK,SAAS,IAAI,IAAKA,EAAC,EACpC,IAAI,EAAI,KAAK,WAAW,IAAI,IAAKA,GAAG,KAAK,EACzC,GAAI,EAAG,CACHA,GAAI,KAAK,QAAQ,IAAI,IAAK,CAAC,CAC/B,CACJ,CAEA,GAAIF,QAAOE,EAAC,EAAG,CACX,OAAOA,EACX,CAEA,QAAS,EAAI,EAAG,EAAI,WAAW,OAAQ,IAAK,CACxC,IAAI,KAAOA,GAAI,WAAW,CAAC,EAC3B,GAAIF,QAAO,IAAI,EAAG,CACd,OAAO,IACX,CACJ,CACJ,CArBS,wCAuBT,SAAS,QAAQ,IAAK,CAClB,GAAI,MAAQ,IAAM,MAAQ,IAAK,OAC/B,GAAI,QAAQ,WAAa,SAAY,cAAe,KAAK,GAAG,EAAG,CAC3D,MACJ,CACA,GAAK,2BAA4B,KAAK,GAAG,EAAG,OAE5C,IAAI,QAAU,KAAK,KAAK,kBAAkBH,cAAc,IAAK,IAAI,EAAG,cAAc,EAElF,GAAI,CAACG,QAAO,OAAO,EAAG,CAClB,OAAO,QAAQ,KAAK,QAAQ,GAAG,CAAC,CACpC,CAEA,IAAI,IAAM,gBAAgB,aAAc,OAAO,EAE/C,GAAI,KAAO,KAAK,cAAe,CAE3B,IAAM,KAAK,cAAc,IAAkB,GAAG,CAClD,CAEA,MAAO,CAAE,IAAU,GAAS,CAChC,CArBS,0BAuBT,SAAS,oBAAoBE,GAAG,CAC5B,IAAI,QAAU,KAAK,KAAK,kBAAkBL,cAAcK,GAAG,IAAI,EAAG,eAAe,EACjF,GAAIF,QAAO,OAAO,EAAG,CACjB,GAAI,CACA,IAAI,IAAM,gBAAgB,aAAc,OAAO,CACnD,OAAS,EAAP,CAAW,CAEb,GAAI,KAAO,KAAK,cAAe,CAE3B,IAAM,KAAK,cAAc,IAAkBE,EAAC,CAChD,CAEA,GAAI,KAAO,IAAI,KAAM,CACjB,GAAI,OAAO,IAAI,OAAS,SAAU,CAC9B,IAAI,UAAY,IAAI,UAAU,iBAAc,IAAI,KAAO,gCAA2B,EAClF,UAAU,KAAO,uBACjB,MAAM,SACV,CACA,GAAI,IAAI,OAAS,KAAO,IAAI,OAAS,KAAM,CACvC,IAAI,KAAO,OACf,CACA,GAAI,CACA,IAAIC,GAAI,eAAe,KAAK,QAAQD,GAAG,IAAI,IAAI,CAAC,EAChD,GAAIC,GAAG,OAAOA,GACd,IAAIC,GAAI,oBAAoB,KAAK,QAAQF,GAAG,IAAI,IAAI,CAAC,EACrD,GAAIE,GAAG,OAAOA,EAClB,OAAS,EAAP,CAAW,CACjB,CACJ,CAEA,OAAO,eAAe,KAAK,KAAKF,GAAG,QAAQ,CAAC,CAChD,CA/BS,kDAiCT,SAAS,oBAAoBA,GAAG,MAAO,CACnC,IAAI,MAAQ,iBAAY,CAAE,OAAO,qBAAqBA,GAAG,MAAO,IAAI,CAAG,EAA3D,SACZ,IAAI,KAAO,gBAAkB,gBAAgBA,GAAG,MAAO,MAAO,IAAI,EAAI,MAAM,EAE5E,QAAS,EAAI,EAAG,EAAI,KAAK,OAAQ,IAAK,CAClC,IAAI,IAAM,KAAK,CAAC,EAChB,GAAID,aAAY,KAAK,QAAQ,GAAG,CAAC,EAAG,CAChC,IAAIE,GAAI,eAAe,GAAG,EAC1B,GAAIA,GAAG,OAAOA,GACd,IAAIC,GAAI,oBAAoB,GAAG,EAC/B,GAAIA,GAAG,OAAOA,EAClB,CACJ,CACJ,CAbS,iDAcb,EAvIiB","names":["maybeRealpathSync","realpathSync","defaultReadPackageSync","getPackageCandidates","isFile","isDirectory","x","m","n"],"sources":["/root/projects/zachw-i/packages/plugin/node_modules/.pnpm/resolve@1.22.2/node_modules/resolve/lib/sync.js"],"sourcesContent":["var isCore = require('is-core-module');\nvar fs = require('fs');\nvar path = require('path');\nvar getHomedir = require('./homedir');\nvar caller = require('./caller');\nvar nodeModulesPaths = require('./node-modules-paths');\nvar normalizeOptions = require('./normalize-options');\n\nvar realpathFS = process.platform !== 'win32' && fs.realpathSync && typeof fs.realpathSync.native === 'function' ? fs.realpathSync.native : fs.realpathSync;\n\nvar homedir = getHomedir();\nvar defaultPaths = function () {\n    return [\n        path.join(homedir, '.node_modules'),\n        path.join(homedir, '.node_libraries')\n    ];\n};\n\nvar defaultIsFile = function isFile(file) {\n    try {\n        var stat = fs.statSync(file, { throwIfNoEntry: false });\n    } catch (e) {\n        if (e && (e.code === 'ENOENT' || e.code === 'ENOTDIR')) return false;\n        throw e;\n    }\n    return !!stat && (stat.isFile() || stat.isFIFO());\n};\n\nvar defaultIsDir = function isDirectory(dir) {\n    try {\n        var stat = fs.statSync(dir, { throwIfNoEntry: false });\n    } catch (e) {\n        if (e && (e.code === 'ENOENT' || e.code === 'ENOTDIR')) return false;\n        throw e;\n    }\n    return !!stat && stat.isDirectory();\n};\n\nvar defaultRealpathSync = function realpathSync(x) {\n    try {\n        return realpathFS(x);\n    } catch (realpathErr) {\n        if (realpathErr.code !== 'ENOENT') {\n            throw realpathErr;\n        }\n    }\n    return x;\n};\n\nvar maybeRealpathSync = function maybeRealpathSync(realpathSync, x, opts) {\n    if (opts && opts.preserveSymlinks === false) {\n        return realpathSync(x);\n    }\n    return x;\n};\n\nvar defaultReadPackageSync = function defaultReadPackageSync(readFileSync, pkgfile) {\n    var body = readFileSync(pkgfile);\n    try {\n        var pkg = JSON.parse(body);\n        return pkg;\n    } catch (jsonErr) {}\n};\n\nvar getPackageCandidates = function getPackageCandidates(x, start, opts) {\n    var dirs = nodeModulesPaths(start, opts, x);\n    for (var i = 0; i < dirs.length; i++) {\n        dirs[i] = path.join(dirs[i], x);\n    }\n    return dirs;\n};\n\nmodule.exports = function resolveSync(x, options) {\n    if (typeof x !== 'string') {\n        throw new TypeError('Path must be a string.');\n    }\n    var opts = normalizeOptions(x, options);\n\n    var isFile = opts.isFile || defaultIsFile;\n    var readFileSync = opts.readFileSync || fs.readFileSync;\n    var isDirectory = opts.isDirectory || defaultIsDir;\n    var realpathSync = opts.realpathSync || defaultRealpathSync;\n    var readPackageSync = opts.readPackageSync || defaultReadPackageSync;\n    if (opts.readFileSync && opts.readPackageSync) {\n        throw new TypeError('`readFileSync` and `readPackageSync` are mutually exclusive.');\n    }\n    var packageIterator = opts.packageIterator;\n\n    var extensions = opts.extensions || ['.js'];\n    var includeCoreModules = opts.includeCoreModules !== false;\n    var basedir = opts.basedir || path.dirname(caller());\n    var parent = opts.filename || basedir;\n\n    opts.paths = opts.paths || defaultPaths();\n\n    // ensure that `basedir` is an absolute path at this point, resolving against the process' current working directory\n    var absoluteStart = maybeRealpathSync(realpathSync, path.resolve(basedir), opts);\n\n    if ((/^(?:\\.\\.?(?:\\/|$)|\\/|([A-Za-z]:)?[/\\\\])/).test(x)) {\n        var res = path.resolve(absoluteStart, x);\n        if (x === '.' || x === '..' || x.slice(-1) === '/') res += '/';\n        var m = loadAsFileSync(res) || loadAsDirectorySync(res);\n        if (m) return maybeRealpathSync(realpathSync, m, opts);\n    } else if (includeCoreModules && isCore(x)) {\n        return x;\n    } else {\n        var n = loadNodeModulesSync(x, absoluteStart);\n        if (n) return maybeRealpathSync(realpathSync, n, opts);\n    }\n\n    var err = new Error(\"Cannot find module '\" + x + \"' from '\" + parent + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n\n    function loadAsFileSync(x) {\n        var pkg = loadpkg(path.dirname(x));\n\n        if (pkg && pkg.dir && pkg.pkg && opts.pathFilter) {\n            var rfile = path.relative(pkg.dir, x);\n            var r = opts.pathFilter(pkg.pkg, x, rfile);\n            if (r) {\n                x = path.resolve(pkg.dir, r); // eslint-disable-line no-param-reassign\n            }\n        }\n\n        if (isFile(x)) {\n            return x;\n        }\n\n        for (var i = 0; i < extensions.length; i++) {\n            var file = x + extensions[i];\n            if (isFile(file)) {\n                return file;\n            }\n        }\n    }\n\n    function loadpkg(dir) {\n        if (dir === '' || dir === '/') return;\n        if (process.platform === 'win32' && (/^\\w:[/\\\\]*$/).test(dir)) {\n            return;\n        }\n        if ((/[/\\\\]node_modules[/\\\\]*$/).test(dir)) return;\n\n        var pkgfile = path.join(maybeRealpathSync(realpathSync, dir, opts), 'package.json');\n\n        if (!isFile(pkgfile)) {\n            return loadpkg(path.dirname(dir));\n        }\n\n        var pkg = readPackageSync(readFileSync, pkgfile);\n\n        if (pkg && opts.packageFilter) {\n            // v2 will pass pkgfile\n            pkg = opts.packageFilter(pkg, /*pkgfile,*/ dir); // eslint-disable-line spaced-comment\n        }\n\n        return { pkg: pkg, dir: dir };\n    }\n\n    function loadAsDirectorySync(x) {\n        var pkgfile = path.join(maybeRealpathSync(realpathSync, x, opts), '/package.json');\n        if (isFile(pkgfile)) {\n            try {\n                var pkg = readPackageSync(readFileSync, pkgfile);\n            } catch (e) {}\n\n            if (pkg && opts.packageFilter) {\n                // v2 will pass pkgfile\n                pkg = opts.packageFilter(pkg, /*pkgfile,*/ x); // eslint-disable-line spaced-comment\n            }\n\n            if (pkg && pkg.main) {\n                if (typeof pkg.main !== 'string') {\n                    var mainError = new TypeError('package “' + pkg.name + '” `main` must be a string');\n                    mainError.code = 'INVALID_PACKAGE_MAIN';\n                    throw mainError;\n                }\n                if (pkg.main === '.' || pkg.main === './') {\n                    pkg.main = 'index';\n                }\n                try {\n                    var m = loadAsFileSync(path.resolve(x, pkg.main));\n                    if (m) return m;\n                    var n = loadAsDirectorySync(path.resolve(x, pkg.main));\n                    if (n) return n;\n                } catch (e) {}\n            }\n        }\n\n        return loadAsFileSync(path.join(x, '/index'));\n    }\n\n    function loadNodeModulesSync(x, start) {\n        var thunk = function () { return getPackageCandidates(x, start, opts); };\n        var dirs = packageIterator ? packageIterator(x, start, thunk, opts) : thunk();\n\n        for (var i = 0; i < dirs.length; i++) {\n            var dir = dirs[i];\n            if (isDirectory(path.dirname(dir))) {\n                var m = loadAsFileSync(dir);\n                if (m) return m;\n                var n = loadAsDirectorySync(dir);\n                if (n) return n;\n            }\n        }\n    }\n};\n"]}}