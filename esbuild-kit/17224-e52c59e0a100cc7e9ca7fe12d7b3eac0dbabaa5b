{"code":"(()=>{\nvar __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});/*!\n * is-glob <https://github.com/jonschlinkert/is-glob>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */var isExtglob=require(\"is-extglob\");var chars={\"{\":\"}\",\"(\":\")\",\"[\":\"]\"};var strictCheck=__name(function(str){if(str[0]===\"!\"){return true}var index=0;var pipeIndex=-2;var closeSquareIndex=-2;var closeCurlyIndex=-2;var closeParenIndex=-2;var backSlashIndex=-2;while(index<str.length){if(str[index]===\"*\"){return true}if(str[index+1]===\"?\"&&/[\\].+)]/.test(str[index])){return true}if(closeSquareIndex!==-1&&str[index]===\"[\"&&str[index+1]!==\"]\"){if(closeSquareIndex<index){closeSquareIndex=str.indexOf(\"]\",index)}if(closeSquareIndex>index){if(backSlashIndex===-1||backSlashIndex>closeSquareIndex){return true}backSlashIndex=str.indexOf(\"\\\\\",index);if(backSlashIndex===-1||backSlashIndex>closeSquareIndex){return true}}}if(closeCurlyIndex!==-1&&str[index]===\"{\"&&str[index+1]!==\"}\"){closeCurlyIndex=str.indexOf(\"}\",index);if(closeCurlyIndex>index){backSlashIndex=str.indexOf(\"\\\\\",index);if(backSlashIndex===-1||backSlashIndex>closeCurlyIndex){return true}}}if(closeParenIndex!==-1&&str[index]===\"(\"&&str[index+1]===\"?\"&&/[:!=]/.test(str[index+2])&&str[index+3]!==\")\"){closeParenIndex=str.indexOf(\")\",index);if(closeParenIndex>index){backSlashIndex=str.indexOf(\"\\\\\",index);if(backSlashIndex===-1||backSlashIndex>closeParenIndex){return true}}}if(pipeIndex!==-1&&str[index]===\"(\"&&str[index+1]!==\"|\"){if(pipeIndex<index){pipeIndex=str.indexOf(\"|\",index)}if(pipeIndex!==-1&&str[pipeIndex+1]!==\")\"){closeParenIndex=str.indexOf(\")\",pipeIndex);if(closeParenIndex>pipeIndex){backSlashIndex=str.indexOf(\"\\\\\",pipeIndex);if(backSlashIndex===-1||backSlashIndex>closeParenIndex){return true}}}}if(str[index]===\"\\\\\"){var open=str[index+1];index+=2;var close=chars[open];if(close){var n=str.indexOf(close,index);if(n!==-1){index=n+1}}if(str[index]===\"!\"){return true}}else{index++}}return false},\"strictCheck\");var relaxedCheck=__name(function(str){if(str[0]===\"!\"){return true}var index=0;while(index<str.length){if(/[*?{}()[\\]]/.test(str[index])){return true}if(str[index]===\"\\\\\"){var open=str[index+1];index+=2;var close=chars[open];if(close){var n=str.indexOf(close,index);if(n!==-1){index=n+1}}if(str[index]===\"!\"){return true}}else{index++}}return false},\"relaxedCheck\");module.exports=__name(function isGlob(str,options){if(typeof str!==\"string\"||str===\"\"){return false}if(isExtglob(str)){return true}var check=strictCheck;if(options&&options.strict===false){check=relaxedCheck}return check(str)},\"isGlob\");\n})()\n","warnings":[],"map":{"version":3,"mappings":"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","names":[],"sources":["/root/projects/zachw-i/packages/plugin/node_modules/.pnpm/is-glob@4.0.3/node_modules/is-glob/index.js"],"sourcesContent":["/*!\n * is-glob <https://github.com/jonschlinkert/is-glob>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nvar isExtglob = require('is-extglob');\nvar chars = { '{': '}', '(': ')', '[': ']'};\nvar strictCheck = function(str) {\n  if (str[0] === '!') {\n    return true;\n  }\n  var index = 0;\n  var pipeIndex = -2;\n  var closeSquareIndex = -2;\n  var closeCurlyIndex = -2;\n  var closeParenIndex = -2;\n  var backSlashIndex = -2;\n  while (index < str.length) {\n    if (str[index] === '*') {\n      return true;\n    }\n\n    if (str[index + 1] === '?' && /[\\].+)]/.test(str[index])) {\n      return true;\n    }\n\n    if (closeSquareIndex !== -1 && str[index] === '[' && str[index + 1] !== ']') {\n      if (closeSquareIndex < index) {\n        closeSquareIndex = str.indexOf(']', index);\n      }\n      if (closeSquareIndex > index) {\n        if (backSlashIndex === -1 || backSlashIndex > closeSquareIndex) {\n          return true;\n        }\n        backSlashIndex = str.indexOf('\\\\', index);\n        if (backSlashIndex === -1 || backSlashIndex > closeSquareIndex) {\n          return true;\n        }\n      }\n    }\n\n    if (closeCurlyIndex !== -1 && str[index] === '{' && str[index + 1] !== '}') {\n      closeCurlyIndex = str.indexOf('}', index);\n      if (closeCurlyIndex > index) {\n        backSlashIndex = str.indexOf('\\\\', index);\n        if (backSlashIndex === -1 || backSlashIndex > closeCurlyIndex) {\n          return true;\n        }\n      }\n    }\n\n    if (closeParenIndex !== -1 && str[index] === '(' && str[index + 1] === '?' && /[:!=]/.test(str[index + 2]) && str[index + 3] !== ')') {\n      closeParenIndex = str.indexOf(')', index);\n      if (closeParenIndex > index) {\n        backSlashIndex = str.indexOf('\\\\', index);\n        if (backSlashIndex === -1 || backSlashIndex > closeParenIndex) {\n          return true;\n        }\n      }\n    }\n\n    if (pipeIndex !== -1 && str[index] === '(' && str[index + 1] !== '|') {\n      if (pipeIndex < index) {\n        pipeIndex = str.indexOf('|', index);\n      }\n      if (pipeIndex !== -1 && str[pipeIndex + 1] !== ')') {\n        closeParenIndex = str.indexOf(')', pipeIndex);\n        if (closeParenIndex > pipeIndex) {\n          backSlashIndex = str.indexOf('\\\\', pipeIndex);\n          if (backSlashIndex === -1 || backSlashIndex > closeParenIndex) {\n            return true;\n          }\n        }\n      }\n    }\n\n    if (str[index] === '\\\\') {\n      var open = str[index + 1];\n      index += 2;\n      var close = chars[open];\n\n      if (close) {\n        var n = str.indexOf(close, index);\n        if (n !== -1) {\n          index = n + 1;\n        }\n      }\n\n      if (str[index] === '!') {\n        return true;\n      }\n    } else {\n      index++;\n    }\n  }\n  return false;\n};\n\nvar relaxedCheck = function(str) {\n  if (str[0] === '!') {\n    return true;\n  }\n  var index = 0;\n  while (index < str.length) {\n    if (/[*?{}()[\\]]/.test(str[index])) {\n      return true;\n    }\n\n    if (str[index] === '\\\\') {\n      var open = str[index + 1];\n      index += 2;\n      var close = chars[open];\n\n      if (close) {\n        var n = str.indexOf(close, index);\n        if (n !== -1) {\n          index = n + 1;\n        }\n      }\n\n      if (str[index] === '!') {\n        return true;\n      }\n    } else {\n      index++;\n    }\n  }\n  return false;\n};\n\nmodule.exports = function isGlob(str, options) {\n  if (typeof str !== 'string' || str === '') {\n    return false;\n  }\n\n  if (isExtglob(str)) {\n    return true;\n  }\n\n  var check = strictCheck;\n\n  // optionally relax check\n  if (options && options.strict === false) {\n    check = relaxedCheck;\n  }\n\n  return check(str);\n};\n"]}}