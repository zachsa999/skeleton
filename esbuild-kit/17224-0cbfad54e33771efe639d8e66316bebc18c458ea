{"code":"(()=>{\n\"use strict\";var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});Object.defineProperty(exports,\"__esModule\",{value:true});exports.removeLeadingDotSegment=exports.escape=exports.makeAbsolute=exports.unixify=void 0;const path=require(\"path\");const LEADING_DOT_SEGMENT_CHARACTERS_COUNT=2;const UNESCAPED_GLOB_SYMBOLS_RE=/(\\\\?)([()*?[\\]{|}]|^!|[!+@](?=\\())/g;function unixify(filepath){return filepath.replace(/\\\\/g,\"/\")}__name(unixify,\"unixify\");exports.unixify=unixify;function makeAbsolute(cwd,filepath){return path.resolve(cwd,filepath)}__name(makeAbsolute,\"makeAbsolute\");exports.makeAbsolute=makeAbsolute;function escape(pattern){return pattern.replace(UNESCAPED_GLOB_SYMBOLS_RE,\"\\\\$2\")}__name(escape,\"escape\");exports.escape=escape;function removeLeadingDotSegment(entry){if(entry.charAt(0)===\".\"){const secondCharactery=entry.charAt(1);if(secondCharactery===\"/\"||secondCharactery===\"\\\\\"){return entry.slice(LEADING_DOT_SEGMENT_CHARACTERS_COUNT)}}return entry}__name(removeLeadingDotSegment,\"removeLeadingDotSegment\");exports.removeLeadingDotSegment=removeLeadingDotSegment;\n})()\n","warnings":[],"map":{"version":3,"mappings":";+HACA,OAAO,eAAe,QAAS,aAAc,CAAE,MAAO,IAAK,CAAC,EAC5D,QAAQ,wBAA0B,QAAQ,OAAS,QAAQ,aAAe,QAAQ,QAAU,OAC5F,MAAM,KAAO,QAAQ,MAAM,EAC3B,MAAM,qCAAuC,EAC7C,MAAM,0BAA4B,sCAIlC,SAAS,QAAQ,SAAU,CACvB,OAAO,SAAS,QAAQ,MAAO,GAAG,CACtC,CAFS,0BAGT,QAAQ,QAAU,QAClB,SAAS,aAAa,IAAK,SAAU,CACjC,OAAO,KAAK,QAAQ,IAAK,QAAQ,CACrC,CAFS,oCAGT,QAAQ,aAAe,aACvB,SAAS,OAAO,QAAS,CACrB,OAAO,QAAQ,QAAQ,0BAA2B,MAAM,CAC5D,CAFS,wBAGT,QAAQ,OAAS,OACjB,SAAS,wBAAwB,MAAO,CAGpC,GAAI,MAAM,OAAO,CAAC,IAAM,IAAK,CACzB,MAAM,iBAAmB,MAAM,OAAO,CAAC,EACvC,GAAI,mBAAqB,KAAO,mBAAqB,KAAM,CACvD,OAAO,MAAM,MAAM,oCAAoC,CAC3D,CACJ,CACA,OAAO,KACX,CAVS,0DAWT,QAAQ,wBAA0B","names":[],"sources":["/root/projects/zachw-i/packages/plugin/node_modules/.pnpm/fast-glob@3.2.12/node_modules/fast-glob/out/utils/path.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.removeLeadingDotSegment = exports.escape = exports.makeAbsolute = exports.unixify = void 0;\r\nconst path = require(\"path\");\r\nconst LEADING_DOT_SEGMENT_CHARACTERS_COUNT = 2; // ./ or .\\\\\r\nconst UNESCAPED_GLOB_SYMBOLS_RE = /(\\\\?)([()*?[\\]{|}]|^!|[!+@](?=\\())/g;\r\n/**\r\n * Designed to work only with simple paths: `dir\\\\file`.\r\n */\r\nfunction unixify(filepath) {\r\n    return filepath.replace(/\\\\/g, '/');\r\n}\r\nexports.unixify = unixify;\r\nfunction makeAbsolute(cwd, filepath) {\r\n    return path.resolve(cwd, filepath);\r\n}\r\nexports.makeAbsolute = makeAbsolute;\r\nfunction escape(pattern) {\r\n    return pattern.replace(UNESCAPED_GLOB_SYMBOLS_RE, '\\\\$2');\r\n}\r\nexports.escape = escape;\r\nfunction removeLeadingDotSegment(entry) {\r\n    // We do not use `startsWith` because this is 10x slower than current implementation for some cases.\r\n    // eslint-disable-next-line @typescript-eslint/prefer-string-starts-ends-with\r\n    if (entry.charAt(0) === '.') {\r\n        const secondCharactery = entry.charAt(1);\r\n        if (secondCharactery === '/' || secondCharactery === '\\\\') {\r\n            return entry.slice(LEADING_DOT_SEGMENT_CHARACTERS_COUNT);\r\n        }\r\n    }\r\n    return entry;\r\n}\r\nexports.removeLeadingDotSegment = removeLeadingDotSegment;\r\n"]}}