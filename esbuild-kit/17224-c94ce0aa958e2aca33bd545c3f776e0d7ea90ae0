{"code":"(()=>{\n\"use strict\";var __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __hasOwnProp=Object.prototype.hasOwnProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});var __export=(target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:true})};var __copyProps=(to,from,except,desc)=>{if(from&&typeof from===\"object\"||typeof from===\"function\"){for(let key of __getOwnPropNames(from))if(!__hasOwnProp.call(to,key)&&key!==except)__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable})}return to};var __toCommonJS=mod=>__copyProps(__defProp({},\"__esModule\",{value:true}),mod);var fills_exports={};__export(fills_exports,{default:()=>fills_default,fills:()=>fills});module.exports=__toCommonJS(fills_exports);var import_settings=require(\"../settings.js\");const fills=__name(()=>{const classes={\".fill-base-token\":{fill:\"rgba(var(--theme-font-color-base))\"},\".fill-dark-token\":{fill:\"rgba(var(--theme-font-color-dark))\"},\".fill-token\":{fill:\"rgba(var(--theme-font-color-base))\"},\".dark .fill-token\":{fill:\"rgba(var(--theme-font-color-dark))\"}};import_settings.settings.colorNames.forEach(n=>{classes[`.fill-on-${n}-token`]={fill:`rgb(var(--on-${n}))`}});return classes},\"fills\");var fills_default=fills;\n})()\n","warnings":[],"map":{"version":3,"mappings":";mvBAAA,oIAGA,oBAA0C,0BAEnC,MAAM,MAAQ,WAAkB,CACtC,MAAM,QAAsB,CAC3B,mBAAoB,CAAE,KAAM,oCAAqC,EACjE,mBAAoB,CAAE,KAAM,oCAAqC,EAEjE,cAAe,CAAE,KAAM,oCAAqC,EAC5D,oBAAqB,CAAE,KAAM,oCAAqC,CACnE,EACA,yBAAS,WAAW,QAAS,GAAM,CAGlC,QAAQ,YAAY,SAAS,EAAI,CAAE,KAAM,gBAAgB,KAAM,CAChE,CAAC,EACD,OAAO,OACR,EAdqB,SAgBrB,IAAO,cAAQ","names":[],"sources":["/root/projects/zachw-i/packages/plugin/src/tailwind/tokens/fills.ts"],"sourcesContent":["// Design Tokens: SVG Fill\n// Doc: https://www.skeleton.dev/docs/tokens\n\nimport { settings, type CssClasses } from '../settings.js';\n\nexport const fills = (): CssClasses => {\n\tconst classes: CssClasses = {\n\t\t'.fill-base-token': { fill: 'rgba(var(--theme-font-color-base))' },\n\t\t'.fill-dark-token': { fill: 'rgba(var(--theme-font-color-dark))' },\n\t\t// Fill Token - ex: .fill-token\n\t\t'.fill-token': { fill: 'rgba(var(--theme-font-color-base))' },\n\t\t'.dark .fill-token': { fill: 'rgba(var(--theme-font-color-dark))' }\n\t};\n\tsettings.colorNames.forEach((n) => {\n\t\t// On-X Fill Colors\n\t\t// Example: .fill-on-primary-token\n\t\tclasses[`.fill-on-${n}-token`] = { fill: `rgb(var(--on-${n}))` };\n\t});\n\treturn classes;\n};\n\nexport default fills;\n"]}}