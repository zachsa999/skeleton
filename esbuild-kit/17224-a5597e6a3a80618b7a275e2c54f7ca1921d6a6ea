{"code":"(()=>{\n\"use strict\";var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});exports.__esModule=true;exports[\"default\"]=void 0;var _root=_interopRequireDefault(require(\"./selectors/root\"));var _selector=_interopRequireDefault(require(\"./selectors/selector\"));var _className=_interopRequireDefault(require(\"./selectors/className\"));var _comment=_interopRequireDefault(require(\"./selectors/comment\"));var _id=_interopRequireDefault(require(\"./selectors/id\"));var _tag=_interopRequireDefault(require(\"./selectors/tag\"));var _string=_interopRequireDefault(require(\"./selectors/string\"));var _pseudo=_interopRequireDefault(require(\"./selectors/pseudo\"));var _attribute=_interopRequireWildcard(require(\"./selectors/attribute\"));var _universal=_interopRequireDefault(require(\"./selectors/universal\"));var _combinator=_interopRequireDefault(require(\"./selectors/combinator\"));var _nesting=_interopRequireDefault(require(\"./selectors/nesting\"));var _sortAscending=_interopRequireDefault(require(\"./sortAscending\"));var _tokenize=_interopRequireWildcard(require(\"./tokenize\"));var tokens=_interopRequireWildcard(require(\"./tokenTypes\"));var types=_interopRequireWildcard(require(\"./selectors/types\"));var _util=require(\"./util\");var _WHITESPACE_TOKENS,_Object$assign;function _getRequireWildcardCache(nodeInterop){if(typeof WeakMap!==\"function\")return null;var cacheBabelInterop=new WeakMap;var cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=__name(function _getRequireWildcardCache2(nodeInterop2){return nodeInterop2?cacheNodeInterop:cacheBabelInterop},\"_getRequireWildcardCache\"))(nodeInterop)}__name(_getRequireWildcardCache,\"_getRequireWildcardCache\");function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule){return obj}if(obj===null||typeof obj!==\"object\"&&typeof obj!==\"function\"){return{\"default\":obj}}var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj)){return cache.get(obj)}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(key!==\"default\"&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc)}else{newObj[key]=obj[key]}}}newObj[\"default\"]=obj;if(cache){cache.set(obj,newObj)}return newObj}__name(_interopRequireWildcard,\"_interopRequireWildcard\");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}__name(_interopRequireDefault,\"_interopRequireDefault\");function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}__name(_defineProperties,\"_defineProperties\");function _createClass(Constructor,protoProps,staticProps){if(protoProps)_defineProperties(Constructor.prototype,protoProps);if(staticProps)_defineProperties(Constructor,staticProps);Object.defineProperty(Constructor,\"prototype\",{writable:false});return Constructor}__name(_createClass,\"_createClass\");var WHITESPACE_TOKENS=(_WHITESPACE_TOKENS={},_WHITESPACE_TOKENS[tokens.space]=true,_WHITESPACE_TOKENS[tokens.cr]=true,_WHITESPACE_TOKENS[tokens.feed]=true,_WHITESPACE_TOKENS[tokens.newline]=true,_WHITESPACE_TOKENS[tokens.tab]=true,_WHITESPACE_TOKENS);var WHITESPACE_EQUIV_TOKENS=Object.assign({},WHITESPACE_TOKENS,(_Object$assign={},_Object$assign[tokens.comment]=true,_Object$assign));function tokenStart(token){return{line:token[_tokenize.FIELDS.START_LINE],column:token[_tokenize.FIELDS.START_COL]}}__name(tokenStart,\"tokenStart\");function tokenEnd(token){return{line:token[_tokenize.FIELDS.END_LINE],column:token[_tokenize.FIELDS.END_COL]}}__name(tokenEnd,\"tokenEnd\");function getSource(startLine,startColumn,endLine,endColumn){return{start:{line:startLine,column:startColumn},end:{line:endLine,column:endColumn}}}__name(getSource,\"getSource\");function getTokenSource(token){return getSource(token[_tokenize.FIELDS.START_LINE],token[_tokenize.FIELDS.START_COL],token[_tokenize.FIELDS.END_LINE],token[_tokenize.FIELDS.END_COL])}__name(getTokenSource,\"getTokenSource\");function getTokenSourceSpan(startToken,endToken){if(!startToken){return void 0}return getSource(startToken[_tokenize.FIELDS.START_LINE],startToken[_tokenize.FIELDS.START_COL],endToken[_tokenize.FIELDS.END_LINE],endToken[_tokenize.FIELDS.END_COL])}__name(getTokenSourceSpan,\"getTokenSourceSpan\");function unescapeProp(node,prop){var value=node[prop];if(typeof value!==\"string\"){return}if(value.indexOf(\"\\\\\")!==-1){(0,_util.ensureObject)(node,\"raws\");node[prop]=(0,_util.unesc)(value);if(node.raws[prop]===void 0){node.raws[prop]=value}}return node}__name(unescapeProp,\"unescapeProp\");function indexesOf(array,item){var i=-1;var indexes=[];while((i=array.indexOf(item,i+1))!==-1){indexes.push(i)}return indexes}__name(indexesOf,\"indexesOf\");function uniqs(){var list=Array.prototype.concat.apply([],arguments);return list.filter(function(item,i){return i===list.indexOf(item)})}__name(uniqs,\"uniqs\");var Parser=function(){function Parser2(rule,options){if(options===void 0){options={}}this.rule=rule;this.options=Object.assign({lossy:false,safe:false},options);this.position=0;this.css=typeof this.rule===\"string\"?this.rule:this.rule.selector;this.tokens=(0,_tokenize[\"default\"])({css:this.css,error:this._errorGenerator(),safe:this.options.safe});var rootSource=getTokenSourceSpan(this.tokens[0],this.tokens[this.tokens.length-1]);this.root=new _root[\"default\"]({source:rootSource});this.root.errorGenerator=this._errorGenerator();var selector=new _selector[\"default\"]({source:{start:{line:1,column:1}}});this.root.append(selector);this.current=selector;this.loop()}__name(Parser2,\"Parser\");var _proto=Parser2.prototype;_proto._errorGenerator=__name(function _errorGenerator(){var _this=this;return function(message,errorOptions){if(typeof _this.rule===\"string\"){return new Error(message)}return _this.rule.error(message,errorOptions)}},\"_errorGenerator\");_proto.attribute=__name(function attribute(){var attr=[];var startingToken=this.currToken;this.position++;while(this.position<this.tokens.length&&this.currToken[_tokenize.FIELDS.TYPE]!==tokens.closeSquare){attr.push(this.currToken);this.position++}if(this.currToken[_tokenize.FIELDS.TYPE]!==tokens.closeSquare){return this.expected(\"closing square bracket\",this.currToken[_tokenize.FIELDS.START_POS])}var len=attr.length;var node={source:getSource(startingToken[1],startingToken[2],this.currToken[3],this.currToken[4]),sourceIndex:startingToken[_tokenize.FIELDS.START_POS]};if(len===1&&!~[tokens.word].indexOf(attr[0][_tokenize.FIELDS.TYPE])){return this.expected(\"attribute\",attr[0][_tokenize.FIELDS.START_POS])}var pos=0;var spaceBefore=\"\";var commentBefore=\"\";var lastAdded=null;var spaceAfterMeaningfulToken=false;while(pos<len){var token=attr[pos];var content=this.content(token);var next=attr[pos+1];switch(token[_tokenize.FIELDS.TYPE]){case tokens.space:spaceAfterMeaningfulToken=true;if(this.options.lossy){break}if(lastAdded){(0,_util.ensureObject)(node,\"spaces\",lastAdded);var prevContent=node.spaces[lastAdded].after||\"\";node.spaces[lastAdded].after=prevContent+content;var existingComment=(0,_util.getProp)(node,\"raws\",\"spaces\",lastAdded,\"after\")||null;if(existingComment){node.raws.spaces[lastAdded].after=existingComment+content}}else{spaceBefore=spaceBefore+content;commentBefore=commentBefore+content}break;case tokens.asterisk:if(next[_tokenize.FIELDS.TYPE]===tokens.equals){node.operator=content;lastAdded=\"operator\"}else if((!node.namespace||lastAdded===\"namespace\"&&!spaceAfterMeaningfulToken)&&next){if(spaceBefore){(0,_util.ensureObject)(node,\"spaces\",\"attribute\");node.spaces.attribute.before=spaceBefore;spaceBefore=\"\"}if(commentBefore){(0,_util.ensureObject)(node,\"raws\",\"spaces\",\"attribute\");node.raws.spaces.attribute.before=spaceBefore;commentBefore=\"\"}node.namespace=(node.namespace||\"\")+content;var rawValue=(0,_util.getProp)(node,\"raws\",\"namespace\")||null;if(rawValue){node.raws.namespace+=content}lastAdded=\"namespace\"}spaceAfterMeaningfulToken=false;break;case tokens.dollar:if(lastAdded===\"value\"){var oldRawValue=(0,_util.getProp)(node,\"raws\",\"value\");node.value+=\"$\";if(oldRawValue){node.raws.value=oldRawValue+\"$\"}break}case tokens.caret:if(next[_tokenize.FIELDS.TYPE]===tokens.equals){node.operator=content;lastAdded=\"operator\"}spaceAfterMeaningfulToken=false;break;case tokens.combinator:if(content===\"~\"&&next[_tokenize.FIELDS.TYPE]===tokens.equals){node.operator=content;lastAdded=\"operator\"}if(content!==\"|\"){spaceAfterMeaningfulToken=false;break}if(next[_tokenize.FIELDS.TYPE]===tokens.equals){node.operator=content;lastAdded=\"operator\"}else if(!node.namespace&&!node.attribute){node.namespace=true}spaceAfterMeaningfulToken=false;break;case tokens.word:if(next&&this.content(next)===\"|\"&&attr[pos+2]&&attr[pos+2][_tokenize.FIELDS.TYPE]!==tokens.equals&&!node.operator&&!node.namespace){node.namespace=content;lastAdded=\"namespace\"}else if(!node.attribute||lastAdded===\"attribute\"&&!spaceAfterMeaningfulToken){if(spaceBefore){(0,_util.ensureObject)(node,\"spaces\",\"attribute\");node.spaces.attribute.before=spaceBefore;spaceBefore=\"\"}if(commentBefore){(0,_util.ensureObject)(node,\"raws\",\"spaces\",\"attribute\");node.raws.spaces.attribute.before=commentBefore;commentBefore=\"\"}node.attribute=(node.attribute||\"\")+content;var _rawValue=(0,_util.getProp)(node,\"raws\",\"attribute\")||null;if(_rawValue){node.raws.attribute+=content}lastAdded=\"attribute\"}else if(!node.value&&node.value!==\"\"||lastAdded===\"value\"&&!(spaceAfterMeaningfulToken||node.quoteMark)){var _unescaped=(0,_util.unesc)(content);var _oldRawValue=(0,_util.getProp)(node,\"raws\",\"value\")||\"\";var oldValue=node.value||\"\";node.value=oldValue+_unescaped;node.quoteMark=null;if(_unescaped!==content||_oldRawValue){(0,_util.ensureObject)(node,\"raws\");node.raws.value=(_oldRawValue||oldValue)+content}lastAdded=\"value\"}else{var insensitive=content===\"i\"||content===\"I\";if((node.value||node.value===\"\")&&(node.quoteMark||spaceAfterMeaningfulToken)){node.insensitive=insensitive;if(!insensitive||content===\"I\"){(0,_util.ensureObject)(node,\"raws\");node.raws.insensitiveFlag=content}lastAdded=\"insensitive\";if(spaceBefore){(0,_util.ensureObject)(node,\"spaces\",\"insensitive\");node.spaces.insensitive.before=spaceBefore;spaceBefore=\"\"}if(commentBefore){(0,_util.ensureObject)(node,\"raws\",\"spaces\",\"insensitive\");node.raws.spaces.insensitive.before=commentBefore;commentBefore=\"\"}}else if(node.value||node.value===\"\"){lastAdded=\"value\";node.value+=content;if(node.raws.value){node.raws.value+=content}}}spaceAfterMeaningfulToken=false;break;case tokens.str:if(!node.attribute||!node.operator){return this.error(\"Expected an attribute followed by an operator preceding the string.\",{index:token[_tokenize.FIELDS.START_POS]})}var _unescapeValue=(0,_attribute.unescapeValue)(content),unescaped=_unescapeValue.unescaped,quoteMark=_unescapeValue.quoteMark;node.value=unescaped;node.quoteMark=quoteMark;lastAdded=\"value\";(0,_util.ensureObject)(node,\"raws\");node.raws.value=content;spaceAfterMeaningfulToken=false;break;case tokens.equals:if(!node.attribute){return this.expected(\"attribute\",token[_tokenize.FIELDS.START_POS],content)}if(node.value){return this.error('Unexpected \"=\" found; an operator was already defined.',{index:token[_tokenize.FIELDS.START_POS]})}node.operator=node.operator?node.operator+content:content;lastAdded=\"operator\";spaceAfterMeaningfulToken=false;break;case tokens.comment:if(lastAdded){if(spaceAfterMeaningfulToken||next&&next[_tokenize.FIELDS.TYPE]===tokens.space||lastAdded===\"insensitive\"){var lastComment=(0,_util.getProp)(node,\"spaces\",lastAdded,\"after\")||\"\";var rawLastComment=(0,_util.getProp)(node,\"raws\",\"spaces\",lastAdded,\"after\")||lastComment;(0,_util.ensureObject)(node,\"raws\",\"spaces\",lastAdded);node.raws.spaces[lastAdded].after=rawLastComment+content}else{var lastValue=node[lastAdded]||\"\";var rawLastValue=(0,_util.getProp)(node,\"raws\",lastAdded)||lastValue;(0,_util.ensureObject)(node,\"raws\");node.raws[lastAdded]=rawLastValue+content}}else{commentBefore=commentBefore+content}break;default:return this.error('Unexpected \"'+content+'\" found.',{index:token[_tokenize.FIELDS.START_POS]})}pos++}unescapeProp(node,\"attribute\");unescapeProp(node,\"namespace\");this.newNode(new _attribute[\"default\"](node));this.position++},\"attribute\");_proto.parseWhitespaceEquivalentTokens=__name(function parseWhitespaceEquivalentTokens(stopPosition){if(stopPosition<0){stopPosition=this.tokens.length}var startPosition=this.position;var nodes=[];var space=\"\";var lastComment=void 0;do{if(WHITESPACE_TOKENS[this.currToken[_tokenize.FIELDS.TYPE]]){if(!this.options.lossy){space+=this.content()}}else if(this.currToken[_tokenize.FIELDS.TYPE]===tokens.comment){var spaces={};if(space){spaces.before=space;space=\"\"}lastComment=new _comment[\"default\"]({value:this.content(),source:getTokenSource(this.currToken),sourceIndex:this.currToken[_tokenize.FIELDS.START_POS],spaces});nodes.push(lastComment)}}while(++this.position<stopPosition);if(space){if(lastComment){lastComment.spaces.after=space}else if(!this.options.lossy){var firstToken=this.tokens[startPosition];var lastToken=this.tokens[this.position-1];nodes.push(new _string[\"default\"]({value:\"\",source:getSource(firstToken[_tokenize.FIELDS.START_LINE],firstToken[_tokenize.FIELDS.START_COL],lastToken[_tokenize.FIELDS.END_LINE],lastToken[_tokenize.FIELDS.END_COL]),sourceIndex:firstToken[_tokenize.FIELDS.START_POS],spaces:{before:space,after:\"\"}}))}}return nodes},\"parseWhitespaceEquivalentTokens\");_proto.convertWhitespaceNodesToSpace=__name(function convertWhitespaceNodesToSpace(nodes,requiredSpace){var _this2=this;if(requiredSpace===void 0){requiredSpace=false}var space=\"\";var rawSpace=\"\";nodes.forEach(function(n){var spaceBefore=_this2.lossySpace(n.spaces.before,requiredSpace);var rawSpaceBefore=_this2.lossySpace(n.rawSpaceBefore,requiredSpace);space+=spaceBefore+_this2.lossySpace(n.spaces.after,requiredSpace&&spaceBefore.length===0);rawSpace+=spaceBefore+n.value+_this2.lossySpace(n.rawSpaceAfter,requiredSpace&&rawSpaceBefore.length===0)});if(rawSpace===space){rawSpace=void 0}var result={space,rawSpace};return result},\"convertWhitespaceNodesToSpace\");_proto.isNamedCombinator=__name(function isNamedCombinator(position){if(position===void 0){position=this.position}return this.tokens[position+0]&&this.tokens[position+0][_tokenize.FIELDS.TYPE]===tokens.slash&&this.tokens[position+1]&&this.tokens[position+1][_tokenize.FIELDS.TYPE]===tokens.word&&this.tokens[position+2]&&this.tokens[position+2][_tokenize.FIELDS.TYPE]===tokens.slash},\"isNamedCombinator\");_proto.namedCombinator=__name(function namedCombinator(){if(this.isNamedCombinator()){var nameRaw=this.content(this.tokens[this.position+1]);var name=(0,_util.unesc)(nameRaw).toLowerCase();var raws={};if(name!==nameRaw){raws.value=\"/\"+nameRaw+\"/\"}var node=new _combinator[\"default\"]({value:\"/\"+name+\"/\",source:getSource(this.currToken[_tokenize.FIELDS.START_LINE],this.currToken[_tokenize.FIELDS.START_COL],this.tokens[this.position+2][_tokenize.FIELDS.END_LINE],this.tokens[this.position+2][_tokenize.FIELDS.END_COL]),sourceIndex:this.currToken[_tokenize.FIELDS.START_POS],raws});this.position=this.position+3;return node}else{this.unexpected()}},\"namedCombinator\");_proto.combinator=__name(function combinator(){var _this3=this;if(this.content()===\"|\"){return this.namespace()}var nextSigTokenPos=this.locateNextMeaningfulToken(this.position);if(nextSigTokenPos<0||this.tokens[nextSigTokenPos][_tokenize.FIELDS.TYPE]===tokens.comma){var nodes=this.parseWhitespaceEquivalentTokens(nextSigTokenPos);if(nodes.length>0){var last=this.current.last;if(last){var _this$convertWhitespa=this.convertWhitespaceNodesToSpace(nodes),space=_this$convertWhitespa.space,rawSpace=_this$convertWhitespa.rawSpace;if(rawSpace!==void 0){last.rawSpaceAfter+=rawSpace}last.spaces.after+=space}else{nodes.forEach(function(n){return _this3.newNode(n)})}}return}var firstToken=this.currToken;var spaceOrDescendantSelectorNodes=void 0;if(nextSigTokenPos>this.position){spaceOrDescendantSelectorNodes=this.parseWhitespaceEquivalentTokens(nextSigTokenPos)}var node;if(this.isNamedCombinator()){node=this.namedCombinator()}else if(this.currToken[_tokenize.FIELDS.TYPE]===tokens.combinator){node=new _combinator[\"default\"]({value:this.content(),source:getTokenSource(this.currToken),sourceIndex:this.currToken[_tokenize.FIELDS.START_POS]});this.position++}else if(WHITESPACE_TOKENS[this.currToken[_tokenize.FIELDS.TYPE]]){}else if(!spaceOrDescendantSelectorNodes){this.unexpected()}if(node){if(spaceOrDescendantSelectorNodes){var _this$convertWhitespa2=this.convertWhitespaceNodesToSpace(spaceOrDescendantSelectorNodes),_space=_this$convertWhitespa2.space,_rawSpace=_this$convertWhitespa2.rawSpace;node.spaces.before=_space;node.rawSpaceBefore=_rawSpace}}else{var _this$convertWhitespa3=this.convertWhitespaceNodesToSpace(spaceOrDescendantSelectorNodes,true),_space2=_this$convertWhitespa3.space,_rawSpace2=_this$convertWhitespa3.rawSpace;if(!_rawSpace2){_rawSpace2=_space2}var spaces={};var raws={spaces:{}};if(_space2.endsWith(\" \")&&_rawSpace2.endsWith(\" \")){spaces.before=_space2.slice(0,_space2.length-1);raws.spaces.before=_rawSpace2.slice(0,_rawSpace2.length-1)}else if(_space2.startsWith(\" \")&&_rawSpace2.startsWith(\" \")){spaces.after=_space2.slice(1);raws.spaces.after=_rawSpace2.slice(1)}else{raws.value=_rawSpace2}node=new _combinator[\"default\"]({value:\" \",source:getTokenSourceSpan(firstToken,this.tokens[this.position-1]),sourceIndex:firstToken[_tokenize.FIELDS.START_POS],spaces,raws})}if(this.currToken&&this.currToken[_tokenize.FIELDS.TYPE]===tokens.space){node.spaces.after=this.optionalSpace(this.content());this.position++}return this.newNode(node)},\"combinator\");_proto.comma=__name(function comma(){if(this.position===this.tokens.length-1){this.root.trailingComma=true;this.position++;return}this.current._inferEndPosition();var selector=new _selector[\"default\"]({source:{start:tokenStart(this.tokens[this.position+1])}});this.current.parent.append(selector);this.current=selector;this.position++},\"comma\");_proto.comment=__name(function comment(){var current=this.currToken;this.newNode(new _comment[\"default\"]({value:this.content(),source:getTokenSource(current),sourceIndex:current[_tokenize.FIELDS.START_POS]}));this.position++},\"comment\");_proto.error=__name(function error(message,opts){throw this.root.error(message,opts)},\"error\");_proto.missingBackslash=__name(function missingBackslash(){return this.error(\"Expected a backslash preceding the semicolon.\",{index:this.currToken[_tokenize.FIELDS.START_POS]})},\"missingBackslash\");_proto.missingParenthesis=__name(function missingParenthesis(){return this.expected(\"opening parenthesis\",this.currToken[_tokenize.FIELDS.START_POS])},\"missingParenthesis\");_proto.missingSquareBracket=__name(function missingSquareBracket(){return this.expected(\"opening square bracket\",this.currToken[_tokenize.FIELDS.START_POS])},\"missingSquareBracket\");_proto.unexpected=__name(function unexpected(){return this.error(\"Unexpected '\"+this.content()+\"'. Escaping special characters with \\\\ may help.\",this.currToken[_tokenize.FIELDS.START_POS])},\"unexpected\");_proto.unexpectedPipe=__name(function unexpectedPipe(){return this.error(\"Unexpected '|'.\",this.currToken[_tokenize.FIELDS.START_POS])},\"unexpectedPipe\");_proto.namespace=__name(function namespace(){var before=this.prevToken&&this.content(this.prevToken)||true;if(this.nextToken[_tokenize.FIELDS.TYPE]===tokens.word){this.position++;return this.word(before)}else if(this.nextToken[_tokenize.FIELDS.TYPE]===tokens.asterisk){this.position++;return this.universal(before)}this.unexpectedPipe()},\"namespace\");_proto.nesting=__name(function nesting(){if(this.nextToken){var nextContent=this.content(this.nextToken);if(nextContent===\"|\"){this.position++;return}}var current=this.currToken;this.newNode(new _nesting[\"default\"]({value:this.content(),source:getTokenSource(current),sourceIndex:current[_tokenize.FIELDS.START_POS]}));this.position++},\"nesting\");_proto.parentheses=__name(function parentheses(){var last=this.current.last;var unbalanced=1;this.position++;if(last&&last.type===types.PSEUDO){var selector=new _selector[\"default\"]({source:{start:tokenStart(this.tokens[this.position-1])}});var cache=this.current;last.append(selector);this.current=selector;while(this.position<this.tokens.length&&unbalanced){if(this.currToken[_tokenize.FIELDS.TYPE]===tokens.openParenthesis){unbalanced++}if(this.currToken[_tokenize.FIELDS.TYPE]===tokens.closeParenthesis){unbalanced--}if(unbalanced){this.parse()}else{this.current.source.end=tokenEnd(this.currToken);this.current.parent.source.end=tokenEnd(this.currToken);this.position++}}this.current=cache}else{var parenStart=this.currToken;var parenValue=\"(\";var parenEnd;while(this.position<this.tokens.length&&unbalanced){if(this.currToken[_tokenize.FIELDS.TYPE]===tokens.openParenthesis){unbalanced++}if(this.currToken[_tokenize.FIELDS.TYPE]===tokens.closeParenthesis){unbalanced--}parenEnd=this.currToken;parenValue+=this.parseParenthesisToken(this.currToken);this.position++}if(last){last.appendToPropertyAndEscape(\"value\",parenValue,parenValue)}else{this.newNode(new _string[\"default\"]({value:parenValue,source:getSource(parenStart[_tokenize.FIELDS.START_LINE],parenStart[_tokenize.FIELDS.START_COL],parenEnd[_tokenize.FIELDS.END_LINE],parenEnd[_tokenize.FIELDS.END_COL]),sourceIndex:parenStart[_tokenize.FIELDS.START_POS]}))}}if(unbalanced){return this.expected(\"closing parenthesis\",this.currToken[_tokenize.FIELDS.START_POS])}},\"parentheses\");_proto.pseudo=__name(function pseudo(){var _this4=this;var pseudoStr=\"\";var startingToken=this.currToken;while(this.currToken&&this.currToken[_tokenize.FIELDS.TYPE]===tokens.colon){pseudoStr+=this.content();this.position++}if(!this.currToken){return this.expected([\"pseudo-class\",\"pseudo-element\"],this.position-1)}if(this.currToken[_tokenize.FIELDS.TYPE]===tokens.word){this.splitWord(false,function(first,length){pseudoStr+=first;_this4.newNode(new _pseudo[\"default\"]({value:pseudoStr,source:getTokenSourceSpan(startingToken,_this4.currToken),sourceIndex:startingToken[_tokenize.FIELDS.START_POS]}));if(length>1&&_this4.nextToken&&_this4.nextToken[_tokenize.FIELDS.TYPE]===tokens.openParenthesis){_this4.error(\"Misplaced parenthesis.\",{index:_this4.nextToken[_tokenize.FIELDS.START_POS]})}})}else{return this.expected([\"pseudo-class\",\"pseudo-element\"],this.currToken[_tokenize.FIELDS.START_POS])}},\"pseudo\");_proto.space=__name(function space(){var content=this.content();if(this.position===0||this.prevToken[_tokenize.FIELDS.TYPE]===tokens.comma||this.prevToken[_tokenize.FIELDS.TYPE]===tokens.openParenthesis||this.current.nodes.every(function(node){return node.type===\"comment\"})){this.spaces=this.optionalSpace(content);this.position++}else if(this.position===this.tokens.length-1||this.nextToken[_tokenize.FIELDS.TYPE]===tokens.comma||this.nextToken[_tokenize.FIELDS.TYPE]===tokens.closeParenthesis){this.current.last.spaces.after=this.optionalSpace(content);this.position++}else{this.combinator()}},\"space\");_proto.string=__name(function string(){var current=this.currToken;this.newNode(new _string[\"default\"]({value:this.content(),source:getTokenSource(current),sourceIndex:current[_tokenize.FIELDS.START_POS]}));this.position++},\"string\");_proto.universal=__name(function universal(namespace){var nextToken=this.nextToken;if(nextToken&&this.content(nextToken)===\"|\"){this.position++;return this.namespace()}var current=this.currToken;this.newNode(new _universal[\"default\"]({value:this.content(),source:getTokenSource(current),sourceIndex:current[_tokenize.FIELDS.START_POS]}),namespace);this.position++},\"universal\");_proto.splitWord=__name(function splitWord(namespace,firstCallback){var _this5=this;var nextToken=this.nextToken;var word=this.content();while(nextToken&&~[tokens.dollar,tokens.caret,tokens.equals,tokens.word].indexOf(nextToken[_tokenize.FIELDS.TYPE])){this.position++;var current=this.content();word+=current;if(current.lastIndexOf(\"\\\\\")===current.length-1){var next=this.nextToken;if(next&&next[_tokenize.FIELDS.TYPE]===tokens.space){word+=this.requiredSpace(this.content(next));this.position++}}nextToken=this.nextToken}var hasClass=indexesOf(word,\".\").filter(function(i){var escapedDot=word[i-1]===\"\\\\\";var isKeyframesPercent=/^\\d+\\.\\d+%$/.test(word);return!escapedDot&&!isKeyframesPercent});var hasId=indexesOf(word,\"#\").filter(function(i){return word[i-1]!==\"\\\\\"});var interpolations=indexesOf(word,\"#{\");if(interpolations.length){hasId=hasId.filter(function(hashIndex){return!~interpolations.indexOf(hashIndex)})}var indices=(0,_sortAscending[\"default\"])(uniqs([0].concat(hasClass,hasId)));indices.forEach(function(ind,i){var index=indices[i+1]||word.length;var value=word.slice(ind,index);if(i===0&&firstCallback){return firstCallback.call(_this5,value,indices.length)}var node;var current2=_this5.currToken;var sourceIndex=current2[_tokenize.FIELDS.START_POS]+indices[i];var source=getSource(current2[1],current2[2]+ind,current2[3],current2[2]+(index-1));if(~hasClass.indexOf(ind)){var classNameOpts={value:value.slice(1),source,sourceIndex};node=new _className[\"default\"](unescapeProp(classNameOpts,\"value\"))}else if(~hasId.indexOf(ind)){var idOpts={value:value.slice(1),source,sourceIndex};node=new _id[\"default\"](unescapeProp(idOpts,\"value\"))}else{var tagOpts={value,source,sourceIndex};unescapeProp(tagOpts,\"value\");node=new _tag[\"default\"](tagOpts)}_this5.newNode(node,namespace);namespace=null});this.position++},\"splitWord\");_proto.word=__name(function word(namespace){var nextToken=this.nextToken;if(nextToken&&this.content(nextToken)===\"|\"){this.position++;return this.namespace()}return this.splitWord(namespace)},\"word\");_proto.loop=__name(function loop(){while(this.position<this.tokens.length){this.parse(true)}this.current._inferEndPosition();return this.root},\"loop\");_proto.parse=__name(function parse(throwOnParenthesis){switch(this.currToken[_tokenize.FIELDS.TYPE]){case tokens.space:this.space();break;case tokens.comment:this.comment();break;case tokens.openParenthesis:this.parentheses();break;case tokens.closeParenthesis:if(throwOnParenthesis){this.missingParenthesis()}break;case tokens.openSquare:this.attribute();break;case tokens.dollar:case tokens.caret:case tokens.equals:case tokens.word:this.word();break;case tokens.colon:this.pseudo();break;case tokens.comma:this.comma();break;case tokens.asterisk:this.universal();break;case tokens.ampersand:this.nesting();break;case tokens.slash:case tokens.combinator:this.combinator();break;case tokens.str:this.string();break;case tokens.closeSquare:this.missingSquareBracket();case tokens.semicolon:this.missingBackslash();default:this.unexpected()}},\"parse\");_proto.expected=__name(function expected(description,index,found){if(Array.isArray(description)){var last=description.pop();description=description.join(\", \")+\" or \"+last}var an=/^[aeiou]/.test(description[0])?\"an\":\"a\";if(!found){return this.error(\"Expected \"+an+\" \"+description+\".\",{index})}return this.error(\"Expected \"+an+\" \"+description+', found \"'+found+'\" instead.',{index})},\"expected\");_proto.requiredSpace=__name(function requiredSpace(space){return this.options.lossy?\" \":space},\"requiredSpace\");_proto.optionalSpace=__name(function optionalSpace(space){return this.options.lossy?\"\":space},\"optionalSpace\");_proto.lossySpace=__name(function lossySpace(space,required){if(this.options.lossy){return required?\" \":\"\"}else{return space}},\"lossySpace\");_proto.parseParenthesisToken=__name(function parseParenthesisToken(token){var content=this.content(token);if(token[_tokenize.FIELDS.TYPE]===tokens.space){return this.requiredSpace(content)}else{return content}},\"parseParenthesisToken\");_proto.newNode=__name(function newNode(node,namespace){if(namespace){if(/^ +$/.test(namespace)){if(!this.options.lossy){this.spaces=(this.spaces||\"\")+namespace}namespace=true}node.namespace=namespace;unescapeProp(node,\"namespace\")}if(this.spaces){node.spaces.before=this.spaces;this.spaces=\"\"}return this.current.append(node)},\"newNode\");_proto.content=__name(function content(token){if(token===void 0){token=this.currToken}return this.css.slice(token[_tokenize.FIELDS.START_POS],token[_tokenize.FIELDS.END_POS])},\"content\");_proto.locateNextMeaningfulToken=__name(function locateNextMeaningfulToken(startPosition){if(startPosition===void 0){startPosition=this.position+1}var searchPosition=startPosition;while(searchPosition<this.tokens.length){if(WHITESPACE_EQUIV_TOKENS[this.tokens[searchPosition][_tokenize.FIELDS.TYPE]]){searchPosition++;continue}else{return searchPosition}}return-1},\"locateNextMeaningfulToken\");_createClass(Parser2,[{key:\"currToken\",get:__name(function get(){return this.tokens[this.position]},\"get\")},{key:\"nextToken\",get:__name(function get(){return this.tokens[this.position+1]},\"get\")},{key:\"prevToken\",get:__name(function get(){return this.tokens[this.position-1]},\"get\")}]);return Parser2}();exports[\"default\"]=Parser;module.exports=exports.default;\n})()\n","warnings":[],"map":{"version":3,"mappings":"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","names":["_getRequireWildcardCache","nodeInterop","Parser","current"],"sources":["/root/projects/zachw-i/packages/plugin/node_modules/.pnpm/postcss-selector-parser@6.0.13/node_modules/postcss-selector-parser/dist/parser.js"],"sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _root = _interopRequireDefault(require(\"./selectors/root\"));\nvar _selector = _interopRequireDefault(require(\"./selectors/selector\"));\nvar _className = _interopRequireDefault(require(\"./selectors/className\"));\nvar _comment = _interopRequireDefault(require(\"./selectors/comment\"));\nvar _id = _interopRequireDefault(require(\"./selectors/id\"));\nvar _tag = _interopRequireDefault(require(\"./selectors/tag\"));\nvar _string = _interopRequireDefault(require(\"./selectors/string\"));\nvar _pseudo = _interopRequireDefault(require(\"./selectors/pseudo\"));\nvar _attribute = _interopRequireWildcard(require(\"./selectors/attribute\"));\nvar _universal = _interopRequireDefault(require(\"./selectors/universal\"));\nvar _combinator = _interopRequireDefault(require(\"./selectors/combinator\"));\nvar _nesting = _interopRequireDefault(require(\"./selectors/nesting\"));\nvar _sortAscending = _interopRequireDefault(require(\"./sortAscending\"));\nvar _tokenize = _interopRequireWildcard(require(\"./tokenize\"));\nvar tokens = _interopRequireWildcard(require(\"./tokenTypes\"));\nvar types = _interopRequireWildcard(require(\"./selectors/types\"));\nvar _util = require(\"./util\");\nvar _WHITESPACE_TOKENS, _Object$assign;\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nvar WHITESPACE_TOKENS = (_WHITESPACE_TOKENS = {}, _WHITESPACE_TOKENS[tokens.space] = true, _WHITESPACE_TOKENS[tokens.cr] = true, _WHITESPACE_TOKENS[tokens.feed] = true, _WHITESPACE_TOKENS[tokens.newline] = true, _WHITESPACE_TOKENS[tokens.tab] = true, _WHITESPACE_TOKENS);\nvar WHITESPACE_EQUIV_TOKENS = Object.assign({}, WHITESPACE_TOKENS, (_Object$assign = {}, _Object$assign[tokens.comment] = true, _Object$assign));\nfunction tokenStart(token) {\n  return {\n    line: token[_tokenize.FIELDS.START_LINE],\n    column: token[_tokenize.FIELDS.START_COL]\n  };\n}\nfunction tokenEnd(token) {\n  return {\n    line: token[_tokenize.FIELDS.END_LINE],\n    column: token[_tokenize.FIELDS.END_COL]\n  };\n}\nfunction getSource(startLine, startColumn, endLine, endColumn) {\n  return {\n    start: {\n      line: startLine,\n      column: startColumn\n    },\n    end: {\n      line: endLine,\n      column: endColumn\n    }\n  };\n}\nfunction getTokenSource(token) {\n  return getSource(token[_tokenize.FIELDS.START_LINE], token[_tokenize.FIELDS.START_COL], token[_tokenize.FIELDS.END_LINE], token[_tokenize.FIELDS.END_COL]);\n}\nfunction getTokenSourceSpan(startToken, endToken) {\n  if (!startToken) {\n    return undefined;\n  }\n  return getSource(startToken[_tokenize.FIELDS.START_LINE], startToken[_tokenize.FIELDS.START_COL], endToken[_tokenize.FIELDS.END_LINE], endToken[_tokenize.FIELDS.END_COL]);\n}\nfunction unescapeProp(node, prop) {\n  var value = node[prop];\n  if (typeof value !== \"string\") {\n    return;\n  }\n  if (value.indexOf(\"\\\\\") !== -1) {\n    (0, _util.ensureObject)(node, 'raws');\n    node[prop] = (0, _util.unesc)(value);\n    if (node.raws[prop] === undefined) {\n      node.raws[prop] = value;\n    }\n  }\n  return node;\n}\nfunction indexesOf(array, item) {\n  var i = -1;\n  var indexes = [];\n  while ((i = array.indexOf(item, i + 1)) !== -1) {\n    indexes.push(i);\n  }\n  return indexes;\n}\nfunction uniqs() {\n  var list = Array.prototype.concat.apply([], arguments);\n  return list.filter(function (item, i) {\n    return i === list.indexOf(item);\n  });\n}\nvar Parser = /*#__PURE__*/function () {\n  function Parser(rule, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    this.rule = rule;\n    this.options = Object.assign({\n      lossy: false,\n      safe: false\n    }, options);\n    this.position = 0;\n    this.css = typeof this.rule === 'string' ? this.rule : this.rule.selector;\n    this.tokens = (0, _tokenize[\"default\"])({\n      css: this.css,\n      error: this._errorGenerator(),\n      safe: this.options.safe\n    });\n    var rootSource = getTokenSourceSpan(this.tokens[0], this.tokens[this.tokens.length - 1]);\n    this.root = new _root[\"default\"]({\n      source: rootSource\n    });\n    this.root.errorGenerator = this._errorGenerator();\n    var selector = new _selector[\"default\"]({\n      source: {\n        start: {\n          line: 1,\n          column: 1\n        }\n      }\n    });\n    this.root.append(selector);\n    this.current = selector;\n    this.loop();\n  }\n  var _proto = Parser.prototype;\n  _proto._errorGenerator = function _errorGenerator() {\n    var _this = this;\n    return function (message, errorOptions) {\n      if (typeof _this.rule === 'string') {\n        return new Error(message);\n      }\n      return _this.rule.error(message, errorOptions);\n    };\n  };\n  _proto.attribute = function attribute() {\n    var attr = [];\n    var startingToken = this.currToken;\n    this.position++;\n    while (this.position < this.tokens.length && this.currToken[_tokenize.FIELDS.TYPE] !== tokens.closeSquare) {\n      attr.push(this.currToken);\n      this.position++;\n    }\n    if (this.currToken[_tokenize.FIELDS.TYPE] !== tokens.closeSquare) {\n      return this.expected('closing square bracket', this.currToken[_tokenize.FIELDS.START_POS]);\n    }\n    var len = attr.length;\n    var node = {\n      source: getSource(startingToken[1], startingToken[2], this.currToken[3], this.currToken[4]),\n      sourceIndex: startingToken[_tokenize.FIELDS.START_POS]\n    };\n    if (len === 1 && !~[tokens.word].indexOf(attr[0][_tokenize.FIELDS.TYPE])) {\n      return this.expected('attribute', attr[0][_tokenize.FIELDS.START_POS]);\n    }\n    var pos = 0;\n    var spaceBefore = '';\n    var commentBefore = '';\n    var lastAdded = null;\n    var spaceAfterMeaningfulToken = false;\n    while (pos < len) {\n      var token = attr[pos];\n      var content = this.content(token);\n      var next = attr[pos + 1];\n      switch (token[_tokenize.FIELDS.TYPE]) {\n        case tokens.space:\n          // if (\n          //     len === 1 ||\n          //     pos === 0 && this.content(next) === '|'\n          // ) {\n          //     return this.expected('attribute', token[TOKEN.START_POS], content);\n          // }\n          spaceAfterMeaningfulToken = true;\n          if (this.options.lossy) {\n            break;\n          }\n          if (lastAdded) {\n            (0, _util.ensureObject)(node, 'spaces', lastAdded);\n            var prevContent = node.spaces[lastAdded].after || '';\n            node.spaces[lastAdded].after = prevContent + content;\n            var existingComment = (0, _util.getProp)(node, 'raws', 'spaces', lastAdded, 'after') || null;\n            if (existingComment) {\n              node.raws.spaces[lastAdded].after = existingComment + content;\n            }\n          } else {\n            spaceBefore = spaceBefore + content;\n            commentBefore = commentBefore + content;\n          }\n          break;\n        case tokens.asterisk:\n          if (next[_tokenize.FIELDS.TYPE] === tokens.equals) {\n            node.operator = content;\n            lastAdded = 'operator';\n          } else if ((!node.namespace || lastAdded === \"namespace\" && !spaceAfterMeaningfulToken) && next) {\n            if (spaceBefore) {\n              (0, _util.ensureObject)(node, 'spaces', 'attribute');\n              node.spaces.attribute.before = spaceBefore;\n              spaceBefore = '';\n            }\n            if (commentBefore) {\n              (0, _util.ensureObject)(node, 'raws', 'spaces', 'attribute');\n              node.raws.spaces.attribute.before = spaceBefore;\n              commentBefore = '';\n            }\n            node.namespace = (node.namespace || \"\") + content;\n            var rawValue = (0, _util.getProp)(node, 'raws', 'namespace') || null;\n            if (rawValue) {\n              node.raws.namespace += content;\n            }\n            lastAdded = 'namespace';\n          }\n          spaceAfterMeaningfulToken = false;\n          break;\n        case tokens.dollar:\n          if (lastAdded === \"value\") {\n            var oldRawValue = (0, _util.getProp)(node, 'raws', 'value');\n            node.value += \"$\";\n            if (oldRawValue) {\n              node.raws.value = oldRawValue + \"$\";\n            }\n            break;\n          }\n        // Falls through\n        case tokens.caret:\n          if (next[_tokenize.FIELDS.TYPE] === tokens.equals) {\n            node.operator = content;\n            lastAdded = 'operator';\n          }\n          spaceAfterMeaningfulToken = false;\n          break;\n        case tokens.combinator:\n          if (content === '~' && next[_tokenize.FIELDS.TYPE] === tokens.equals) {\n            node.operator = content;\n            lastAdded = 'operator';\n          }\n          if (content !== '|') {\n            spaceAfterMeaningfulToken = false;\n            break;\n          }\n          if (next[_tokenize.FIELDS.TYPE] === tokens.equals) {\n            node.operator = content;\n            lastAdded = 'operator';\n          } else if (!node.namespace && !node.attribute) {\n            node.namespace = true;\n          }\n          spaceAfterMeaningfulToken = false;\n          break;\n        case tokens.word:\n          if (next && this.content(next) === '|' && attr[pos + 2] && attr[pos + 2][_tokenize.FIELDS.TYPE] !== tokens.equals &&\n          // this look-ahead probably fails with comment nodes involved.\n          !node.operator && !node.namespace) {\n            node.namespace = content;\n            lastAdded = 'namespace';\n          } else if (!node.attribute || lastAdded === \"attribute\" && !spaceAfterMeaningfulToken) {\n            if (spaceBefore) {\n              (0, _util.ensureObject)(node, 'spaces', 'attribute');\n              node.spaces.attribute.before = spaceBefore;\n              spaceBefore = '';\n            }\n            if (commentBefore) {\n              (0, _util.ensureObject)(node, 'raws', 'spaces', 'attribute');\n              node.raws.spaces.attribute.before = commentBefore;\n              commentBefore = '';\n            }\n            node.attribute = (node.attribute || \"\") + content;\n            var _rawValue = (0, _util.getProp)(node, 'raws', 'attribute') || null;\n            if (_rawValue) {\n              node.raws.attribute += content;\n            }\n            lastAdded = 'attribute';\n          } else if (!node.value && node.value !== \"\" || lastAdded === \"value\" && !(spaceAfterMeaningfulToken || node.quoteMark)) {\n            var _unescaped = (0, _util.unesc)(content);\n            var _oldRawValue = (0, _util.getProp)(node, 'raws', 'value') || '';\n            var oldValue = node.value || '';\n            node.value = oldValue + _unescaped;\n            node.quoteMark = null;\n            if (_unescaped !== content || _oldRawValue) {\n              (0, _util.ensureObject)(node, 'raws');\n              node.raws.value = (_oldRawValue || oldValue) + content;\n            }\n            lastAdded = 'value';\n          } else {\n            var insensitive = content === 'i' || content === \"I\";\n            if ((node.value || node.value === '') && (node.quoteMark || spaceAfterMeaningfulToken)) {\n              node.insensitive = insensitive;\n              if (!insensitive || content === \"I\") {\n                (0, _util.ensureObject)(node, 'raws');\n                node.raws.insensitiveFlag = content;\n              }\n              lastAdded = 'insensitive';\n              if (spaceBefore) {\n                (0, _util.ensureObject)(node, 'spaces', 'insensitive');\n                node.spaces.insensitive.before = spaceBefore;\n                spaceBefore = '';\n              }\n              if (commentBefore) {\n                (0, _util.ensureObject)(node, 'raws', 'spaces', 'insensitive');\n                node.raws.spaces.insensitive.before = commentBefore;\n                commentBefore = '';\n              }\n            } else if (node.value || node.value === '') {\n              lastAdded = 'value';\n              node.value += content;\n              if (node.raws.value) {\n                node.raws.value += content;\n              }\n            }\n          }\n          spaceAfterMeaningfulToken = false;\n          break;\n        case tokens.str:\n          if (!node.attribute || !node.operator) {\n            return this.error(\"Expected an attribute followed by an operator preceding the string.\", {\n              index: token[_tokenize.FIELDS.START_POS]\n            });\n          }\n          var _unescapeValue = (0, _attribute.unescapeValue)(content),\n            unescaped = _unescapeValue.unescaped,\n            quoteMark = _unescapeValue.quoteMark;\n          node.value = unescaped;\n          node.quoteMark = quoteMark;\n          lastAdded = 'value';\n          (0, _util.ensureObject)(node, 'raws');\n          node.raws.value = content;\n          spaceAfterMeaningfulToken = false;\n          break;\n        case tokens.equals:\n          if (!node.attribute) {\n            return this.expected('attribute', token[_tokenize.FIELDS.START_POS], content);\n          }\n          if (node.value) {\n            return this.error('Unexpected \"=\" found; an operator was already defined.', {\n              index: token[_tokenize.FIELDS.START_POS]\n            });\n          }\n          node.operator = node.operator ? node.operator + content : content;\n          lastAdded = 'operator';\n          spaceAfterMeaningfulToken = false;\n          break;\n        case tokens.comment:\n          if (lastAdded) {\n            if (spaceAfterMeaningfulToken || next && next[_tokenize.FIELDS.TYPE] === tokens.space || lastAdded === 'insensitive') {\n              var lastComment = (0, _util.getProp)(node, 'spaces', lastAdded, 'after') || '';\n              var rawLastComment = (0, _util.getProp)(node, 'raws', 'spaces', lastAdded, 'after') || lastComment;\n              (0, _util.ensureObject)(node, 'raws', 'spaces', lastAdded);\n              node.raws.spaces[lastAdded].after = rawLastComment + content;\n            } else {\n              var lastValue = node[lastAdded] || '';\n              var rawLastValue = (0, _util.getProp)(node, 'raws', lastAdded) || lastValue;\n              (0, _util.ensureObject)(node, 'raws');\n              node.raws[lastAdded] = rawLastValue + content;\n            }\n          } else {\n            commentBefore = commentBefore + content;\n          }\n          break;\n        default:\n          return this.error(\"Unexpected \\\"\" + content + \"\\\" found.\", {\n            index: token[_tokenize.FIELDS.START_POS]\n          });\n      }\n      pos++;\n    }\n    unescapeProp(node, \"attribute\");\n    unescapeProp(node, \"namespace\");\n    this.newNode(new _attribute[\"default\"](node));\n    this.position++;\n  }\n\n  /**\n   * return a node containing meaningless garbage up to (but not including) the specified token position.\n   * if the token position is negative, all remaining tokens are consumed.\n   *\n   * This returns an array containing a single string node if all whitespace,\n   * otherwise an array of comment nodes with space before and after.\n   *\n   * These tokens are not added to the current selector, the caller can add them or use them to amend\n   * a previous node's space metadata.\n   *\n   * In lossy mode, this returns only comments.\n   */;\n  _proto.parseWhitespaceEquivalentTokens = function parseWhitespaceEquivalentTokens(stopPosition) {\n    if (stopPosition < 0) {\n      stopPosition = this.tokens.length;\n    }\n    var startPosition = this.position;\n    var nodes = [];\n    var space = \"\";\n    var lastComment = undefined;\n    do {\n      if (WHITESPACE_TOKENS[this.currToken[_tokenize.FIELDS.TYPE]]) {\n        if (!this.options.lossy) {\n          space += this.content();\n        }\n      } else if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.comment) {\n        var spaces = {};\n        if (space) {\n          spaces.before = space;\n          space = \"\";\n        }\n        lastComment = new _comment[\"default\"]({\n          value: this.content(),\n          source: getTokenSource(this.currToken),\n          sourceIndex: this.currToken[_tokenize.FIELDS.START_POS],\n          spaces: spaces\n        });\n        nodes.push(lastComment);\n      }\n    } while (++this.position < stopPosition);\n    if (space) {\n      if (lastComment) {\n        lastComment.spaces.after = space;\n      } else if (!this.options.lossy) {\n        var firstToken = this.tokens[startPosition];\n        var lastToken = this.tokens[this.position - 1];\n        nodes.push(new _string[\"default\"]({\n          value: '',\n          source: getSource(firstToken[_tokenize.FIELDS.START_LINE], firstToken[_tokenize.FIELDS.START_COL], lastToken[_tokenize.FIELDS.END_LINE], lastToken[_tokenize.FIELDS.END_COL]),\n          sourceIndex: firstToken[_tokenize.FIELDS.START_POS],\n          spaces: {\n            before: space,\n            after: ''\n          }\n        }));\n      }\n    }\n    return nodes;\n  }\n\n  /**\n   *\n   * @param {*} nodes\n   */;\n  _proto.convertWhitespaceNodesToSpace = function convertWhitespaceNodesToSpace(nodes, requiredSpace) {\n    var _this2 = this;\n    if (requiredSpace === void 0) {\n      requiredSpace = false;\n    }\n    var space = \"\";\n    var rawSpace = \"\";\n    nodes.forEach(function (n) {\n      var spaceBefore = _this2.lossySpace(n.spaces.before, requiredSpace);\n      var rawSpaceBefore = _this2.lossySpace(n.rawSpaceBefore, requiredSpace);\n      space += spaceBefore + _this2.lossySpace(n.spaces.after, requiredSpace && spaceBefore.length === 0);\n      rawSpace += spaceBefore + n.value + _this2.lossySpace(n.rawSpaceAfter, requiredSpace && rawSpaceBefore.length === 0);\n    });\n    if (rawSpace === space) {\n      rawSpace = undefined;\n    }\n    var result = {\n      space: space,\n      rawSpace: rawSpace\n    };\n    return result;\n  };\n  _proto.isNamedCombinator = function isNamedCombinator(position) {\n    if (position === void 0) {\n      position = this.position;\n    }\n    return this.tokens[position + 0] && this.tokens[position + 0][_tokenize.FIELDS.TYPE] === tokens.slash && this.tokens[position + 1] && this.tokens[position + 1][_tokenize.FIELDS.TYPE] === tokens.word && this.tokens[position + 2] && this.tokens[position + 2][_tokenize.FIELDS.TYPE] === tokens.slash;\n  };\n  _proto.namedCombinator = function namedCombinator() {\n    if (this.isNamedCombinator()) {\n      var nameRaw = this.content(this.tokens[this.position + 1]);\n      var name = (0, _util.unesc)(nameRaw).toLowerCase();\n      var raws = {};\n      if (name !== nameRaw) {\n        raws.value = \"/\" + nameRaw + \"/\";\n      }\n      var node = new _combinator[\"default\"]({\n        value: \"/\" + name + \"/\",\n        source: getSource(this.currToken[_tokenize.FIELDS.START_LINE], this.currToken[_tokenize.FIELDS.START_COL], this.tokens[this.position + 2][_tokenize.FIELDS.END_LINE], this.tokens[this.position + 2][_tokenize.FIELDS.END_COL]),\n        sourceIndex: this.currToken[_tokenize.FIELDS.START_POS],\n        raws: raws\n      });\n      this.position = this.position + 3;\n      return node;\n    } else {\n      this.unexpected();\n    }\n  };\n  _proto.combinator = function combinator() {\n    var _this3 = this;\n    if (this.content() === '|') {\n      return this.namespace();\n    }\n    // We need to decide between a space that's a descendant combinator and meaningless whitespace at the end of a selector.\n    var nextSigTokenPos = this.locateNextMeaningfulToken(this.position);\n    if (nextSigTokenPos < 0 || this.tokens[nextSigTokenPos][_tokenize.FIELDS.TYPE] === tokens.comma) {\n      var nodes = this.parseWhitespaceEquivalentTokens(nextSigTokenPos);\n      if (nodes.length > 0) {\n        var last = this.current.last;\n        if (last) {\n          var _this$convertWhitespa = this.convertWhitespaceNodesToSpace(nodes),\n            space = _this$convertWhitespa.space,\n            rawSpace = _this$convertWhitespa.rawSpace;\n          if (rawSpace !== undefined) {\n            last.rawSpaceAfter += rawSpace;\n          }\n          last.spaces.after += space;\n        } else {\n          nodes.forEach(function (n) {\n            return _this3.newNode(n);\n          });\n        }\n      }\n      return;\n    }\n    var firstToken = this.currToken;\n    var spaceOrDescendantSelectorNodes = undefined;\n    if (nextSigTokenPos > this.position) {\n      spaceOrDescendantSelectorNodes = this.parseWhitespaceEquivalentTokens(nextSigTokenPos);\n    }\n    var node;\n    if (this.isNamedCombinator()) {\n      node = this.namedCombinator();\n    } else if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.combinator) {\n      node = new _combinator[\"default\"]({\n        value: this.content(),\n        source: getTokenSource(this.currToken),\n        sourceIndex: this.currToken[_tokenize.FIELDS.START_POS]\n      });\n      this.position++;\n    } else if (WHITESPACE_TOKENS[this.currToken[_tokenize.FIELDS.TYPE]]) {\n      // pass\n    } else if (!spaceOrDescendantSelectorNodes) {\n      this.unexpected();\n    }\n    if (node) {\n      if (spaceOrDescendantSelectorNodes) {\n        var _this$convertWhitespa2 = this.convertWhitespaceNodesToSpace(spaceOrDescendantSelectorNodes),\n          _space = _this$convertWhitespa2.space,\n          _rawSpace = _this$convertWhitespa2.rawSpace;\n        node.spaces.before = _space;\n        node.rawSpaceBefore = _rawSpace;\n      }\n    } else {\n      // descendant combinator\n      var _this$convertWhitespa3 = this.convertWhitespaceNodesToSpace(spaceOrDescendantSelectorNodes, true),\n        _space2 = _this$convertWhitespa3.space,\n        _rawSpace2 = _this$convertWhitespa3.rawSpace;\n      if (!_rawSpace2) {\n        _rawSpace2 = _space2;\n      }\n      var spaces = {};\n      var raws = {\n        spaces: {}\n      };\n      if (_space2.endsWith(' ') && _rawSpace2.endsWith(' ')) {\n        spaces.before = _space2.slice(0, _space2.length - 1);\n        raws.spaces.before = _rawSpace2.slice(0, _rawSpace2.length - 1);\n      } else if (_space2.startsWith(' ') && _rawSpace2.startsWith(' ')) {\n        spaces.after = _space2.slice(1);\n        raws.spaces.after = _rawSpace2.slice(1);\n      } else {\n        raws.value = _rawSpace2;\n      }\n      node = new _combinator[\"default\"]({\n        value: ' ',\n        source: getTokenSourceSpan(firstToken, this.tokens[this.position - 1]),\n        sourceIndex: firstToken[_tokenize.FIELDS.START_POS],\n        spaces: spaces,\n        raws: raws\n      });\n    }\n    if (this.currToken && this.currToken[_tokenize.FIELDS.TYPE] === tokens.space) {\n      node.spaces.after = this.optionalSpace(this.content());\n      this.position++;\n    }\n    return this.newNode(node);\n  };\n  _proto.comma = function comma() {\n    if (this.position === this.tokens.length - 1) {\n      this.root.trailingComma = true;\n      this.position++;\n      return;\n    }\n    this.current._inferEndPosition();\n    var selector = new _selector[\"default\"]({\n      source: {\n        start: tokenStart(this.tokens[this.position + 1])\n      }\n    });\n    this.current.parent.append(selector);\n    this.current = selector;\n    this.position++;\n  };\n  _proto.comment = function comment() {\n    var current = this.currToken;\n    this.newNode(new _comment[\"default\"]({\n      value: this.content(),\n      source: getTokenSource(current),\n      sourceIndex: current[_tokenize.FIELDS.START_POS]\n    }));\n    this.position++;\n  };\n  _proto.error = function error(message, opts) {\n    throw this.root.error(message, opts);\n  };\n  _proto.missingBackslash = function missingBackslash() {\n    return this.error('Expected a backslash preceding the semicolon.', {\n      index: this.currToken[_tokenize.FIELDS.START_POS]\n    });\n  };\n  _proto.missingParenthesis = function missingParenthesis() {\n    return this.expected('opening parenthesis', this.currToken[_tokenize.FIELDS.START_POS]);\n  };\n  _proto.missingSquareBracket = function missingSquareBracket() {\n    return this.expected('opening square bracket', this.currToken[_tokenize.FIELDS.START_POS]);\n  };\n  _proto.unexpected = function unexpected() {\n    return this.error(\"Unexpected '\" + this.content() + \"'. Escaping special characters with \\\\ may help.\", this.currToken[_tokenize.FIELDS.START_POS]);\n  };\n  _proto.unexpectedPipe = function unexpectedPipe() {\n    return this.error(\"Unexpected '|'.\", this.currToken[_tokenize.FIELDS.START_POS]);\n  };\n  _proto.namespace = function namespace() {\n    var before = this.prevToken && this.content(this.prevToken) || true;\n    if (this.nextToken[_tokenize.FIELDS.TYPE] === tokens.word) {\n      this.position++;\n      return this.word(before);\n    } else if (this.nextToken[_tokenize.FIELDS.TYPE] === tokens.asterisk) {\n      this.position++;\n      return this.universal(before);\n    }\n    this.unexpectedPipe();\n  };\n  _proto.nesting = function nesting() {\n    if (this.nextToken) {\n      var nextContent = this.content(this.nextToken);\n      if (nextContent === \"|\") {\n        this.position++;\n        return;\n      }\n    }\n    var current = this.currToken;\n    this.newNode(new _nesting[\"default\"]({\n      value: this.content(),\n      source: getTokenSource(current),\n      sourceIndex: current[_tokenize.FIELDS.START_POS]\n    }));\n    this.position++;\n  };\n  _proto.parentheses = function parentheses() {\n    var last = this.current.last;\n    var unbalanced = 1;\n    this.position++;\n    if (last && last.type === types.PSEUDO) {\n      var selector = new _selector[\"default\"]({\n        source: {\n          start: tokenStart(this.tokens[this.position - 1])\n        }\n      });\n      var cache = this.current;\n      last.append(selector);\n      this.current = selector;\n      while (this.position < this.tokens.length && unbalanced) {\n        if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.openParenthesis) {\n          unbalanced++;\n        }\n        if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.closeParenthesis) {\n          unbalanced--;\n        }\n        if (unbalanced) {\n          this.parse();\n        } else {\n          this.current.source.end = tokenEnd(this.currToken);\n          this.current.parent.source.end = tokenEnd(this.currToken);\n          this.position++;\n        }\n      }\n      this.current = cache;\n    } else {\n      // I think this case should be an error. It's used to implement a basic parse of media queries\n      // but I don't think it's a good idea.\n      var parenStart = this.currToken;\n      var parenValue = \"(\";\n      var parenEnd;\n      while (this.position < this.tokens.length && unbalanced) {\n        if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.openParenthesis) {\n          unbalanced++;\n        }\n        if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.closeParenthesis) {\n          unbalanced--;\n        }\n        parenEnd = this.currToken;\n        parenValue += this.parseParenthesisToken(this.currToken);\n        this.position++;\n      }\n      if (last) {\n        last.appendToPropertyAndEscape(\"value\", parenValue, parenValue);\n      } else {\n        this.newNode(new _string[\"default\"]({\n          value: parenValue,\n          source: getSource(parenStart[_tokenize.FIELDS.START_LINE], parenStart[_tokenize.FIELDS.START_COL], parenEnd[_tokenize.FIELDS.END_LINE], parenEnd[_tokenize.FIELDS.END_COL]),\n          sourceIndex: parenStart[_tokenize.FIELDS.START_POS]\n        }));\n      }\n    }\n    if (unbalanced) {\n      return this.expected('closing parenthesis', this.currToken[_tokenize.FIELDS.START_POS]);\n    }\n  };\n  _proto.pseudo = function pseudo() {\n    var _this4 = this;\n    var pseudoStr = '';\n    var startingToken = this.currToken;\n    while (this.currToken && this.currToken[_tokenize.FIELDS.TYPE] === tokens.colon) {\n      pseudoStr += this.content();\n      this.position++;\n    }\n    if (!this.currToken) {\n      return this.expected(['pseudo-class', 'pseudo-element'], this.position - 1);\n    }\n    if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.word) {\n      this.splitWord(false, function (first, length) {\n        pseudoStr += first;\n        _this4.newNode(new _pseudo[\"default\"]({\n          value: pseudoStr,\n          source: getTokenSourceSpan(startingToken, _this4.currToken),\n          sourceIndex: startingToken[_tokenize.FIELDS.START_POS]\n        }));\n        if (length > 1 && _this4.nextToken && _this4.nextToken[_tokenize.FIELDS.TYPE] === tokens.openParenthesis) {\n          _this4.error('Misplaced parenthesis.', {\n            index: _this4.nextToken[_tokenize.FIELDS.START_POS]\n          });\n        }\n      });\n    } else {\n      return this.expected(['pseudo-class', 'pseudo-element'], this.currToken[_tokenize.FIELDS.START_POS]);\n    }\n  };\n  _proto.space = function space() {\n    var content = this.content();\n    // Handle space before and after the selector\n    if (this.position === 0 || this.prevToken[_tokenize.FIELDS.TYPE] === tokens.comma || this.prevToken[_tokenize.FIELDS.TYPE] === tokens.openParenthesis || this.current.nodes.every(function (node) {\n      return node.type === 'comment';\n    })) {\n      this.spaces = this.optionalSpace(content);\n      this.position++;\n    } else if (this.position === this.tokens.length - 1 || this.nextToken[_tokenize.FIELDS.TYPE] === tokens.comma || this.nextToken[_tokenize.FIELDS.TYPE] === tokens.closeParenthesis) {\n      this.current.last.spaces.after = this.optionalSpace(content);\n      this.position++;\n    } else {\n      this.combinator();\n    }\n  };\n  _proto.string = function string() {\n    var current = this.currToken;\n    this.newNode(new _string[\"default\"]({\n      value: this.content(),\n      source: getTokenSource(current),\n      sourceIndex: current[_tokenize.FIELDS.START_POS]\n    }));\n    this.position++;\n  };\n  _proto.universal = function universal(namespace) {\n    var nextToken = this.nextToken;\n    if (nextToken && this.content(nextToken) === '|') {\n      this.position++;\n      return this.namespace();\n    }\n    var current = this.currToken;\n    this.newNode(new _universal[\"default\"]({\n      value: this.content(),\n      source: getTokenSource(current),\n      sourceIndex: current[_tokenize.FIELDS.START_POS]\n    }), namespace);\n    this.position++;\n  };\n  _proto.splitWord = function splitWord(namespace, firstCallback) {\n    var _this5 = this;\n    var nextToken = this.nextToken;\n    var word = this.content();\n    while (nextToken && ~[tokens.dollar, tokens.caret, tokens.equals, tokens.word].indexOf(nextToken[_tokenize.FIELDS.TYPE])) {\n      this.position++;\n      var current = this.content();\n      word += current;\n      if (current.lastIndexOf('\\\\') === current.length - 1) {\n        var next = this.nextToken;\n        if (next && next[_tokenize.FIELDS.TYPE] === tokens.space) {\n          word += this.requiredSpace(this.content(next));\n          this.position++;\n        }\n      }\n      nextToken = this.nextToken;\n    }\n    var hasClass = indexesOf(word, '.').filter(function (i) {\n      // Allow escaped dot within class name\n      var escapedDot = word[i - 1] === '\\\\';\n      // Allow decimal numbers percent in @keyframes\n      var isKeyframesPercent = /^\\d+\\.\\d+%$/.test(word);\n      return !escapedDot && !isKeyframesPercent;\n    });\n    var hasId = indexesOf(word, '#').filter(function (i) {\n      return word[i - 1] !== '\\\\';\n    });\n    // Eliminate Sass interpolations from the list of id indexes\n    var interpolations = indexesOf(word, '#{');\n    if (interpolations.length) {\n      hasId = hasId.filter(function (hashIndex) {\n        return !~interpolations.indexOf(hashIndex);\n      });\n    }\n    var indices = (0, _sortAscending[\"default\"])(uniqs([0].concat(hasClass, hasId)));\n    indices.forEach(function (ind, i) {\n      var index = indices[i + 1] || word.length;\n      var value = word.slice(ind, index);\n      if (i === 0 && firstCallback) {\n        return firstCallback.call(_this5, value, indices.length);\n      }\n      var node;\n      var current = _this5.currToken;\n      var sourceIndex = current[_tokenize.FIELDS.START_POS] + indices[i];\n      var source = getSource(current[1], current[2] + ind, current[3], current[2] + (index - 1));\n      if (~hasClass.indexOf(ind)) {\n        var classNameOpts = {\n          value: value.slice(1),\n          source: source,\n          sourceIndex: sourceIndex\n        };\n        node = new _className[\"default\"](unescapeProp(classNameOpts, \"value\"));\n      } else if (~hasId.indexOf(ind)) {\n        var idOpts = {\n          value: value.slice(1),\n          source: source,\n          sourceIndex: sourceIndex\n        };\n        node = new _id[\"default\"](unescapeProp(idOpts, \"value\"));\n      } else {\n        var tagOpts = {\n          value: value,\n          source: source,\n          sourceIndex: sourceIndex\n        };\n        unescapeProp(tagOpts, \"value\");\n        node = new _tag[\"default\"](tagOpts);\n      }\n      _this5.newNode(node, namespace);\n      // Ensure that the namespace is used only once\n      namespace = null;\n    });\n    this.position++;\n  };\n  _proto.word = function word(namespace) {\n    var nextToken = this.nextToken;\n    if (nextToken && this.content(nextToken) === '|') {\n      this.position++;\n      return this.namespace();\n    }\n    return this.splitWord(namespace);\n  };\n  _proto.loop = function loop() {\n    while (this.position < this.tokens.length) {\n      this.parse(true);\n    }\n    this.current._inferEndPosition();\n    return this.root;\n  };\n  _proto.parse = function parse(throwOnParenthesis) {\n    switch (this.currToken[_tokenize.FIELDS.TYPE]) {\n      case tokens.space:\n        this.space();\n        break;\n      case tokens.comment:\n        this.comment();\n        break;\n      case tokens.openParenthesis:\n        this.parentheses();\n        break;\n      case tokens.closeParenthesis:\n        if (throwOnParenthesis) {\n          this.missingParenthesis();\n        }\n        break;\n      case tokens.openSquare:\n        this.attribute();\n        break;\n      case tokens.dollar:\n      case tokens.caret:\n      case tokens.equals:\n      case tokens.word:\n        this.word();\n        break;\n      case tokens.colon:\n        this.pseudo();\n        break;\n      case tokens.comma:\n        this.comma();\n        break;\n      case tokens.asterisk:\n        this.universal();\n        break;\n      case tokens.ampersand:\n        this.nesting();\n        break;\n      case tokens.slash:\n      case tokens.combinator:\n        this.combinator();\n        break;\n      case tokens.str:\n        this.string();\n        break;\n      // These cases throw; no break needed.\n      case tokens.closeSquare:\n        this.missingSquareBracket();\n      case tokens.semicolon:\n        this.missingBackslash();\n      default:\n        this.unexpected();\n    }\n  }\n\n  /**\n   * Helpers\n   */;\n  _proto.expected = function expected(description, index, found) {\n    if (Array.isArray(description)) {\n      var last = description.pop();\n      description = description.join(', ') + \" or \" + last;\n    }\n    var an = /^[aeiou]/.test(description[0]) ? 'an' : 'a';\n    if (!found) {\n      return this.error(\"Expected \" + an + \" \" + description + \".\", {\n        index: index\n      });\n    }\n    return this.error(\"Expected \" + an + \" \" + description + \", found \\\"\" + found + \"\\\" instead.\", {\n      index: index\n    });\n  };\n  _proto.requiredSpace = function requiredSpace(space) {\n    return this.options.lossy ? ' ' : space;\n  };\n  _proto.optionalSpace = function optionalSpace(space) {\n    return this.options.lossy ? '' : space;\n  };\n  _proto.lossySpace = function lossySpace(space, required) {\n    if (this.options.lossy) {\n      return required ? ' ' : '';\n    } else {\n      return space;\n    }\n  };\n  _proto.parseParenthesisToken = function parseParenthesisToken(token) {\n    var content = this.content(token);\n    if (token[_tokenize.FIELDS.TYPE] === tokens.space) {\n      return this.requiredSpace(content);\n    } else {\n      return content;\n    }\n  };\n  _proto.newNode = function newNode(node, namespace) {\n    if (namespace) {\n      if (/^ +$/.test(namespace)) {\n        if (!this.options.lossy) {\n          this.spaces = (this.spaces || '') + namespace;\n        }\n        namespace = true;\n      }\n      node.namespace = namespace;\n      unescapeProp(node, \"namespace\");\n    }\n    if (this.spaces) {\n      node.spaces.before = this.spaces;\n      this.spaces = '';\n    }\n    return this.current.append(node);\n  };\n  _proto.content = function content(token) {\n    if (token === void 0) {\n      token = this.currToken;\n    }\n    return this.css.slice(token[_tokenize.FIELDS.START_POS], token[_tokenize.FIELDS.END_POS]);\n  };\n  /**\n   * returns the index of the next non-whitespace, non-comment token.\n   * returns -1 if no meaningful token is found.\n   */\n  _proto.locateNextMeaningfulToken = function locateNextMeaningfulToken(startPosition) {\n    if (startPosition === void 0) {\n      startPosition = this.position + 1;\n    }\n    var searchPosition = startPosition;\n    while (searchPosition < this.tokens.length) {\n      if (WHITESPACE_EQUIV_TOKENS[this.tokens[searchPosition][_tokenize.FIELDS.TYPE]]) {\n        searchPosition++;\n        continue;\n      } else {\n        return searchPosition;\n      }\n    }\n    return -1;\n  };\n  _createClass(Parser, [{\n    key: \"currToken\",\n    get: function get() {\n      return this.tokens[this.position];\n    }\n  }, {\n    key: \"nextToken\",\n    get: function get() {\n      return this.tokens[this.position + 1];\n    }\n  }, {\n    key: \"prevToken\",\n    get: function get() {\n      return this.tokens[this.position - 1];\n    }\n  }]);\n  return Parser;\n}();\nexports[\"default\"] = Parser;\nmodule.exports = exports.default;"]}}