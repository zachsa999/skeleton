{"code":"(()=>{\n\"use strict\";var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});let Declaration=require(\"./declaration\");let PreviousMap=require(\"./previous-map\");let Comment=require(\"./comment\");let AtRule=require(\"./at-rule\");let Input=require(\"./input\");let Root=require(\"./root\");let Rule=require(\"./rule\");function fromJSON(json,inputs){if(Array.isArray(json))return json.map(n=>fromJSON(n));let{inputs:ownInputs,...defaults}=json;if(ownInputs){inputs=[];for(let input of ownInputs){let inputHydrated={...input,__proto__:Input.prototype};if(inputHydrated.map){inputHydrated.map={...inputHydrated.map,__proto__:PreviousMap.prototype}}inputs.push(inputHydrated)}}if(defaults.nodes){defaults.nodes=json.nodes.map(n=>fromJSON(n,inputs))}if(defaults.source){let{inputId,...source}=defaults.source;defaults.source=source;if(inputId!=null){defaults.source.input=inputs[inputId]}}if(defaults.type===\"root\"){return new Root(defaults)}else if(defaults.type===\"decl\"){return new Declaration(defaults)}else if(defaults.type===\"rule\"){return new Rule(defaults)}else if(defaults.type===\"comment\"){return new Comment(defaults)}else if(defaults.type===\"atrule\"){return new AtRule(defaults)}else{throw new Error(\"Unknown node type: \"+json.type)}}__name(fromJSON,\"fromJSON\");module.exports=fromJSON;fromJSON.default=fromJSON;\n})()\n","warnings":[],"map":{"version":3,"mappings":";+HAEA,IAAI,YAAc,QAAQ,eAAe,EACzC,IAAI,YAAc,QAAQ,gBAAgB,EAC1C,IAAI,QAAU,QAAQ,WAAW,EACjC,IAAI,OAAS,QAAQ,WAAW,EAChC,IAAI,MAAQ,QAAQ,SAAS,EAC7B,IAAI,KAAO,QAAQ,QAAQ,EAC3B,IAAI,KAAO,QAAQ,QAAQ,EAE3B,SAAS,SAAS,KAAM,OAAQ,CAC9B,GAAI,MAAM,QAAQ,IAAI,EAAG,OAAO,KAAK,IAAI,GAAK,SAAS,CAAC,CAAC,EAEzD,GAAI,CAAE,OAAQ,UAAW,GAAG,QAAS,EAAI,KACzC,GAAI,UAAW,CACb,OAAS,CAAC,EACV,QAAS,SAAS,UAAW,CAC3B,IAAI,cAAgB,CAAE,GAAG,MAAO,UAAW,MAAM,SAAU,EAC3D,GAAI,cAAc,IAAK,CACrB,cAAc,IAAM,CAClB,GAAG,cAAc,IACjB,UAAW,YAAY,SACzB,CACF,CACA,OAAO,KAAK,aAAa,CAC3B,CACF,CACA,GAAI,SAAS,MAAO,CAClB,SAAS,MAAQ,KAAK,MAAM,IAAI,GAAK,SAAS,EAAG,MAAM,CAAC,CAC1D,CACA,GAAI,SAAS,OAAQ,CACnB,GAAI,CAAE,QAAS,GAAG,MAAO,EAAI,SAAS,OACtC,SAAS,OAAS,OAClB,GAAI,SAAW,KAAM,CACnB,SAAS,OAAO,MAAQ,OAAO,OAAO,CACxC,CACF,CACA,GAAI,SAAS,OAAS,OAAQ,CAC5B,OAAO,IAAI,KAAK,QAAQ,CAC1B,SAAW,SAAS,OAAS,OAAQ,CACnC,OAAO,IAAI,YAAY,QAAQ,CACjC,SAAW,SAAS,OAAS,OAAQ,CACnC,OAAO,IAAI,KAAK,QAAQ,CAC1B,SAAW,SAAS,OAAS,UAAW,CACtC,OAAO,IAAI,QAAQ,QAAQ,CAC7B,SAAW,SAAS,OAAS,SAAU,CACrC,OAAO,IAAI,OAAO,QAAQ,CAC5B,KAAO,CACL,MAAM,IAAI,MAAM,sBAAwB,KAAK,IAAI,CACnD,CACF,CAxCS,4BA0CT,OAAO,QAAU,SACjB,SAAS,QAAU","names":[],"sources":["/root/projects/zachw-i/packages/plugin/node_modules/.pnpm/postcss@8.4.24/node_modules/postcss/lib/fromJSON.js"],"sourcesContent":["'use strict'\n\nlet Declaration = require('./declaration')\nlet PreviousMap = require('./previous-map')\nlet Comment = require('./comment')\nlet AtRule = require('./at-rule')\nlet Input = require('./input')\nlet Root = require('./root')\nlet Rule = require('./rule')\n\nfunction fromJSON(json, inputs) {\n  if (Array.isArray(json)) return json.map(n => fromJSON(n))\n\n  let { inputs: ownInputs, ...defaults } = json\n  if (ownInputs) {\n    inputs = []\n    for (let input of ownInputs) {\n      let inputHydrated = { ...input, __proto__: Input.prototype }\n      if (inputHydrated.map) {\n        inputHydrated.map = {\n          ...inputHydrated.map,\n          __proto__: PreviousMap.prototype\n        }\n      }\n      inputs.push(inputHydrated)\n    }\n  }\n  if (defaults.nodes) {\n    defaults.nodes = json.nodes.map(n => fromJSON(n, inputs))\n  }\n  if (defaults.source) {\n    let { inputId, ...source } = defaults.source\n    defaults.source = source\n    if (inputId != null) {\n      defaults.source.input = inputs[inputId]\n    }\n  }\n  if (defaults.type === 'root') {\n    return new Root(defaults)\n  } else if (defaults.type === 'decl') {\n    return new Declaration(defaults)\n  } else if (defaults.type === 'rule') {\n    return new Rule(defaults)\n  } else if (defaults.type === 'comment') {\n    return new Comment(defaults)\n  } else if (defaults.type === 'atrule') {\n    return new AtRule(defaults)\n  } else {\n    throw new Error('Unknown node type: ' + json.type)\n  }\n}\n\nmodule.exports = fromJSON\nfromJSON.default = fromJSON\n"]}}