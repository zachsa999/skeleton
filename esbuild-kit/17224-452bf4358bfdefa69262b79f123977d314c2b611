{"code":"(()=>{\n\"use strict\";var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});exports.__esModule=true;exports[\"default\"]=unesc;function gobbleHex(str){var lower=str.toLowerCase();var hex=\"\";var spaceTerminated=false;for(var i=0;i<6&&lower[i]!==void 0;i++){var code=lower.charCodeAt(i);var valid=code>=97&&code<=102||code>=48&&code<=57;spaceTerminated=code===32;if(!valid){break}hex+=lower[i]}if(hex.length===0){return void 0}var codePoint=parseInt(hex,16);var isSurrogate=codePoint>=55296&&codePoint<=57343;if(isSurrogate||codePoint===0||codePoint>1114111){return[\"\\uFFFD\",hex.length+(spaceTerminated?1:0)]}return[String.fromCodePoint(codePoint),hex.length+(spaceTerminated?1:0)]}__name(gobbleHex,\"gobbleHex\");var CONTAINS_ESCAPE=/\\\\/;function unesc(str){var needToProcess=CONTAINS_ESCAPE.test(str);if(!needToProcess){return str}var ret=\"\";for(var i=0;i<str.length;i++){if(str[i]===\"\\\\\"){var gobbled=gobbleHex(str.slice(i+1,i+7));if(gobbled!==void 0){ret+=gobbled[0];i+=gobbled[1];continue}if(str[i+1]===\"\\\\\"){ret+=\"\\\\\";i++;continue}if(str.length===i+1){ret+=str[i]}continue}ret+=str[i]}return ret}__name(unesc,\"unesc\");module.exports=exports.default;\n})()\n","warnings":[],"map":{"version":3,"mappings":";+HAEA,QAAQ,WAAa,KACrB,QAAQ,SAAS,EAAI,MASrB,SAAS,UAAU,IAAK,CACtB,IAAI,MAAQ,IAAI,YAAY,EAC5B,IAAI,IAAM,GACV,IAAI,gBAAkB,MACtB,QAAS,EAAI,EAAG,EAAI,GAAK,MAAM,CAAC,IAAM,OAAW,IAAK,CACpD,IAAI,KAAO,MAAM,WAAW,CAAC,EAE7B,IAAI,MAAQ,MAAQ,IAAM,MAAQ,KAAO,MAAQ,IAAM,MAAQ,GAE/D,gBAAkB,OAAS,GAC3B,GAAI,CAAC,MAAO,CACV,KACF,CACA,KAAO,MAAM,CAAC,CAChB,CACA,GAAI,IAAI,SAAW,EAAG,CACpB,OAAO,MACT,CACA,IAAI,UAAY,SAAS,IAAK,EAAE,EAChC,IAAI,YAAc,WAAa,OAAU,WAAa,MAItD,GAAI,aAAe,YAAc,GAAU,UAAY,QAAU,CAC/D,MAAO,CAAC,SAAU,IAAI,QAAU,gBAAkB,EAAI,EAAE,CAC1D,CACA,MAAO,CAAC,OAAO,cAAc,SAAS,EAAG,IAAI,QAAU,gBAAkB,EAAI,EAAE,CACjF,CA3BS,8BA4BT,IAAI,gBAAkB,KACtB,SAAS,MAAM,IAAK,CAClB,IAAI,cAAgB,gBAAgB,KAAK,GAAG,EAC5C,GAAI,CAAC,cAAe,CAClB,OAAO,GACT,CACA,IAAI,IAAM,GACV,QAAS,EAAI,EAAG,EAAI,IAAI,OAAQ,IAAK,CACnC,GAAI,IAAI,CAAC,IAAM,KAAM,CACnB,IAAI,QAAU,UAAU,IAAI,MAAM,EAAI,EAAG,EAAI,CAAC,CAAC,EAC/C,GAAI,UAAY,OAAW,CACzB,KAAO,QAAQ,CAAC,EAChB,GAAK,QAAQ,CAAC,EACd,QACF,CAIA,GAAI,IAAI,EAAI,CAAC,IAAM,KAAM,CACvB,KAAO,KACP,IACA,QACF,CAIA,GAAI,IAAI,SAAW,EAAI,EAAG,CACxB,KAAO,IAAI,CAAC,CACd,CACA,QACF,CACA,KAAO,IAAI,CAAC,CACd,CACA,OAAO,GACT,CAjCS,sBAkCT,OAAO,QAAU,QAAQ","names":[],"sources":["/root/projects/zachw-i/packages/plugin/node_modules/.pnpm/postcss-selector-parser@6.0.13/node_modules/postcss-selector-parser/dist/util/unesc.js"],"sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = unesc;\n// Many thanks for this post which made this migration much easier.\n// https://mathiasbynens.be/notes/css-escapes\n\n/**\n * \n * @param {string} str \n * @returns {[string, number]|undefined}\n */\nfunction gobbleHex(str) {\n  var lower = str.toLowerCase();\n  var hex = '';\n  var spaceTerminated = false;\n  for (var i = 0; i < 6 && lower[i] !== undefined; i++) {\n    var code = lower.charCodeAt(i);\n    // check to see if we are dealing with a valid hex char [a-f|0-9]\n    var valid = code >= 97 && code <= 102 || code >= 48 && code <= 57;\n    // https://drafts.csswg.org/css-syntax/#consume-escaped-code-point\n    spaceTerminated = code === 32;\n    if (!valid) {\n      break;\n    }\n    hex += lower[i];\n  }\n  if (hex.length === 0) {\n    return undefined;\n  }\n  var codePoint = parseInt(hex, 16);\n  var isSurrogate = codePoint >= 0xD800 && codePoint <= 0xDFFF;\n  // Add special case for\n  // \"If this number is zero, or is for a surrogate, or is greater than the maximum allowed code point\"\n  // https://drafts.csswg.org/css-syntax/#maximum-allowed-code-point\n  if (isSurrogate || codePoint === 0x0000 || codePoint > 0x10FFFF) {\n    return [\"\\uFFFD\", hex.length + (spaceTerminated ? 1 : 0)];\n  }\n  return [String.fromCodePoint(codePoint), hex.length + (spaceTerminated ? 1 : 0)];\n}\nvar CONTAINS_ESCAPE = /\\\\/;\nfunction unesc(str) {\n  var needToProcess = CONTAINS_ESCAPE.test(str);\n  if (!needToProcess) {\n    return str;\n  }\n  var ret = \"\";\n  for (var i = 0; i < str.length; i++) {\n    if (str[i] === \"\\\\\") {\n      var gobbled = gobbleHex(str.slice(i + 1, i + 7));\n      if (gobbled !== undefined) {\n        ret += gobbled[0];\n        i += gobbled[1];\n        continue;\n      }\n\n      // Retain a pair of \\\\ if double escaped `\\\\\\\\`\n      // https://github.com/postcss/postcss-selector-parser/commit/268c9a7656fb53f543dc620aa5b73a30ec3ff20e\n      if (str[i + 1] === \"\\\\\") {\n        ret += \"\\\\\";\n        i++;\n        continue;\n      }\n\n      // if \\\\ is at the end of the string retain it\n      // https://github.com/postcss/postcss-selector-parser/commit/01a6b346e3612ce1ab20219acc26abdc259ccefb\n      if (str.length === i + 1) {\n        ret += str[i];\n      }\n      continue;\n    }\n    ret += str[i];\n  }\n  return ret;\n}\nmodule.exports = exports.default;"]}}