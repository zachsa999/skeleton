{"code":"(()=>{\n\"use strict\";var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});Object.defineProperty(exports,\"__esModule\",{value:true});Object.defineProperty(exports,\"default\",{enumerable:true,get:function(){return buildMediaQuery}});function buildMediaQuery(screens){screens=Array.isArray(screens)?screens:[screens];return screens.map(screen=>{let values=screen.values.map(screen2=>{if(screen2.raw!==void 0){return screen2.raw}return[screen2.min&&`(min-width: ${screen2.min})`,screen2.max&&`(max-width: ${screen2.max})`].filter(Boolean).join(\" and \")});return screen.not?`not all and ${values}`:values}).join(\", \")}__name(buildMediaQuery,\"buildMediaQuery\");\n})()\n","warnings":[],"map":{"version":3,"mappings":";+HACA,OAAO,eAAe,QAAS,aAAc,CACzC,MAAO,IACX,CAAC,EACD,OAAO,eAAe,QAAS,UAAW,CACtC,WAAY,KACZ,IAAK,UAAW,CACZ,OAAO,eACX,CACJ,CAAC,EACD,SAAS,gBAAgB,QAAS,CAC9B,QAAU,MAAM,QAAQ,OAAO,EAAI,QAAU,CACzC,OACJ,EACA,OAAO,QAAQ,IAAK,QAAS,CACzB,IAAI,OAAS,OAAO,OAAO,IAAKA,SAAS,CACrC,GAAIA,QAAO,MAAQ,OAAW,CAC1B,OAAOA,QAAO,GAClB,CACA,MAAO,CACHA,QAAO,KAAO,eAAeA,QAAO,OACpCA,QAAO,KAAO,eAAeA,QAAO,MACxC,EAAE,OAAO,OAAO,EAAE,KAAK,OAAO,CAClC,CAAC,EACD,OAAO,OAAO,IAAM,eAAe,SAAW,MAClD,CAAC,EAAE,KAAK,IAAI,CAChB,CAhBS","names":["screen"],"sources":["/root/projects/zachw-i/packages/plugin/node_modules/.pnpm/tailwindcss@3.3.2/node_modules/tailwindcss/lib/util/buildMediaQuery.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function() {\n        return buildMediaQuery;\n    }\n});\nfunction buildMediaQuery(screens) {\n    screens = Array.isArray(screens) ? screens : [\n        screens\n    ];\n    return screens.map((screen)=>{\n        let values = screen.values.map((screen)=>{\n            if (screen.raw !== undefined) {\n                return screen.raw;\n            }\n            return [\n                screen.min && `(min-width: ${screen.min})`,\n                screen.max && `(max-width: ${screen.max})`\n            ].filter(Boolean).join(\" and \");\n        });\n        return screen.not ? `not all and ${values}` : values;\n    }).join(\", \");\n}\n"]}}