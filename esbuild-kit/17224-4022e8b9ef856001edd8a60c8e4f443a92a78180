{"code":"(()=>{\nvar __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});var util=require(\"./util\");var has=Object.prototype.hasOwnProperty;var hasNativeMap=typeof Map!==\"undefined\";function ArraySet(){this._array=[];this._set=hasNativeMap?new Map:Object.create(null)}__name(ArraySet,\"ArraySet\");ArraySet.fromArray=__name(function ArraySet_fromArray(aArray,aAllowDuplicates){var set=new ArraySet;for(var i=0,len=aArray.length;i<len;i++){set.add(aArray[i],aAllowDuplicates)}return set},\"ArraySet_fromArray\");ArraySet.prototype.size=__name(function ArraySet_size(){return hasNativeMap?this._set.size:Object.getOwnPropertyNames(this._set).length},\"ArraySet_size\");ArraySet.prototype.add=__name(function ArraySet_add(aStr,aAllowDuplicates){var sStr=hasNativeMap?aStr:util.toSetString(aStr);var isDuplicate=hasNativeMap?this.has(aStr):has.call(this._set,sStr);var idx=this._array.length;if(!isDuplicate||aAllowDuplicates){this._array.push(aStr)}if(!isDuplicate){if(hasNativeMap){this._set.set(aStr,idx)}else{this._set[sStr]=idx}}},\"ArraySet_add\");ArraySet.prototype.has=__name(function ArraySet_has(aStr){if(hasNativeMap){return this._set.has(aStr)}else{var sStr=util.toSetString(aStr);return has.call(this._set,sStr)}},\"ArraySet_has\");ArraySet.prototype.indexOf=__name(function ArraySet_indexOf(aStr){if(hasNativeMap){var idx=this._set.get(aStr);if(idx>=0){return idx}}else{var sStr=util.toSetString(aStr);if(has.call(this._set,sStr)){return this._set[sStr]}}throw new Error('\"'+aStr+'\" is not in the set.')},\"ArraySet_indexOf\");ArraySet.prototype.at=__name(function ArraySet_at(aIdx){if(aIdx>=0&&aIdx<this._array.length){return this._array[aIdx]}throw new Error(\"No element indexed by \"+aIdx)},\"ArraySet_at\");ArraySet.prototype.toArray=__name(function ArraySet_toArray(){return this._array.slice()},\"ArraySet_toArray\");exports.ArraySet=ArraySet;\n})()\n","warnings":[],"map":{"version":3,"mappings":";kHAOA,IAAI,KAAO,QAAQ,QAAQ,EAC3B,IAAI,IAAM,OAAO,UAAU,eAC3B,IAAI,aAAe,OAAO,MAAQ,YAQlC,SAAS,UAAW,CAClB,KAAK,OAAS,CAAC,EACf,KAAK,KAAO,aAAe,IAAI,IAAQ,OAAO,OAAO,IAAI,CAC3D,CAHS,4BAQT,SAAS,UAAY,gBAAS,mBAAmB,OAAQ,iBAAkB,CACzE,IAAI,IAAM,IAAI,SACd,QAAS,EAAI,EAAG,IAAM,OAAO,OAAQ,EAAI,IAAK,IAAK,CACjD,IAAI,IAAI,OAAO,CAAC,EAAG,gBAAgB,CACrC,CACA,OAAO,GACT,EANqB,sBAcrB,SAAS,UAAU,KAAO,gBAAS,eAAgB,CACjD,OAAO,aAAe,KAAK,KAAK,KAAO,OAAO,oBAAoB,KAAK,IAAI,EAAE,MAC/E,EAF0B,iBAS1B,SAAS,UAAU,IAAM,gBAAS,aAAa,KAAM,iBAAkB,CACrE,IAAI,KAAO,aAAe,KAAO,KAAK,YAAY,IAAI,EACtD,IAAI,YAAc,aAAe,KAAK,IAAI,IAAI,EAAI,IAAI,KAAK,KAAK,KAAM,IAAI,EAC1E,IAAI,IAAM,KAAK,OAAO,OACtB,GAAI,CAAC,aAAe,iBAAkB,CACpC,KAAK,OAAO,KAAK,IAAI,CACvB,CACA,GAAI,CAAC,YAAa,CAChB,GAAI,aAAc,CAChB,KAAK,KAAK,IAAI,KAAM,GAAG,CACzB,KAAO,CACL,KAAK,KAAK,IAAI,EAAI,GACpB,CACF,CACF,EAdyB,gBAqBzB,SAAS,UAAU,IAAM,gBAAS,aAAa,KAAM,CACnD,GAAI,aAAc,CAChB,OAAO,KAAK,KAAK,IAAI,IAAI,CAC3B,KAAO,CACL,IAAI,KAAO,KAAK,YAAY,IAAI,EAChC,OAAO,IAAI,KAAK,KAAK,KAAM,IAAI,CACjC,CACF,EAPyB,gBAczB,SAAS,UAAU,QAAU,gBAAS,iBAAiB,KAAM,CAC3D,GAAI,aAAc,CAChB,IAAI,IAAM,KAAK,KAAK,IAAI,IAAI,EAC5B,GAAI,KAAO,EAAG,CACV,OAAO,GACX,CACF,KAAO,CACL,IAAI,KAAO,KAAK,YAAY,IAAI,EAChC,GAAI,IAAI,KAAK,KAAK,KAAM,IAAI,EAAG,CAC7B,OAAO,KAAK,KAAK,IAAI,CACvB,CACF,CAEA,MAAM,IAAI,MAAM,IAAM,KAAO,sBAAsB,CACrD,EAd6B,oBAqB7B,SAAS,UAAU,GAAK,gBAAS,YAAY,KAAM,CACjD,GAAI,MAAQ,GAAK,KAAO,KAAK,OAAO,OAAQ,CAC1C,OAAO,KAAK,OAAO,IAAI,CACzB,CACA,MAAM,IAAI,MAAM,yBAA2B,IAAI,CACjD,EALwB,eAYxB,SAAS,UAAU,QAAU,gBAAS,kBAAmB,CACvD,OAAO,KAAK,OAAO,MAAM,CAC3B,EAF6B,oBAI7B,QAAQ,SAAW","names":[],"sources":["/root/projects/zachw-i/packages/plugin/node_modules/.pnpm/source-map-js@1.0.2/node_modules/source-map-js/lib/array-set.js"],"sourcesContent":["/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar has = Object.prototype.hasOwnProperty;\nvar hasNativeMap = typeof Map !== \"undefined\";\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = hasNativeMap ? new Map() : Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);\n  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    if (hasNativeMap) {\n      this._set.set(aStr, idx);\n    } else {\n      this._set[sStr] = idx;\n    }\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  if (hasNativeMap) {\n    return this._set.has(aStr);\n  } else {\n    var sStr = util.toSetString(aStr);\n    return has.call(this._set, sStr);\n  }\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  if (hasNativeMap) {\n    var idx = this._set.get(aStr);\n    if (idx >= 0) {\n        return idx;\n    }\n  } else {\n    var sStr = util.toSetString(aStr);\n    if (has.call(this._set, sStr)) {\n      return this._set[sStr];\n    }\n  }\n\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nexports.ArraySet = ArraySet;\n"]}}