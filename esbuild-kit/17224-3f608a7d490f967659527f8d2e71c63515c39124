{"code":"(()=>{\n\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.IS_SUPPORT_READDIR_WITH_FILE_TYPES=void 0;const NODE_PROCESS_VERSION_PARTS=process.versions.node.split(\".\");if(NODE_PROCESS_VERSION_PARTS[0]===void 0||NODE_PROCESS_VERSION_PARTS[1]===void 0){throw new Error(`Unexpected behavior. The 'process.versions.node' variable has invalid value: ${process.versions.node}`)}const MAJOR_VERSION=Number.parseInt(NODE_PROCESS_VERSION_PARTS[0],10);const MINOR_VERSION=Number.parseInt(NODE_PROCESS_VERSION_PARTS[1],10);const SUPPORTED_MAJOR_VERSION=10;const SUPPORTED_MINOR_VERSION=10;const IS_MATCHED_BY_MAJOR=MAJOR_VERSION>SUPPORTED_MAJOR_VERSION;const IS_MATCHED_BY_MAJOR_AND_MINOR=MAJOR_VERSION===SUPPORTED_MAJOR_VERSION&&MINOR_VERSION>=SUPPORTED_MINOR_VERSION;exports.IS_SUPPORT_READDIR_WITH_FILE_TYPES=IS_MATCHED_BY_MAJOR||IS_MATCHED_BY_MAJOR_AND_MINOR;\n})()\n","warnings":[],"map":{"version":3,"mappings":";aACA,OAAO,eAAe,QAAS,aAAc,CAAE,MAAO,IAAK,CAAC,EAC5D,QAAQ,mCAAqC,OAC7C,MAAM,2BAA6B,QAAQ,SAAS,KAAK,MAAM,GAAG,EAClE,GAAI,2BAA2B,CAAC,IAAM,QAAa,2BAA2B,CAAC,IAAM,OAAW,CAC5F,MAAM,IAAI,MAAM,gFAAgF,QAAQ,SAAS,MAAM,CAC3H,CACA,MAAM,cAAgB,OAAO,SAAS,2BAA2B,CAAC,EAAG,EAAE,EACvE,MAAM,cAAgB,OAAO,SAAS,2BAA2B,CAAC,EAAG,EAAE,EACvE,MAAM,wBAA0B,GAChC,MAAM,wBAA0B,GAChC,MAAM,oBAAsB,cAAgB,wBAC5C,MAAM,8BAAgC,gBAAkB,yBAA2B,eAAiB,wBAIpG,QAAQ,mCAAqC,qBAAuB","names":[],"sources":["/root/projects/zachw-i/packages/plugin/node_modules/.pnpm/@nodelib+fs.scandir@2.1.5/node_modules/@nodelib/fs.scandir/out/constants.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IS_SUPPORT_READDIR_WITH_FILE_TYPES = void 0;\nconst NODE_PROCESS_VERSION_PARTS = process.versions.node.split('.');\nif (NODE_PROCESS_VERSION_PARTS[0] === undefined || NODE_PROCESS_VERSION_PARTS[1] === undefined) {\n    throw new Error(`Unexpected behavior. The 'process.versions.node' variable has invalid value: ${process.versions.node}`);\n}\nconst MAJOR_VERSION = Number.parseInt(NODE_PROCESS_VERSION_PARTS[0], 10);\nconst MINOR_VERSION = Number.parseInt(NODE_PROCESS_VERSION_PARTS[1], 10);\nconst SUPPORTED_MAJOR_VERSION = 10;\nconst SUPPORTED_MINOR_VERSION = 10;\nconst IS_MATCHED_BY_MAJOR = MAJOR_VERSION > SUPPORTED_MAJOR_VERSION;\nconst IS_MATCHED_BY_MAJOR_AND_MINOR = MAJOR_VERSION === SUPPORTED_MAJOR_VERSION && MINOR_VERSION >= SUPPORTED_MINOR_VERSION;\n/**\n * IS `true` for Node.js 10.10 and greater.\n */\nexports.IS_SUPPORT_READDIR_WITH_FILE_TYPES = IS_MATCHED_BY_MAJOR || IS_MATCHED_BY_MAJOR_AND_MINOR;\n"]}}