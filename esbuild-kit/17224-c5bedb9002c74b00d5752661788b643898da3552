{"code":"(()=>{\n\"use strict\";var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});let{SourceMapConsumer,SourceMapGenerator}=require(\"source-map-js\");let{dirname,resolve,relative,sep}=require(\"path\");let{pathToFileURL}=require(\"url\");let Input=require(\"./input\");let sourceMapAvailable=Boolean(SourceMapConsumer&&SourceMapGenerator);let pathAvailable=Boolean(dirname&&resolve&&relative&&sep);class MapGenerator{constructor(stringify,root,opts,cssString){this.stringify=stringify;this.mapOpts=opts.map||{};this.root=root;this.opts=opts;this.css=cssString;this.usesFileUrls=!this.mapOpts.from&&this.mapOpts.absolute}isMap(){if(typeof this.opts.map!==\"undefined\"){return!!this.opts.map}return this.previous().length>0}previous(){if(!this.previousMaps){this.previousMaps=[];if(this.root){this.root.walk(node=>{if(node.source&&node.source.input.map){let map=node.source.input.map;if(!this.previousMaps.includes(map)){this.previousMaps.push(map)}}})}else{let input=new Input(this.css,this.opts);if(input.map)this.previousMaps.push(input.map)}}return this.previousMaps}isInline(){if(typeof this.mapOpts.inline!==\"undefined\"){return this.mapOpts.inline}let annotation=this.mapOpts.annotation;if(typeof annotation!==\"undefined\"&&annotation!==true){return false}if(this.previous().length){return this.previous().some(i=>i.inline)}return true}isSourcesContent(){if(typeof this.mapOpts.sourcesContent!==\"undefined\"){return this.mapOpts.sourcesContent}if(this.previous().length){return this.previous().some(i=>i.withContent())}return true}clearAnnotation(){if(this.mapOpts.annotation===false)return;if(this.root){let node;for(let i=this.root.nodes.length-1;i>=0;i--){node=this.root.nodes[i];if(node.type!==\"comment\")continue;if(node.text.indexOf(\"# sourceMappingURL=\")===0){this.root.removeChild(i)}}}else if(this.css){this.css=this.css.replace(/(\\n)?\\/\\*#[\\S\\s]*?\\*\\/$/gm,\"\")}}setSourcesContent(){let already={};if(this.root){this.root.walk(node=>{if(node.source){let from=node.source.input.from;if(from&&!already[from]){already[from]=true;let fromUrl=this.usesFileUrls?this.toFileUrl(from):this.toUrl(this.path(from));this.map.setSourceContent(fromUrl,node.source.input.css)}}})}else if(this.css){let from=this.opts.from?this.toUrl(this.path(this.opts.from)):\"<no source>\";this.map.setSourceContent(from,this.css)}}applyPrevMaps(){for(let prev of this.previous()){let from=this.toUrl(this.path(prev.file));let root=prev.root||dirname(prev.file);let map;if(this.mapOpts.sourcesContent===false){map=new SourceMapConsumer(prev.text);if(map.sourcesContent){map.sourcesContent=map.sourcesContent.map(()=>null)}}else{map=prev.consumer()}this.map.applySourceMap(map,from,this.toUrl(this.path(root)))}}isAnnotation(){if(this.isInline()){return true}if(typeof this.mapOpts.annotation!==\"undefined\"){return this.mapOpts.annotation}if(this.previous().length){return this.previous().some(i=>i.annotation)}return true}toBase64(str){if(Buffer){return Buffer.from(str).toString(\"base64\")}else{return window.btoa(unescape(encodeURIComponent(str)))}}addAnnotation(){let content;if(this.isInline()){content=\"data:application/json;base64,\"+this.toBase64(this.map.toString())}else if(typeof this.mapOpts.annotation===\"string\"){content=this.mapOpts.annotation}else if(typeof this.mapOpts.annotation===\"function\"){content=this.mapOpts.annotation(this.opts.to,this.root)}else{content=this.outputFile()+\".map\"}let eol=\"\\n\";if(this.css.includes(\"\\r\\n\"))eol=\"\\r\\n\";this.css+=eol+\"/*# sourceMappingURL=\"+content+\" */\"}outputFile(){if(this.opts.to){return this.path(this.opts.to)}else if(this.opts.from){return this.path(this.opts.from)}else{return\"to.css\"}}generateMap(){if(this.root){this.generateString()}else if(this.previous().length===1){let prev=this.previous()[0].consumer();prev.file=this.outputFile();this.map=SourceMapGenerator.fromSourceMap(prev)}else{this.map=new SourceMapGenerator({file:this.outputFile()});this.map.addMapping({source:this.opts.from?this.toUrl(this.path(this.opts.from)):\"<no source>\",generated:{line:1,column:0},original:{line:1,column:0}})}if(this.isSourcesContent())this.setSourcesContent();if(this.root&&this.previous().length>0)this.applyPrevMaps();if(this.isAnnotation())this.addAnnotation();if(this.isInline()){return[this.css]}else{return[this.css,this.map]}}path(file){if(file.indexOf(\"<\")===0)return file;if(/^\\w+:\\/\\//.test(file))return file;if(this.mapOpts.absolute)return file;let from=this.opts.to?dirname(this.opts.to):\".\";if(typeof this.mapOpts.annotation===\"string\"){from=dirname(resolve(from,this.mapOpts.annotation))}file=relative(from,file);return file}toUrl(path){if(sep===\"\\\\\"){path=path.replace(/\\\\/g,\"/\")}return encodeURI(path).replace(/[#?]/g,encodeURIComponent)}toFileUrl(path){if(pathToFileURL){return pathToFileURL(path).toString()}else{throw new Error(\"`map.absolute` option is not available in this PostCSS build\")}}sourcePath(node){if(this.mapOpts.from){return this.toUrl(this.mapOpts.from)}else if(this.usesFileUrls){return this.toFileUrl(node.source.input.from)}else{return this.toUrl(this.path(node.source.input.from))}}generateString(){this.css=\"\";this.map=new SourceMapGenerator({file:this.outputFile()});let line=1;let column=1;let noSource=\"<no source>\";let mapping={source:\"\",generated:{line:0,column:0},original:{line:0,column:0}};let lines,last;this.stringify(this.root,(str,node,type)=>{this.css+=str;if(node&&type!==\"end\"){mapping.generated.line=line;mapping.generated.column=column-1;if(node.source&&node.source.start){mapping.source=this.sourcePath(node);mapping.original.line=node.source.start.line;mapping.original.column=node.source.start.column-1;this.map.addMapping(mapping)}else{mapping.source=noSource;mapping.original.line=1;mapping.original.column=0;this.map.addMapping(mapping)}}lines=str.match(/\\n/g);if(lines){line+=lines.length;last=str.lastIndexOf(\"\\n\");column=str.length-last}else{column+=str.length}if(node&&type!==\"start\"){let p=node.parent||{raws:{}};let childless=node.type===\"decl\"||node.type===\"atrule\"&&!node.nodes;if(!childless||node!==p.last||p.raws.semicolon){if(node.source&&node.source.end){mapping.source=this.sourcePath(node);mapping.original.line=node.source.end.line;mapping.original.column=node.source.end.column-1;mapping.generated.line=line;mapping.generated.column=column-2;this.map.addMapping(mapping)}else{mapping.source=noSource;mapping.original.line=1;mapping.original.column=0;mapping.generated.line=line;mapping.generated.column=column-1;this.map.addMapping(mapping)}}}})}generate(){this.clearAnnotation();if(pathAvailable&&sourceMapAvailable&&this.isMap()){return this.generateMap()}else{let result=\"\";this.stringify(this.root,i=>{result+=i});return[result]}}}__name(MapGenerator,\"MapGenerator\");module.exports=MapGenerator;\n})()\n","warnings":[],"map":{"version":3,"mappings":"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","names":[],"sources":["/root/projects/zachw-i/packages/plugin/node_modules/.pnpm/postcss@8.4.24/node_modules/postcss/lib/map-generator.js"],"sourcesContent":["'use strict'\n\nlet { SourceMapConsumer, SourceMapGenerator } = require('source-map-js')\nlet { dirname, resolve, relative, sep } = require('path')\nlet { pathToFileURL } = require('url')\n\nlet Input = require('./input')\n\nlet sourceMapAvailable = Boolean(SourceMapConsumer && SourceMapGenerator)\nlet pathAvailable = Boolean(dirname && resolve && relative && sep)\n\nclass MapGenerator {\n  constructor(stringify, root, opts, cssString) {\n    this.stringify = stringify\n    this.mapOpts = opts.map || {}\n    this.root = root\n    this.opts = opts\n    this.css = cssString\n    this.usesFileUrls = !this.mapOpts.from && this.mapOpts.absolute\n  }\n\n  isMap() {\n    if (typeof this.opts.map !== 'undefined') {\n      return !!this.opts.map\n    }\n    return this.previous().length > 0\n  }\n\n  previous() {\n    if (!this.previousMaps) {\n      this.previousMaps = []\n      if (this.root) {\n        this.root.walk(node => {\n          if (node.source && node.source.input.map) {\n            let map = node.source.input.map\n            if (!this.previousMaps.includes(map)) {\n              this.previousMaps.push(map)\n            }\n          }\n        })\n      } else {\n        let input = new Input(this.css, this.opts)\n        if (input.map) this.previousMaps.push(input.map)\n      }\n    }\n\n    return this.previousMaps\n  }\n\n  isInline() {\n    if (typeof this.mapOpts.inline !== 'undefined') {\n      return this.mapOpts.inline\n    }\n\n    let annotation = this.mapOpts.annotation\n    if (typeof annotation !== 'undefined' && annotation !== true) {\n      return false\n    }\n\n    if (this.previous().length) {\n      return this.previous().some(i => i.inline)\n    }\n    return true\n  }\n\n  isSourcesContent() {\n    if (typeof this.mapOpts.sourcesContent !== 'undefined') {\n      return this.mapOpts.sourcesContent\n    }\n    if (this.previous().length) {\n      return this.previous().some(i => i.withContent())\n    }\n    return true\n  }\n\n  clearAnnotation() {\n    if (this.mapOpts.annotation === false) return\n\n    if (this.root) {\n      let node\n      for (let i = this.root.nodes.length - 1; i >= 0; i--) {\n        node = this.root.nodes[i]\n        if (node.type !== 'comment') continue\n        if (node.text.indexOf('# sourceMappingURL=') === 0) {\n          this.root.removeChild(i)\n        }\n      }\n    } else if (this.css) {\n      this.css = this.css.replace(/(\\n)?\\/\\*#[\\S\\s]*?\\*\\/$/gm, '')\n    }\n  }\n\n  setSourcesContent() {\n    let already = {}\n    if (this.root) {\n      this.root.walk(node => {\n        if (node.source) {\n          let from = node.source.input.from\n          if (from && !already[from]) {\n            already[from] = true\n            let fromUrl = this.usesFileUrls\n              ? this.toFileUrl(from)\n              : this.toUrl(this.path(from))\n            this.map.setSourceContent(fromUrl, node.source.input.css)\n          }\n        }\n      })\n    } else if (this.css) {\n      let from = this.opts.from\n        ? this.toUrl(this.path(this.opts.from))\n        : '<no source>'\n      this.map.setSourceContent(from, this.css)\n    }\n  }\n\n  applyPrevMaps() {\n    for (let prev of this.previous()) {\n      let from = this.toUrl(this.path(prev.file))\n      let root = prev.root || dirname(prev.file)\n      let map\n\n      if (this.mapOpts.sourcesContent === false) {\n        map = new SourceMapConsumer(prev.text)\n        if (map.sourcesContent) {\n          map.sourcesContent = map.sourcesContent.map(() => null)\n        }\n      } else {\n        map = prev.consumer()\n      }\n\n      this.map.applySourceMap(map, from, this.toUrl(this.path(root)))\n    }\n  }\n\n  isAnnotation() {\n    if (this.isInline()) {\n      return true\n    }\n    if (typeof this.mapOpts.annotation !== 'undefined') {\n      return this.mapOpts.annotation\n    }\n    if (this.previous().length) {\n      return this.previous().some(i => i.annotation)\n    }\n    return true\n  }\n\n  toBase64(str) {\n    if (Buffer) {\n      return Buffer.from(str).toString('base64')\n    } else {\n      return window.btoa(unescape(encodeURIComponent(str)))\n    }\n  }\n\n  addAnnotation() {\n    let content\n\n    if (this.isInline()) {\n      content =\n        'data:application/json;base64,' + this.toBase64(this.map.toString())\n    } else if (typeof this.mapOpts.annotation === 'string') {\n      content = this.mapOpts.annotation\n    } else if (typeof this.mapOpts.annotation === 'function') {\n      content = this.mapOpts.annotation(this.opts.to, this.root)\n    } else {\n      content = this.outputFile() + '.map'\n    }\n    let eol = '\\n'\n    if (this.css.includes('\\r\\n')) eol = '\\r\\n'\n\n    this.css += eol + '/*# sourceMappingURL=' + content + ' */'\n  }\n\n  outputFile() {\n    if (this.opts.to) {\n      return this.path(this.opts.to)\n    } else if (this.opts.from) {\n      return this.path(this.opts.from)\n    } else {\n      return 'to.css'\n    }\n  }\n\n  generateMap() {\n    if (this.root) {\n      this.generateString()\n    } else if (this.previous().length === 1) {\n      let prev = this.previous()[0].consumer()\n      prev.file = this.outputFile()\n      this.map = SourceMapGenerator.fromSourceMap(prev)\n    } else {\n      this.map = new SourceMapGenerator({ file: this.outputFile() })\n      this.map.addMapping({\n        source: this.opts.from\n          ? this.toUrl(this.path(this.opts.from))\n          : '<no source>',\n        generated: { line: 1, column: 0 },\n        original: { line: 1, column: 0 }\n      })\n    }\n\n    if (this.isSourcesContent()) this.setSourcesContent()\n    if (this.root && this.previous().length > 0) this.applyPrevMaps()\n    if (this.isAnnotation()) this.addAnnotation()\n\n    if (this.isInline()) {\n      return [this.css]\n    } else {\n      return [this.css, this.map]\n    }\n  }\n\n  path(file) {\n    if (file.indexOf('<') === 0) return file\n    if (/^\\w+:\\/\\//.test(file)) return file\n    if (this.mapOpts.absolute) return file\n\n    let from = this.opts.to ? dirname(this.opts.to) : '.'\n\n    if (typeof this.mapOpts.annotation === 'string') {\n      from = dirname(resolve(from, this.mapOpts.annotation))\n    }\n\n    file = relative(from, file)\n    return file\n  }\n\n  toUrl(path) {\n    if (sep === '\\\\') {\n      path = path.replace(/\\\\/g, '/')\n    }\n    return encodeURI(path).replace(/[#?]/g, encodeURIComponent)\n  }\n\n  toFileUrl(path) {\n    if (pathToFileURL) {\n      return pathToFileURL(path).toString()\n    } else {\n      throw new Error(\n        '`map.absolute` option is not available in this PostCSS build'\n      )\n    }\n  }\n\n  sourcePath(node) {\n    if (this.mapOpts.from) {\n      return this.toUrl(this.mapOpts.from)\n    } else if (this.usesFileUrls) {\n      return this.toFileUrl(node.source.input.from)\n    } else {\n      return this.toUrl(this.path(node.source.input.from))\n    }\n  }\n\n  generateString() {\n    this.css = ''\n    this.map = new SourceMapGenerator({ file: this.outputFile() })\n\n    let line = 1\n    let column = 1\n\n    let noSource = '<no source>'\n    let mapping = {\n      source: '',\n      generated: { line: 0, column: 0 },\n      original: { line: 0, column: 0 }\n    }\n\n    let lines, last\n    this.stringify(this.root, (str, node, type) => {\n      this.css += str\n\n      if (node && type !== 'end') {\n        mapping.generated.line = line\n        mapping.generated.column = column - 1\n        if (node.source && node.source.start) {\n          mapping.source = this.sourcePath(node)\n          mapping.original.line = node.source.start.line\n          mapping.original.column = node.source.start.column - 1\n          this.map.addMapping(mapping)\n        } else {\n          mapping.source = noSource\n          mapping.original.line = 1\n          mapping.original.column = 0\n          this.map.addMapping(mapping)\n        }\n      }\n\n      lines = str.match(/\\n/g)\n      if (lines) {\n        line += lines.length\n        last = str.lastIndexOf('\\n')\n        column = str.length - last\n      } else {\n        column += str.length\n      }\n\n      if (node && type !== 'start') {\n        let p = node.parent || { raws: {} }\n        let childless =\n          node.type === 'decl' || (node.type === 'atrule' && !node.nodes)\n        if (!childless || node !== p.last || p.raws.semicolon) {\n          if (node.source && node.source.end) {\n            mapping.source = this.sourcePath(node)\n            mapping.original.line = node.source.end.line\n            mapping.original.column = node.source.end.column - 1\n            mapping.generated.line = line\n            mapping.generated.column = column - 2\n            this.map.addMapping(mapping)\n          } else {\n            mapping.source = noSource\n            mapping.original.line = 1\n            mapping.original.column = 0\n            mapping.generated.line = line\n            mapping.generated.column = column - 1\n            this.map.addMapping(mapping)\n          }\n        }\n      }\n    })\n  }\n\n  generate() {\n    this.clearAnnotation()\n    if (pathAvailable && sourceMapAvailable && this.isMap()) {\n      return this.generateMap()\n    } else {\n      let result = ''\n      this.stringify(this.root, i => {\n        result += i\n      })\n      return [result]\n    }\n  }\n}\n\nmodule.exports = MapGenerator\n"]}}