{"code":"(()=>{\n\"use strict\";var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});Object.defineProperty(exports,\"__esModule\",{value:true});function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}__name(_interopRequireDefault,\"_interopRequireDefault\");var _CJSImportProcessor=require(\"./CJSImportProcessor\");var _CJSImportProcessor2=_interopRequireDefault(_CJSImportProcessor);var _computeSourceMap=require(\"./computeSourceMap\");var _computeSourceMap2=_interopRequireDefault(_computeSourceMap);var _HelperManager=require(\"./HelperManager\");var _identifyShadowedGlobals=require(\"./identifyShadowedGlobals\");var _identifyShadowedGlobals2=_interopRequireDefault(_identifyShadowedGlobals);var _NameManager=require(\"./NameManager\");var _NameManager2=_interopRequireDefault(_NameManager);var _Options=require(\"./Options\");var _parser=require(\"./parser\");var _TokenProcessor=require(\"./TokenProcessor\");var _TokenProcessor2=_interopRequireDefault(_TokenProcessor);var _RootTransformer=require(\"./transformers/RootTransformer\");var _RootTransformer2=_interopRequireDefault(_RootTransformer);var _formatTokens=require(\"./util/formatTokens\");var _formatTokens2=_interopRequireDefault(_formatTokens);var _getTSImportedNames=require(\"./util/getTSImportedNames\");var _getTSImportedNames2=_interopRequireDefault(_getTSImportedNames);function getVersion(){return\"3.32.0\"}__name(getVersion,\"getVersion\");exports.getVersion=getVersion;function transform(code,options){_Options.validateOptions.call(void 0,options);try{const sucraseContext=getSucraseContext(code,options);const transformer=new(0,_RootTransformer2.default)(sucraseContext,options.transforms,Boolean(options.enableLegacyBabel5ModuleInterop),options);const transformerResult=transformer.transform();let result={code:transformerResult.code};if(options.sourceMapOptions){if(!options.filePath){throw new Error(\"filePath must be specified when generating a source map.\")}result={...result,sourceMap:_computeSourceMap2.default.call(void 0,transformerResult,options.filePath,options.sourceMapOptions,code,sucraseContext.tokenProcessor.tokens)}}return result}catch(e){if(options.filePath){e.message=`Error transforming ${options.filePath}: ${e.message}`}throw e}}__name(transform,\"transform\");exports.transform=transform;function getFormattedTokens(code,options){const tokens=getSucraseContext(code,options).tokenProcessor.tokens;return _formatTokens2.default.call(void 0,code,tokens)}__name(getFormattedTokens,\"getFormattedTokens\");exports.getFormattedTokens=getFormattedTokens;function getSucraseContext(code,options){const isJSXEnabled=options.transforms.includes(\"jsx\");const isTypeScriptEnabled=options.transforms.includes(\"typescript\");const isFlowEnabled=options.transforms.includes(\"flow\");const disableESTransforms=options.disableESTransforms===true;const file=_parser.parse.call(void 0,code,isJSXEnabled,isTypeScriptEnabled,isFlowEnabled);const tokens=file.tokens;const scopes=file.scopes;const nameManager=new(0,_NameManager2.default)(code,tokens);const helperManager=new(0,_HelperManager.HelperManager)(nameManager);const tokenProcessor=new(0,_TokenProcessor2.default)(code,tokens,isFlowEnabled,disableESTransforms,helperManager);const enableLegacyTypeScriptModuleInterop=Boolean(options.enableLegacyTypeScriptModuleInterop);let importProcessor=null;if(options.transforms.includes(\"imports\")){importProcessor=new(0,_CJSImportProcessor2.default)(nameManager,tokenProcessor,enableLegacyTypeScriptModuleInterop,options,options.transforms.includes(\"typescript\"),helperManager);importProcessor.preprocessTokens();_identifyShadowedGlobals2.default.call(void 0,tokenProcessor,scopes,importProcessor.getGlobalNames());if(options.transforms.includes(\"typescript\")){importProcessor.pruneTypeOnlyImports()}}else if(options.transforms.includes(\"typescript\")){_identifyShadowedGlobals2.default.call(void 0,tokenProcessor,scopes,_getTSImportedNames2.default.call(void 0,tokenProcessor))}return{tokenProcessor,scopes,nameManager,importProcessor,helperManager}}__name(getSucraseContext,\"getSucraseContext\");\n})()\n","warnings":[],"map":{"version":3,"mappings":";+HAAa,OAAO,eAAe,QAAS,aAAc,CAAC,MAAO,IAAI,CAAC,EAAG,SAAS,uBAAuB,IAAK,CAAE,OAAO,KAAO,IAAI,WAAa,IAAM,CAAE,QAAS,GAAI,CAAG,CAArF,wDAAsF,IAAI,oBAAsB,QAAQ,sBAAsB,EAAG,IAAI,qBAAuB,uBAAuB,mBAAmB,EACzS,IAAI,kBAAoB,QAAQ,oBAAoB,EAAG,IAAI,mBAAqB,uBAAuB,iBAAiB,EACxH,IAAI,eAAiB,QAAQ,iBAAiB,EAC9C,IAAI,yBAA2B,QAAQ,2BAA2B,EAAG,IAAI,0BAA4B,uBAAuB,wBAAwB,EACpJ,IAAI,aAAe,QAAQ,eAAe,EAAG,IAAI,cAAgB,uBAAuB,YAAY,EACpG,IAAI,SAAW,QAAQ,WAAW,EAClC,IAAI,QAAU,QAAQ,UAAU,EAEhC,IAAI,gBAAkB,QAAQ,kBAAkB,EAAG,IAAI,iBAAmB,uBAAuB,eAAe,EAChH,IAAI,iBAAmB,QAAQ,gCAAgC,EAAG,IAAI,kBAAoB,uBAAuB,gBAAgB,EACjI,IAAI,cAAgB,QAAQ,qBAAqB,EAAG,IAAI,eAAiB,uBAAuB,aAAa,EAC7G,IAAI,oBAAsB,QAAQ,2BAA2B,EAAG,IAAI,qBAAuB,uBAAuB,mBAAmB,EAoBpI,SAAS,YAAa,CAErB,MAAO,QACT,CAHU,gCAGR,QAAQ,WAAa,WAEtB,SAAS,UAAU,KAAM,QAAS,CACjC,SAAS,gBAAgB,KAAK,OAAQ,OAAO,EAC7C,GAAI,CACF,MAAM,eAAiB,kBAAkB,KAAM,OAAO,EACtD,MAAM,YAAc,IAAK,EAAG,kBAAkB,SAC5C,eACA,QAAQ,WACR,QAAQ,QAAQ,+BAA+B,EAC/C,OACF,EACA,MAAM,kBAAoB,YAAY,UAAU,EAChD,IAAI,OAAS,CAAC,KAAM,kBAAkB,IAAI,EAC1C,GAAI,QAAQ,iBAAkB,CAC5B,GAAI,CAAC,QAAQ,SAAU,CACrB,MAAM,IAAI,MAAM,0DAA0D,CAC5E,CACA,OAAS,CACP,GAAG,OACH,UAAW,mBAAmB,QAAQ,KAAK,OACzC,kBACA,QAAQ,SACR,QAAQ,iBACR,KACA,eAAe,eAAe,MAChC,CACF,CACF,CACA,OAAO,MAET,OAAS,EAAP,CACA,GAAI,QAAQ,SAAU,CACpB,EAAE,QAAU,sBAAsB,QAAQ,aAAa,EAAE,SAC3D,CACA,MAAM,CACR,CACF,CAnCU,8BAmCR,QAAQ,UAAY,UAMrB,SAAS,mBAAmB,KAAM,QAAS,CAC1C,MAAM,OAAS,kBAAkB,KAAM,OAAO,EAAE,eAAe,OAC/D,OAAO,eAAe,QAAQ,KAAK,OAAQ,KAAM,MAAM,CACzD,CAHU,gDAGR,QAAQ,mBAAqB,mBAW/B,SAAS,kBAAkB,KAAM,QAAS,CACxC,MAAM,aAAe,QAAQ,WAAW,SAAS,KAAK,EACtD,MAAM,oBAAsB,QAAQ,WAAW,SAAS,YAAY,EACpE,MAAM,cAAgB,QAAQ,WAAW,SAAS,MAAM,EACxD,MAAM,oBAAsB,QAAQ,sBAAwB,KAC5D,MAAM,KAAO,QAAQ,MAAM,KAAK,OAAQ,KAAM,aAAc,oBAAqB,aAAa,EAC9F,MAAM,OAAS,KAAK,OACpB,MAAM,OAAS,KAAK,OAEpB,MAAM,YAAc,IAAK,EAAG,cAAc,SAAS,KAAM,MAAM,EAC/D,MAAM,cAAgB,IAAK,EAAG,eAAe,eAAe,WAAW,EACvE,MAAM,eAAiB,IAAK,EAAG,iBAAiB,SAC9C,KACA,OACA,cACA,oBACA,aACF,EACA,MAAM,oCAAsC,QAAQ,QAAQ,mCAAmC,EAE/F,IAAI,gBAAkB,KACtB,GAAI,QAAQ,WAAW,SAAS,SAAS,EAAG,CAC1C,gBAAkB,IAAK,EAAG,qBAAqB,SAC7C,YACA,eACA,oCACA,QACA,QAAQ,WAAW,SAAS,YAAY,EACxC,aACF,EACA,gBAAgB,iBAAiB,EAGjC,0BAA0B,QAAQ,KAAK,OAAQ,eAAgB,OAAQ,gBAAgB,eAAe,CAAC,EACvG,GAAI,QAAQ,WAAW,SAAS,YAAY,EAAG,CAC7C,gBAAgB,qBAAqB,CACvC,CACF,SAAW,QAAQ,WAAW,SAAS,YAAY,EAAG,CACpD,0BAA0B,QAAQ,KAAK,OAAQ,eAAgB,OAAQ,qBAAqB,QAAQ,KAAK,OAAQ,cAAc,CAAC,CAClI,CACA,MAAO,CAAC,eAAgB,OAAQ,YAAa,gBAAiB,aAAa,CAC7E,CAzCS","names":[],"sources":["/root/projects/zachw-i/packages/plugin/node_modules/.pnpm/sucrase@3.32.0/node_modules/sucrase/dist/index.js"],"sourcesContent":["\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true}); function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }var _CJSImportProcessor = require('./CJSImportProcessor'); var _CJSImportProcessor2 = _interopRequireDefault(_CJSImportProcessor);\nvar _computeSourceMap = require('./computeSourceMap'); var _computeSourceMap2 = _interopRequireDefault(_computeSourceMap);\nvar _HelperManager = require('./HelperManager');\nvar _identifyShadowedGlobals = require('./identifyShadowedGlobals'); var _identifyShadowedGlobals2 = _interopRequireDefault(_identifyShadowedGlobals);\nvar _NameManager = require('./NameManager'); var _NameManager2 = _interopRequireDefault(_NameManager);\nvar _Options = require('./Options');\nvar _parser = require('./parser');\n\nvar _TokenProcessor = require('./TokenProcessor'); var _TokenProcessor2 = _interopRequireDefault(_TokenProcessor);\nvar _RootTransformer = require('./transformers/RootTransformer'); var _RootTransformer2 = _interopRequireDefault(_RootTransformer);\nvar _formatTokens = require('./util/formatTokens'); var _formatTokens2 = _interopRequireDefault(_formatTokens);\nvar _getTSImportedNames = require('./util/getTSImportedNames'); var _getTSImportedNames2 = _interopRequireDefault(_getTSImportedNames);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n function getVersion() {\n  /* istanbul ignore next */\n  return \"3.32.0\";\n} exports.getVersion = getVersion;\n\n function transform(code, options) {\n  _Options.validateOptions.call(void 0, options);\n  try {\n    const sucraseContext = getSucraseContext(code, options);\n    const transformer = new (0, _RootTransformer2.default)(\n      sucraseContext,\n      options.transforms,\n      Boolean(options.enableLegacyBabel5ModuleInterop),\n      options,\n    );\n    const transformerResult = transformer.transform();\n    let result = {code: transformerResult.code};\n    if (options.sourceMapOptions) {\n      if (!options.filePath) {\n        throw new Error(\"filePath must be specified when generating a source map.\");\n      }\n      result = {\n        ...result,\n        sourceMap: _computeSourceMap2.default.call(void 0, \n          transformerResult,\n          options.filePath,\n          options.sourceMapOptions,\n          code,\n          sucraseContext.tokenProcessor.tokens,\n        ),\n      };\n    }\n    return result;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  } catch (e) {\n    if (options.filePath) {\n      e.message = `Error transforming ${options.filePath}: ${e.message}`;\n    }\n    throw e;\n  }\n} exports.transform = transform;\n\n/**\n * Return a string representation of the sucrase tokens, mostly useful for\n * diagnostic purposes.\n */\n function getFormattedTokens(code, options) {\n  const tokens = getSucraseContext(code, options).tokenProcessor.tokens;\n  return _formatTokens2.default.call(void 0, code, tokens);\n} exports.getFormattedTokens = getFormattedTokens;\n\n/**\n * Call into the parser/tokenizer and do some further preprocessing:\n * - Come up with a set of used names so that we can assign new names.\n * - Preprocess all import/export statements so we know which globals we are interested in.\n * - Compute situations where any of those globals are shadowed.\n *\n * In the future, some of these preprocessing steps can be skipped based on what actual work is\n * being done.\n */\nfunction getSucraseContext(code, options) {\n  const isJSXEnabled = options.transforms.includes(\"jsx\");\n  const isTypeScriptEnabled = options.transforms.includes(\"typescript\");\n  const isFlowEnabled = options.transforms.includes(\"flow\");\n  const disableESTransforms = options.disableESTransforms === true;\n  const file = _parser.parse.call(void 0, code, isJSXEnabled, isTypeScriptEnabled, isFlowEnabled);\n  const tokens = file.tokens;\n  const scopes = file.scopes;\n\n  const nameManager = new (0, _NameManager2.default)(code, tokens);\n  const helperManager = new (0, _HelperManager.HelperManager)(nameManager);\n  const tokenProcessor = new (0, _TokenProcessor2.default)(\n    code,\n    tokens,\n    isFlowEnabled,\n    disableESTransforms,\n    helperManager,\n  );\n  const enableLegacyTypeScriptModuleInterop = Boolean(options.enableLegacyTypeScriptModuleInterop);\n\n  let importProcessor = null;\n  if (options.transforms.includes(\"imports\")) {\n    importProcessor = new (0, _CJSImportProcessor2.default)(\n      nameManager,\n      tokenProcessor,\n      enableLegacyTypeScriptModuleInterop,\n      options,\n      options.transforms.includes(\"typescript\"),\n      helperManager,\n    );\n    importProcessor.preprocessTokens();\n    // We need to mark shadowed globals after processing imports so we know that the globals are,\n    // but before type-only import pruning, since that relies on shadowing information.\n    _identifyShadowedGlobals2.default.call(void 0, tokenProcessor, scopes, importProcessor.getGlobalNames());\n    if (options.transforms.includes(\"typescript\")) {\n      importProcessor.pruneTypeOnlyImports();\n    }\n  } else if (options.transforms.includes(\"typescript\")) {\n    _identifyShadowedGlobals2.default.call(void 0, tokenProcessor, scopes, _getTSImportedNames2.default.call(void 0, tokenProcessor));\n  }\n  return {tokenProcessor, scopes, nameManager, importProcessor, helperManager};\n}\n"]}}