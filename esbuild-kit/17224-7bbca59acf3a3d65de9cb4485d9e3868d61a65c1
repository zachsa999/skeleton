{"code":"(()=>{\n\"use strict\";var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});let Container=require(\"./container\");let Parser=require(\"./parser\");let Input=require(\"./input\");function parse(css,opts){let input=new Input(css,opts);let parser=new Parser(input);try{parser.parse()}catch(e){if(process.env.NODE_ENV!==\"production\"){if(e.name===\"CssSyntaxError\"&&opts&&opts.from){if(/\\.scss$/i.test(opts.from)){e.message+=\"\\nYou tried to parse SCSS with the standard CSS parser; try again with the postcss-scss parser\"}else if(/\\.sass/i.test(opts.from)){e.message+=\"\\nYou tried to parse Sass with the standard CSS parser; try again with the postcss-sass parser\"}else if(/\\.less$/i.test(opts.from)){e.message+=\"\\nYou tried to parse Less with the standard CSS parser; try again with the postcss-less parser\"}}}throw e}return parser.root}__name(parse,\"parse\");module.exports=parse;parse.default=parse;Container.registerParse(parse);\n})()\n","warnings":[],"map":{"version":3,"mappings":";+HAEA,IAAI,UAAY,QAAQ,aAAa,EACrC,IAAI,OAAS,QAAQ,UAAU,EAC/B,IAAI,MAAQ,QAAQ,SAAS,EAE7B,SAAS,MAAM,IAAK,KAAM,CACxB,IAAI,MAAQ,IAAI,MAAM,IAAK,IAAI,EAC/B,IAAI,OAAS,IAAI,OAAO,KAAK,EAC7B,GAAI,CACF,OAAO,MAAM,CACf,OAAS,EAAP,CACA,GAAI,QAAQ,IAAI,WAAa,aAAc,CACzC,GAAI,EAAE,OAAS,kBAAoB,MAAQ,KAAK,KAAM,CACpD,GAAI,WAAW,KAAK,KAAK,IAAI,EAAG,CAC9B,EAAE,SACA,gGAGJ,SAAW,UAAU,KAAK,KAAK,IAAI,EAAG,CACpC,EAAE,SACA,gGAGJ,SAAW,WAAW,KAAK,KAAK,IAAI,EAAG,CACrC,EAAE,SACA,gGAGJ,CACF,CACF,CACA,MAAM,CACR,CAEA,OAAO,OAAO,IAChB,CA9BS,sBAgCT,OAAO,QAAU,MACjB,MAAM,QAAU,MAEhB,UAAU,cAAc,KAAK","names":[],"sources":["/root/projects/zachw-i/packages/plugin/node_modules/.pnpm/postcss@8.4.24/node_modules/postcss/lib/parse.js"],"sourcesContent":["'use strict'\n\nlet Container = require('./container')\nlet Parser = require('./parser')\nlet Input = require('./input')\n\nfunction parse(css, opts) {\n  let input = new Input(css, opts)\n  let parser = new Parser(input)\n  try {\n    parser.parse()\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (e.name === 'CssSyntaxError' && opts && opts.from) {\n        if (/\\.scss$/i.test(opts.from)) {\n          e.message +=\n            '\\nYou tried to parse SCSS with ' +\n            'the standard CSS parser; ' +\n            'try again with the postcss-scss parser'\n        } else if (/\\.sass/i.test(opts.from)) {\n          e.message +=\n            '\\nYou tried to parse Sass with ' +\n            'the standard CSS parser; ' +\n            'try again with the postcss-sass parser'\n        } else if (/\\.less$/i.test(opts.from)) {\n          e.message +=\n            '\\nYou tried to parse Less with ' +\n            'the standard CSS parser; ' +\n            'try again with the postcss-less parser'\n        }\n      }\n    }\n    throw e\n  }\n\n  return parser.root\n}\n\nmodule.exports = parse\nparse.default = parse\n\nContainer.registerParse(parse)\n"]}}