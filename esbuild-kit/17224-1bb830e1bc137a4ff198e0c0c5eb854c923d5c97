{"code":"(()=>{\n\"use strict\";var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});Object.defineProperty(exports,\"__esModule\",{value:true});Object.defineProperty(exports,\"default\",{enumerable:true,get:function(){return _default}});function createPlugin(plugin,config){return{handler:plugin,config}}__name(createPlugin,\"createPlugin\");createPlugin.withOptions=function(pluginFunction,configFunction=()=>({})){const optionsFunction=__name(function(options){return{__options:options,handler:pluginFunction(options),config:configFunction(options)}},\"optionsFunction\");optionsFunction.__isOptionsFunction=true;optionsFunction.__pluginFunction=pluginFunction;optionsFunction.__configFunction=configFunction;return optionsFunction};const _default=createPlugin;\n})()\n","warnings":[],"map":{"version":3,"mappings":";+HACA,OAAO,eAAe,QAAS,aAAc,CACzC,MAAO,IACX,CAAC,EACD,OAAO,eAAe,QAAS,UAAW,CACtC,WAAY,KACZ,IAAK,UAAW,CACZ,OAAO,QACX,CACJ,CAAC,EACD,SAAS,aAAa,OAAQ,OAAQ,CAClC,MAAO,CACH,QAAS,OACT,MACJ,CACJ,CALS,oCAMT,aAAa,YAAc,SAAS,eAAgB,eAAiB,KAAK,CAAC,GAAI,CAC3E,MAAM,gBAAkB,gBAAS,QAAS,CACtC,MAAO,CACH,UAAW,QACX,QAAS,eAAe,OAAO,EAC/B,OAAQ,eAAe,OAAO,CAClC,CACJ,EANwB,mBAOxB,gBAAgB,oBAAsB,KAGtC,gBAAgB,iBAAmB,eACnC,gBAAgB,iBAAmB,eACnC,OAAO,eACX,EACA,MAAM,SAAW","names":[],"sources":["/root/projects/zachw-i/packages/plugin/node_modules/.pnpm/tailwindcss@3.3.2/node_modules/tailwindcss/lib/util/createPlugin.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function() {\n        return _default;\n    }\n});\nfunction createPlugin(plugin, config) {\n    return {\n        handler: plugin,\n        config\n    };\n}\ncreatePlugin.withOptions = function(pluginFunction, configFunction = ()=>({})) {\n    const optionsFunction = function(options) {\n        return {\n            __options: options,\n            handler: pluginFunction(options),\n            config: configFunction(options)\n        };\n    };\n    optionsFunction.__isOptionsFunction = true;\n    // Expose plugin dependencies so that `object-hash` returns a different\n    // value if anything here changes, to ensure a rebuild is triggered.\n    optionsFunction.__pluginFunction = pluginFunction;\n    optionsFunction.__configFunction = configFunction;\n    return optionsFunction;\n};\nconst _default = createPlugin;\n"]}}