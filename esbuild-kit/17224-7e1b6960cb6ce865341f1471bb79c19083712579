{"code":"(()=>{\n\"use strict\";var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});Object.defineProperty(exports,\"__esModule\",{value:true});function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}__name(_export,\"_export\");_export(exports,{normalize:function(){return normalize},url:function(){return url},number:function(){return number},percentage:function(){return percentage},length:function(){return length},lineWidth:function(){return lineWidth},shadow:function(){return shadow},color:function(){return color},image:function(){return image},gradient:function(){return gradient},position:function(){return position},familyName:function(){return familyName},genericName:function(){return genericName},absoluteSize:function(){return absoluteSize},relativeSize:function(){return relativeSize}});const _color=require(\"./color\");const _parseBoxShadowValue=require(\"./parseBoxShadowValue\");const _splitAtTopLevelOnly=require(\"./splitAtTopLevelOnly\");let cssFunctions=[\"min\",\"max\",\"clamp\",\"calc\"];function isCSSFunction(value){return cssFunctions.some(fn=>new RegExp(`^${fn}\\\\(.*\\\\)`).test(value))}__name(isCSSFunction,\"isCSSFunction\");const placeholder=\"--tw-placeholder\";const placeholderRe=new RegExp(placeholder,\"g\");function normalize(value,isRoot=true){if(value.startsWith(\"--\")){return`var(${value})`}if(value.includes(\"url(\")){return value.split(/(url\\(.*?\\))/g).filter(Boolean).map(part=>{if(/^url\\(.*?\\)$/.test(part)){return part}return normalize(part,false)}).join(\"\")}value=value.replace(/([^\\\\])_+/g,(fullMatch,characterBefore)=>characterBefore+\" \".repeat(fullMatch.length-1)).replace(/^_/g,\" \").replace(/\\\\_/g,\"_\");if(isRoot){value=value.trim()}value=value.replace(/(calc|min|max|clamp)\\(.+\\)/g,match=>{let vars=[];return match.replace(/var\\((--.+?)[,)]/g,(match2,g1)=>{vars.push(g1);return match2.replace(g1,placeholder)}).replace(/(-?\\d*\\.?\\d(?!\\b-\\d.+[,)](?![^+\\-/*])\\D)(?:%|[a-z]+)?|\\))([+\\-/*])/g,\"$1 $2 \").replace(placeholderRe,()=>vars.shift())});return value}__name(normalize,\"normalize\");function url(value){return value.startsWith(\"url(\")}__name(url,\"url\");function number(value){return!isNaN(Number(value))||isCSSFunction(value)}__name(number,\"number\");function percentage(value){return value.endsWith(\"%\")&&number(value.slice(0,-1))||isCSSFunction(value)}__name(percentage,\"percentage\");let lengthUnits=[\"cm\",\"mm\",\"Q\",\"in\",\"pc\",\"pt\",\"px\",\"em\",\"ex\",\"ch\",\"rem\",\"lh\",\"rlh\",\"vw\",\"vh\",\"vmin\",\"vmax\",\"vb\",\"vi\",\"svw\",\"svh\",\"lvw\",\"lvh\",\"dvw\",\"dvh\",\"cqw\",\"cqh\",\"cqi\",\"cqb\",\"cqmin\",\"cqmax\"];let lengthUnitsPattern=`(?:${lengthUnits.join(\"|\")})`;function length(value){return value===\"0\"||new RegExp(`^[+-]?[0-9]*.?[0-9]+(?:[eE][+-]?[0-9]+)?${lengthUnitsPattern}$`).test(value)||isCSSFunction(value)}__name(length,\"length\");let lineWidths=new Set([\"thin\",\"medium\",\"thick\"]);function lineWidth(value){return lineWidths.has(value)}__name(lineWidth,\"lineWidth\");function shadow(value){let parsedShadows=(0,_parseBoxShadowValue.parseBoxShadowValue)(normalize(value));for(let parsedShadow of parsedShadows){if(!parsedShadow.valid){return false}}return true}__name(shadow,\"shadow\");function color(value){let colors=0;let result=(0,_splitAtTopLevelOnly.splitAtTopLevelOnly)(value,\"_\").every(part=>{part=normalize(part);if(part.startsWith(\"var(\"))return true;if((0,_color.parseColor)(part,{loose:true})!==null)return colors++,true;return false});if(!result)return false;return colors>0}__name(color,\"color\");function image(value){let images=0;let result=(0,_splitAtTopLevelOnly.splitAtTopLevelOnly)(value,\",\").every(part=>{part=normalize(part);if(part.startsWith(\"var(\"))return true;if(url(part)||gradient(part)||[\"element(\",\"image(\",\"cross-fade(\",\"image-set(\"].some(fn=>part.startsWith(fn))){images++;return true}return false});if(!result)return false;return images>0}__name(image,\"image\");let gradientTypes=new Set([\"linear-gradient\",\"radial-gradient\",\"repeating-linear-gradient\",\"repeating-radial-gradient\",\"conic-gradient\"]);function gradient(value){value=normalize(value);for(let type of gradientTypes){if(value.startsWith(`${type}(`)){return true}}return false}__name(gradient,\"gradient\");let validPositions=new Set([\"center\",\"top\",\"right\",\"bottom\",\"left\"]);function position(value){let positions=0;let result=(0,_splitAtTopLevelOnly.splitAtTopLevelOnly)(value,\"_\").every(part=>{part=normalize(part);if(part.startsWith(\"var(\"))return true;if(validPositions.has(part)||length(part)||percentage(part)){positions++;return true}return false});if(!result)return false;return positions>0}__name(position,\"position\");function familyName(value){let fonts=0;let result=(0,_splitAtTopLevelOnly.splitAtTopLevelOnly)(value,\",\").every(part=>{part=normalize(part);if(part.startsWith(\"var(\"))return true;if(part.includes(\" \")){if(!/(['\"])([^\"']+)\\1/g.test(part)){return false}}if(/^\\d/g.test(part)){return false}fonts++;return true});if(!result)return false;return fonts>0}__name(familyName,\"familyName\");let genericNames=new Set([\"serif\",\"sans-serif\",\"monospace\",\"cursive\",\"fantasy\",\"system-ui\",\"ui-serif\",\"ui-sans-serif\",\"ui-monospace\",\"ui-rounded\",\"math\",\"emoji\",\"fangsong\"]);function genericName(value){return genericNames.has(value)}__name(genericName,\"genericName\");let absoluteSizes=new Set([\"xx-small\",\"x-small\",\"small\",\"medium\",\"large\",\"x-large\",\"x-large\",\"xxx-large\"]);function absoluteSize(value){return absoluteSizes.has(value)}__name(absoluteSize,\"absoluteSize\");let relativeSizes=new Set([\"larger\",\"smaller\"]);function relativeSize(value){return relativeSizes.has(value)}__name(relativeSize,\"relativeSize\");\n})()\n","warnings":[],"map":{"version":3,"mappings":"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","names":["match"],"sources":["/root/projects/zachw-i/packages/plugin/node_modules/.pnpm/tailwindcss@3.3.2/node_modules/tailwindcss/lib/util/dataTypes.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    normalize: function() {\n        return normalize;\n    },\n    url: function() {\n        return url;\n    },\n    number: function() {\n        return number;\n    },\n    percentage: function() {\n        return percentage;\n    },\n    length: function() {\n        return length;\n    },\n    lineWidth: function() {\n        return lineWidth;\n    },\n    shadow: function() {\n        return shadow;\n    },\n    color: function() {\n        return color;\n    },\n    image: function() {\n        return image;\n    },\n    gradient: function() {\n        return gradient;\n    },\n    position: function() {\n        return position;\n    },\n    familyName: function() {\n        return familyName;\n    },\n    genericName: function() {\n        return genericName;\n    },\n    absoluteSize: function() {\n        return absoluteSize;\n    },\n    relativeSize: function() {\n        return relativeSize;\n    }\n});\nconst _color = require(\"./color\");\nconst _parseBoxShadowValue = require(\"./parseBoxShadowValue\");\nconst _splitAtTopLevelOnly = require(\"./splitAtTopLevelOnly\");\nlet cssFunctions = [\n    \"min\",\n    \"max\",\n    \"clamp\",\n    \"calc\"\n];\n// Ref: https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Types\nfunction isCSSFunction(value) {\n    return cssFunctions.some((fn)=>new RegExp(`^${fn}\\\\(.*\\\\)`).test(value));\n}\nconst placeholder = \"--tw-placeholder\";\nconst placeholderRe = new RegExp(placeholder, \"g\");\nfunction normalize(value, isRoot = true) {\n    if (value.startsWith(\"--\")) {\n        return `var(${value})`;\n    }\n    // Keep raw strings if it starts with `url(`\n    if (value.includes(\"url(\")) {\n        return value.split(/(url\\(.*?\\))/g).filter(Boolean).map((part)=>{\n            if (/^url\\(.*?\\)$/.test(part)) {\n                return part;\n            }\n            return normalize(part, false);\n        }).join(\"\");\n    }\n    // Convert `_` to ` `, except for escaped underscores `\\_`\n    value = value.replace(/([^\\\\])_+/g, (fullMatch, characterBefore)=>characterBefore + \" \".repeat(fullMatch.length - 1)).replace(/^_/g, \" \").replace(/\\\\_/g, \"_\");\n    // Remove leftover whitespace\n    if (isRoot) {\n        value = value.trim();\n    }\n    // Add spaces around operators inside math functions like calc() that do not follow an operator\n    // or '('.\n    value = value.replace(/(calc|min|max|clamp)\\(.+\\)/g, (match)=>{\n        let vars = [];\n        return match.replace(/var\\((--.+?)[,)]/g, (match, g1)=>{\n            vars.push(g1);\n            return match.replace(g1, placeholder);\n        }).replace(/(-?\\d*\\.?\\d(?!\\b-\\d.+[,)](?![^+\\-/*])\\D)(?:%|[a-z]+)?|\\))([+\\-/*])/g, \"$1 $2 \").replace(placeholderRe, ()=>vars.shift());\n    });\n    return value;\n}\nfunction url(value) {\n    return value.startsWith(\"url(\");\n}\nfunction number(value) {\n    return !isNaN(Number(value)) || isCSSFunction(value);\n}\nfunction percentage(value) {\n    return value.endsWith(\"%\") && number(value.slice(0, -1)) || isCSSFunction(value);\n}\n// Please refer to MDN when updating this list:\n// https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Values_and_units\n// https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Container_Queries#container_query_length_units\nlet lengthUnits = [\n    \"cm\",\n    \"mm\",\n    \"Q\",\n    \"in\",\n    \"pc\",\n    \"pt\",\n    \"px\",\n    \"em\",\n    \"ex\",\n    \"ch\",\n    \"rem\",\n    \"lh\",\n    \"rlh\",\n    \"vw\",\n    \"vh\",\n    \"vmin\",\n    \"vmax\",\n    \"vb\",\n    \"vi\",\n    \"svw\",\n    \"svh\",\n    \"lvw\",\n    \"lvh\",\n    \"dvw\",\n    \"dvh\",\n    \"cqw\",\n    \"cqh\",\n    \"cqi\",\n    \"cqb\",\n    \"cqmin\",\n    \"cqmax\"\n];\nlet lengthUnitsPattern = `(?:${lengthUnits.join(\"|\")})`;\nfunction length(value) {\n    return value === \"0\" || new RegExp(`^[+-]?[0-9]*\\.?[0-9]+(?:[eE][+-]?[0-9]+)?${lengthUnitsPattern}$`).test(value) || isCSSFunction(value);\n}\nlet lineWidths = new Set([\n    \"thin\",\n    \"medium\",\n    \"thick\"\n]);\nfunction lineWidth(value) {\n    return lineWidths.has(value);\n}\nfunction shadow(value) {\n    let parsedShadows = (0, _parseBoxShadowValue.parseBoxShadowValue)(normalize(value));\n    for (let parsedShadow of parsedShadows){\n        if (!parsedShadow.valid) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction color(value) {\n    let colors = 0;\n    let result = (0, _splitAtTopLevelOnly.splitAtTopLevelOnly)(value, \"_\").every((part)=>{\n        part = normalize(part);\n        if (part.startsWith(\"var(\")) return true;\n        if ((0, _color.parseColor)(part, {\n            loose: true\n        }) !== null) return colors++, true;\n        return false;\n    });\n    if (!result) return false;\n    return colors > 0;\n}\nfunction image(value) {\n    let images = 0;\n    let result = (0, _splitAtTopLevelOnly.splitAtTopLevelOnly)(value, \",\").every((part)=>{\n        part = normalize(part);\n        if (part.startsWith(\"var(\")) return true;\n        if (url(part) || gradient(part) || [\n            \"element(\",\n            \"image(\",\n            \"cross-fade(\",\n            \"image-set(\"\n        ].some((fn)=>part.startsWith(fn))) {\n            images++;\n            return true;\n        }\n        return false;\n    });\n    if (!result) return false;\n    return images > 0;\n}\nlet gradientTypes = new Set([\n    \"linear-gradient\",\n    \"radial-gradient\",\n    \"repeating-linear-gradient\",\n    \"repeating-radial-gradient\",\n    \"conic-gradient\"\n]);\nfunction gradient(value) {\n    value = normalize(value);\n    for (let type of gradientTypes){\n        if (value.startsWith(`${type}(`)) {\n            return true;\n        }\n    }\n    return false;\n}\nlet validPositions = new Set([\n    \"center\",\n    \"top\",\n    \"right\",\n    \"bottom\",\n    \"left\"\n]);\nfunction position(value) {\n    let positions = 0;\n    let result = (0, _splitAtTopLevelOnly.splitAtTopLevelOnly)(value, \"_\").every((part)=>{\n        part = normalize(part);\n        if (part.startsWith(\"var(\")) return true;\n        if (validPositions.has(part) || length(part) || percentage(part)) {\n            positions++;\n            return true;\n        }\n        return false;\n    });\n    if (!result) return false;\n    return positions > 0;\n}\nfunction familyName(value) {\n    let fonts = 0;\n    let result = (0, _splitAtTopLevelOnly.splitAtTopLevelOnly)(value, \",\").every((part)=>{\n        part = normalize(part);\n        if (part.startsWith(\"var(\")) return true;\n        // If it contains spaces, then it should be quoted\n        if (part.includes(\" \")) {\n            if (!/(['\"])([^\"']+)\\1/g.test(part)) {\n                return false;\n            }\n        }\n        // If it starts with a number, it's invalid\n        if (/^\\d/g.test(part)) {\n            return false;\n        }\n        fonts++;\n        return true;\n    });\n    if (!result) return false;\n    return fonts > 0;\n}\nlet genericNames = new Set([\n    \"serif\",\n    \"sans-serif\",\n    \"monospace\",\n    \"cursive\",\n    \"fantasy\",\n    \"system-ui\",\n    \"ui-serif\",\n    \"ui-sans-serif\",\n    \"ui-monospace\",\n    \"ui-rounded\",\n    \"math\",\n    \"emoji\",\n    \"fangsong\"\n]);\nfunction genericName(value) {\n    return genericNames.has(value);\n}\nlet absoluteSizes = new Set([\n    \"xx-small\",\n    \"x-small\",\n    \"small\",\n    \"medium\",\n    \"large\",\n    \"x-large\",\n    \"x-large\",\n    \"xxx-large\"\n]);\nfunction absoluteSize(value) {\n    return absoluteSizes.has(value);\n}\nlet relativeSizes = new Set([\n    \"larger\",\n    \"smaller\"\n]);\nfunction relativeSize(value) {\n    return relativeSizes.has(value);\n}\n"]}}