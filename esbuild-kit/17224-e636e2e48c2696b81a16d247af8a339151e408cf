{"code":"(()=>{\nvar __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});var util=require(\"./util\");function generatedPositionAfter(mappingA,mappingB){var lineA=mappingA.generatedLine;var lineB=mappingB.generatedLine;var columnA=mappingA.generatedColumn;var columnB=mappingB.generatedColumn;return lineB>lineA||lineB==lineA&&columnB>=columnA||util.compareByGeneratedPositionsInflated(mappingA,mappingB)<=0}__name(generatedPositionAfter,\"generatedPositionAfter\");function MappingList(){this._array=[];this._sorted=true;this._last={generatedLine:-1,generatedColumn:0}}__name(MappingList,\"MappingList\");MappingList.prototype.unsortedForEach=__name(function MappingList_forEach(aCallback,aThisArg){this._array.forEach(aCallback,aThisArg)},\"MappingList_forEach\");MappingList.prototype.add=__name(function MappingList_add(aMapping){if(generatedPositionAfter(this._last,aMapping)){this._last=aMapping;this._array.push(aMapping)}else{this._sorted=false;this._array.push(aMapping)}},\"MappingList_add\");MappingList.prototype.toArray=__name(function MappingList_toArray(){if(!this._sorted){this._array.sort(util.compareByGeneratedPositionsInflated);this._sorted=true}return this._array},\"MappingList_toArray\");exports.MappingList=MappingList;\n})()\n","warnings":[],"map":{"version":3,"mappings":";kHAOA,IAAI,KAAO,QAAQ,QAAQ,EAM3B,SAAS,uBAAuB,SAAU,SAAU,CAElD,IAAI,MAAQ,SAAS,cACrB,IAAI,MAAQ,SAAS,cACrB,IAAI,QAAU,SAAS,gBACvB,IAAI,QAAU,SAAS,gBACvB,OAAO,MAAQ,OAAS,OAAS,OAAS,SAAW,SAC9C,KAAK,oCAAoC,SAAU,QAAQ,GAAK,CACzE,CARS,wDAeT,SAAS,aAAc,CACrB,KAAK,OAAS,CAAC,EACf,KAAK,QAAU,KAEf,KAAK,MAAQ,CAAC,cAAe,GAAI,gBAAiB,CAAC,CACrD,CALS,kCAaT,YAAY,UAAU,gBACpB,gBAAS,oBAAoB,UAAW,SAAU,CAChD,KAAK,OAAO,QAAQ,UAAW,QAAQ,CACzC,EAFA,uBASF,YAAY,UAAU,IAAM,gBAAS,gBAAgB,SAAU,CAC7D,GAAI,uBAAuB,KAAK,MAAO,QAAQ,EAAG,CAChD,KAAK,MAAQ,SACb,KAAK,OAAO,KAAK,QAAQ,CAC3B,KAAO,CACL,KAAK,QAAU,MACf,KAAK,OAAO,KAAK,QAAQ,CAC3B,CACF,EAR4B,mBAmB5B,YAAY,UAAU,QAAU,gBAAS,qBAAsB,CAC7D,GAAI,CAAC,KAAK,QAAS,CACjB,KAAK,OAAO,KAAK,KAAK,mCAAmC,EACzD,KAAK,QAAU,IACjB,CACA,OAAO,KAAK,MACd,EANgC,uBAQhC,QAAQ,YAAc","names":[],"sources":["/root/projects/zachw-i/packages/plugin/node_modules/.pnpm/source-map-js@1.0.2/node_modules/source-map-js/lib/mapping-list.js"],"sourcesContent":["/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  var lineA = mappingA.generatedLine;\n  var lineB = mappingB.generatedLine;\n  var columnA = mappingA.generatedColumn;\n  var columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a neglibable overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nfunction MappingList() {\n  this._array = [];\n  this._sorted = true;\n  // Serves as infimum\n  this._last = {generatedLine: -1, generatedColumn: 0};\n}\n\n/**\n * Iterate through internal items. This method takes the same arguments that\n * `Array.prototype.forEach` takes.\n *\n * NOTE: The order of the mappings is NOT guaranteed.\n */\nMappingList.prototype.unsortedForEach =\n  function MappingList_forEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  };\n\n/**\n * Add the given source mapping.\n *\n * @param Object aMapping\n */\nMappingList.prototype.add = function MappingList_add(aMapping) {\n  if (generatedPositionAfter(this._last, aMapping)) {\n    this._last = aMapping;\n    this._array.push(aMapping);\n  } else {\n    this._sorted = false;\n    this._array.push(aMapping);\n  }\n};\n\n/**\n * Returns the flat, sorted array of mappings. The mappings are sorted by\n * generated position.\n *\n * WARNING: This method returns internal data without copying, for\n * performance. The return value must NOT be mutated, and should be treated as\n * an immutable borrow. If you want to take ownership, you must make your own\n * copy.\n */\nMappingList.prototype.toArray = function MappingList_toArray() {\n  if (!this._sorted) {\n    this._array.sort(util.compareByGeneratedPositionsInflated);\n    this._sorted = true;\n  }\n  return this._array;\n};\n\nexports.MappingList = MappingList;\n"]}}