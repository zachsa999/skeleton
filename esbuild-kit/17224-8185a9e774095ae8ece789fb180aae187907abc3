{"code":"(()=>{\n/*! queue-microtask. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */let promise;module.exports=typeof queueMicrotask===\"function\"?queueMicrotask.bind(typeof window!==\"undefined\"?window:global):cb=>(promise||(promise=Promise.resolve())).then(cb).catch(err=>setTimeout(()=>{throw err},0));\n})()\n","warnings":[],"map":{"version":3,"mappings":";AAAA,wFACA,IAAI,QAEJ,OAAO,QAAU,OAAO,iBAAmB,WACvC,eAAe,KAAK,OAAO,SAAW,YAAc,OAAS,MAAM,EAEnE,KAAO,UAAY,QAAU,QAAQ,QAAQ,IAC5C,KAAK,EAAE,EACP,MAAM,KAAO,WAAW,IAAM,CAAE,MAAM,GAAI,EAAG,CAAC,CAAC","names":[],"sources":["/root/projects/zachw-i/packages/plugin/node_modules/.pnpm/queue-microtask@1.2.3/node_modules/queue-microtask/index.js"],"sourcesContent":["/*! queue-microtask. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nlet promise\n\nmodule.exports = typeof queueMicrotask === 'function'\n  ? queueMicrotask.bind(typeof window !== 'undefined' ? window : global)\n  // reuse resolved promise, and allocate it lazily\n  : cb => (promise || (promise = Promise.resolve()))\n    .then(cb)\n    .catch(err => setTimeout(() => { throw err }, 0))\n"]}}