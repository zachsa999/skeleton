{"code":"(()=>{\n\"use strict\";var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});const utils=require(\"./utils\");module.exports=(ast,options={})=>{let stringify=__name((node,parent={})=>{let invalidBlock=options.escapeInvalid&&utils.isInvalidBrace(parent);let invalidNode=node.invalid===true&&options.escapeInvalid===true;let output=\"\";if(node.value){if((invalidBlock||invalidNode)&&utils.isOpenOrClose(node)){return\"\\\\\"+node.value}return node.value}if(node.value){return node.value}if(node.nodes){for(let child of node.nodes){output+=stringify(child)}}return output},\"stringify\");return stringify(ast)};\n})()\n","warnings":[],"map":{"version":3,"mappings":";+HAEA,MAAM,MAAQ,QAAQ,SAAS,EAE/B,OAAO,QAAU,CAAC,IAAK,QAAU,CAAC,IAAM,CACtC,IAAI,UAAY,QAAC,KAAM,OAAS,CAAC,IAAM,CACrC,IAAI,aAAe,QAAQ,eAAiB,MAAM,eAAe,MAAM,EACvE,IAAI,YAAc,KAAK,UAAY,MAAQ,QAAQ,gBAAkB,KACrE,IAAI,OAAS,GAEb,GAAI,KAAK,MAAO,CACd,IAAK,cAAgB,cAAgB,MAAM,cAAc,IAAI,EAAG,CAC9D,MAAO,KAAO,KAAK,KACrB,CACA,OAAO,KAAK,KACd,CAEA,GAAI,KAAK,MAAO,CACd,OAAO,KAAK,KACd,CAEA,GAAI,KAAK,MAAO,CACd,QAAS,SAAS,KAAK,MAAO,CAC5B,QAAU,UAAU,KAAK,CAC3B,CACF,CACA,OAAO,MACT,EAtBgB,aAwBhB,OAAO,UAAU,GAAG,CACtB","names":[],"sources":["/root/projects/zachw-i/packages/plugin/node_modules/.pnpm/braces@3.0.2/node_modules/braces/lib/stringify.js"],"sourcesContent":["'use strict';\n\nconst utils = require('./utils');\n\nmodule.exports = (ast, options = {}) => {\n  let stringify = (node, parent = {}) => {\n    let invalidBlock = options.escapeInvalid && utils.isInvalidBrace(parent);\n    let invalidNode = node.invalid === true && options.escapeInvalid === true;\n    let output = '';\n\n    if (node.value) {\n      if ((invalidBlock || invalidNode) && utils.isOpenOrClose(node)) {\n        return '\\\\' + node.value;\n      }\n      return node.value;\n    }\n\n    if (node.value) {\n      return node.value;\n    }\n\n    if (node.nodes) {\n      for (let child of node.nodes) {\n        output += stringify(child);\n      }\n    }\n    return output;\n  };\n\n  return stringify(ast);\n};\n\n"]}}