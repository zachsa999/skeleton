{"code":"(()=>{\n\"use strict\";var __create=Object.create;var __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __getProtoOf=Object.getPrototypeOf;var __hasOwnProp=Object.prototype.hasOwnProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});var __export=(target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:true})};var __copyProps=(to,from,except,desc)=>{if(from&&typeof from===\"object\"||typeof from===\"function\"){for(let key of __getOwnPropNames(from))if(!__hasOwnProp.call(to,key)&&key!==except)__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable})}return to};var __toESM=(mod,isNodeMode,target)=>(target=mod!=null?__create(__getProtoOf(mod)):{},__copyProps(isNodeMode||!mod||!mod.__esModule?__defProp(target,\"default\",{value:mod,enumerable:true}):target,mod));var __toCommonJS=mod=>__copyProps(__defProp({},\"__esModule\",{value:true}),mod);var core_exports={};__export(core_exports,{coreConfig:()=>coreConfig,corePlugin:()=>corePlugin,coreUtilities:()=>coreUtilities,getSkeletonClasses:()=>getSkeletonClasses});module.exports=__toCommonJS(core_exports);var import_plugin=__toESM(require(\"tailwindcss/plugin.js\"));var import_colors=__toESM(require(\"./colors.js\"));var import_backgrounds=__toESM(require(\"./tokens/backgrounds.js\"));var import_borders=__toESM(require(\"./tokens/borders.js\"));var import_border_radius=__toESM(require(\"./tokens/border-radius.js\"));var import_fills=__toESM(require(\"./tokens/fills.js\"));var import_text=__toESM(require(\"./tokens/text.js\"));var import_rings=__toESM(require(\"./tokens/rings.js\"));const coreUtilities={...(0,import_backgrounds.default)(),...(0,import_borders.default)(),...(0,import_border_radius.default)(),...(0,import_fills.default)(),...(0,import_text.default)(),...(0,import_rings.default)()};const coreConfig={theme:{extend:{colors:(0,import_colors.default)()}}};function getSkeletonClasses(){try{const{components,base}=require(\"./generated/generated-classes.js\");if(typeof components!==\"object\"||typeof base!==\"object\"){console.error(\"Failed to load Skeleton classes\");process.exitCode=1}return{components,base}}catch{console.error(\"generated-classes.js hasn't generated yet\")}return{components:void 0,base:void 0}}__name(getSkeletonClasses,\"getSkeletonClasses\");const corePlugin=(0,import_plugin.default)(({addUtilities})=>{addUtilities(coreUtilities)},coreConfig);\n})()\n","warnings":[],"map":{"version":3,"mappings":";8/BAAA,qNAKA,kBAAmB,0CAGnB,kBAAwB,gCAExB,uBAA8B,4CAC9B,mBAA0B,wCAC1B,yBAA+B,8CAC/B,iBAAwB,sCACxB,gBAAuB,qCACvB,iBAAwB,sCAEjB,MAAM,cAAgB,CAE5B,MAAG,4BAAkB,EACrB,MAAG,wBAAc,EACjB,MAAG,8BAAmB,EACtB,MAAG,sBAAY,EACf,MAAG,qBAAW,EACd,MAAG,sBAAY,CAChB,EAEO,MAAM,WAAa,CACzB,MAAO,CACN,OAAQ,CAEP,UAAQ,uBAAY,CACrB,CACD,CACD,EAIO,SAAS,oBAAqB,CAEpC,GAAI,CACH,KAAM,CAAE,WAAY,IAAK,EAAI,QAAQ,kCAAkC,EAEvE,GAAI,OAAO,aAAe,UAAY,OAAO,OAAS,SAAU,CAC/D,QAAQ,MAAM,iCAAiC,EAC/C,QAAQ,SAAW,CACpB,CAEA,MAAO,CAAE,WAAY,IAAK,CAC3B,MAAE,CACD,QAAQ,MAAM,2CAA2C,CAC1D,CAEA,MAAO,CAAE,WAAY,OAAW,KAAM,MAAU,CACjD,CAhBgB,gDAkBT,MAAM,cAAa,uBAAO,CAAC,CAAE,YAAa,IAAM,CACtD,aAAa,aAAa,CAC3B,EAAG,UAAU","names":[],"sources":["/root/projects/zachw-i/packages/plugin/src/tailwind/core.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-var-requires */\n// The Skeleton Tailwind Plugin\n// Tailwind Docs: https://tailwindcss.com/docs/plugins\n// Skeleton Docs: https://www.skeleton.dev/docs/get-started\n\nimport plugin from 'tailwindcss/plugin.js';\n\n// Skeleton Theme Modules\nimport themeColors from './colors.js';\n// Skeleton Design Token Modules\nimport tokensBackgrounds from './tokens/backgrounds.js';\nimport tokensBorders from './tokens/borders.js';\nimport tokensBorderRadius from './tokens/border-radius.js';\nimport tokensFills from './tokens/fills.js';\nimport tokensText from './tokens/text.js';\nimport tokensRings from './tokens/rings.js';\n\nexport const coreUtilities = {\n\t// Implement Skeleton design token classes\n\t...tokensBackgrounds(),\n\t...tokensBorders(),\n\t...tokensBorderRadius(),\n\t...tokensFills(),\n\t...tokensText(),\n\t...tokensRings()\n};\n\nexport const coreConfig = {\n\ttheme: {\n\t\textend: {\n\t\t\t// Implement Skeleton theme colors\n\t\t\tcolors: themeColors()\n\t\t}\n\t}\n};\n\n// export const coreClasses = getSkeletonClasses();\n\nexport function getSkeletonClasses() {\n\t// try/catch because it will throw when generated-classes.js isn't generated yet\n\ttry {\n\t\tconst { components, base } = require('./generated/generated-classes.js');\n\n\t\tif (typeof components !== 'object' || typeof base !== 'object') {\n\t\t\tconsole.error('Failed to load Skeleton classes');\n\t\t\tprocess.exitCode = 1;\n\t\t}\n\n\t\treturn { components, base };\n\t} catch {\n\t\tconsole.error(\"generated-classes.js hasn't generated yet\");\n\t}\n\n\treturn { components: undefined, base: undefined };\n}\n\nexport const corePlugin = plugin(({ addUtilities }) => {\n\taddUtilities(coreUtilities);\n}, coreConfig);\n"]}}