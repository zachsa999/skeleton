{"code":"(()=>{\n\"use strict\";var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});Object.defineProperty(exports,\"__esModule\",{value:true});const path=require(\"path\");const fsStat=require(\"@nodelib/fs.stat\");const utils=require(\"../utils\");class Reader{constructor(_settings){this._settings=_settings;this._fsStatSettings=new fsStat.Settings({followSymbolicLink:this._settings.followSymbolicLinks,fs:this._settings.fs,throwErrorOnBrokenSymbolicLink:this._settings.followSymbolicLinks})}_getFullEntryPath(filepath){return path.resolve(this._settings.cwd,filepath)}_makeEntry(stats,pattern){const entry={name:pattern,path:pattern,dirent:utils.fs.createDirentFromStats(pattern,stats)};if(this._settings.stats){entry.stats=stats}return entry}_isFatalError(error){return!utils.errno.isEnoentCodeError(error)&&!this._settings.suppressErrors}}__name(Reader,\"Reader\");exports.default=Reader;\n})()\n","warnings":[],"map":{"version":3,"mappings":";+HACA,OAAO,eAAe,QAAS,aAAc,CAAE,MAAO,IAAK,CAAC,EAC5D,MAAM,KAAO,QAAQ,MAAM,EAC3B,MAAM,OAAS,QAAQ,kBAAkB,EACzC,MAAM,MAAQ,QAAQ,UAAU,EAChC,MAAM,MAAO,CACT,YAAY,UAAW,CACnB,KAAK,UAAY,UACjB,KAAK,gBAAkB,IAAI,OAAO,SAAS,CACvC,mBAAoB,KAAK,UAAU,oBACnC,GAAI,KAAK,UAAU,GACnB,+BAAgC,KAAK,UAAU,mBACnD,CAAC,CACL,CACA,kBAAkB,SAAU,CACxB,OAAO,KAAK,QAAQ,KAAK,UAAU,IAAK,QAAQ,CACpD,CACA,WAAW,MAAO,QAAS,CACvB,MAAM,MAAQ,CACV,KAAM,QACN,KAAM,QACN,OAAQ,MAAM,GAAG,sBAAsB,QAAS,KAAK,CACzD,EACA,GAAI,KAAK,UAAU,MAAO,CACtB,MAAM,MAAQ,KAClB,CACA,OAAO,KACX,CACA,cAAc,MAAO,CACjB,MAAO,CAAC,MAAM,MAAM,kBAAkB,KAAK,GAAK,CAAC,KAAK,UAAU,cACpE,CACJ,CA1BM,wBA2BN,QAAQ,QAAU","names":[],"sources":["/root/projects/zachw-i/packages/plugin/node_modules/.pnpm/fast-glob@3.2.12/node_modules/fast-glob/out/readers/reader.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst path = require(\"path\");\r\nconst fsStat = require(\"@nodelib/fs.stat\");\r\nconst utils = require(\"../utils\");\r\nclass Reader {\r\n    constructor(_settings) {\r\n        this._settings = _settings;\r\n        this._fsStatSettings = new fsStat.Settings({\r\n            followSymbolicLink: this._settings.followSymbolicLinks,\r\n            fs: this._settings.fs,\r\n            throwErrorOnBrokenSymbolicLink: this._settings.followSymbolicLinks\r\n        });\r\n    }\r\n    _getFullEntryPath(filepath) {\r\n        return path.resolve(this._settings.cwd, filepath);\r\n    }\r\n    _makeEntry(stats, pattern) {\r\n        const entry = {\r\n            name: pattern,\r\n            path: pattern,\r\n            dirent: utils.fs.createDirentFromStats(pattern, stats)\r\n        };\r\n        if (this._settings.stats) {\r\n            entry.stats = stats;\r\n        }\r\n        return entry;\r\n    }\r\n    _isFatalError(error) {\r\n        return !utils.errno.isEnoentCodeError(error) && !this._settings.suppressErrors;\r\n    }\r\n}\r\nexports.default = Reader;\r\n"]}}