{"code":"(()=>{\n\"use strict\";var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});var isGlob=require(\"is-glob\");var pathPosixDirname=require(\"path\").posix.dirname;var isWin32=require(\"os\").platform()===\"win32\";var slash=\"/\";var backslash=/\\\\/g;var enclosure=/[\\{\\[].*[\\}\\]]$/;var globby=/(^|[^\\\\])([\\{\\[]|\\([^\\)]+$)/;var escaped=/\\\\([\\!\\*\\?\\|\\[\\]\\(\\)\\{\\}])/g;module.exports=__name(function globParent(str,opts){var options=Object.assign({flipBackslashes:true},opts);if(options.flipBackslashes&&isWin32&&str.indexOf(slash)<0){str=str.replace(backslash,slash)}if(enclosure.test(str)){str+=slash}str+=\"a\";do{str=pathPosixDirname(str)}while(isGlob(str)||globby.test(str));return str.replace(escaped,\"$1\")},\"globParent\");\n})()\n","warnings":[],"map":{"version":3,"mappings":";+HAEA,IAAI,OAAS,QAAQ,SAAS,EAC9B,IAAI,iBAAmB,QAAQ,MAAM,EAAE,MAAM,QAC7C,IAAI,QAAU,QAAQ,IAAI,EAAE,SAAS,IAAM,QAE3C,IAAI,MAAQ,IACZ,IAAI,UAAY,MAChB,IAAI,UAAY,kBAChB,IAAI,OAAS,8BACb,IAAI,QAAU,8BAQd,OAAO,QAAU,gBAAS,WAAW,IAAK,KAAM,CAC9C,IAAI,QAAU,OAAO,OAAO,CAAE,gBAAiB,IAAK,EAAG,IAAI,EAG3D,GAAI,QAAQ,iBAAmB,SAAW,IAAI,QAAQ,KAAK,EAAI,EAAG,CAChE,IAAM,IAAI,QAAQ,UAAW,KAAK,CACpC,CAGA,GAAI,UAAU,KAAK,GAAG,EAAG,CACvB,KAAO,KACT,CAGA,KAAO,IAGP,EAAG,CACD,IAAM,iBAAiB,GAAG,CAC5B,OAAS,OAAO,GAAG,GAAK,OAAO,KAAK,GAAG,GAGvC,OAAO,IAAI,QAAQ,QAAS,IAAI,CAClC,EAvBiB","names":[],"sources":["/root/projects/zachw-i/packages/plugin/node_modules/.pnpm/glob-parent@5.1.2/node_modules/glob-parent/index.js"],"sourcesContent":["'use strict';\n\nvar isGlob = require('is-glob');\nvar pathPosixDirname = require('path').posix.dirname;\nvar isWin32 = require('os').platform() === 'win32';\n\nvar slash = '/';\nvar backslash = /\\\\/g;\nvar enclosure = /[\\{\\[].*[\\}\\]]$/;\nvar globby = /(^|[^\\\\])([\\{\\[]|\\([^\\)]+$)/;\nvar escaped = /\\\\([\\!\\*\\?\\|\\[\\]\\(\\)\\{\\}])/g;\n\n/**\n * @param {string} str\n * @param {Object} opts\n * @param {boolean} [opts.flipBackslashes=true]\n * @returns {string}\n */\nmodule.exports = function globParent(str, opts) {\n  var options = Object.assign({ flipBackslashes: true }, opts);\n\n  // flip windows path separators\n  if (options.flipBackslashes && isWin32 && str.indexOf(slash) < 0) {\n    str = str.replace(backslash, slash);\n  }\n\n  // special case for strings ending in enclosure containing path separator\n  if (enclosure.test(str)) {\n    str += slash;\n  }\n\n  // preserves full path in case of trailing path separator\n  str += 'a';\n\n  // remove path parts that are globby\n  do {\n    str = pathPosixDirname(str);\n  } while (isGlob(str) || globby.test(str));\n\n  // remove escape chars and return result\n  return str.replace(escaped, '$1');\n};\n"]}}