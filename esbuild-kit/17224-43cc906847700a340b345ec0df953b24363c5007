{"code":"(()=>{\n\"use strict\";var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});var __spreadArrays=exports&&exports.__spreadArrays||function(){for(var s=0,i=0,il=arguments.length;i<il;i++)s+=arguments[i].length;for(var r=Array(s),k=0,i=0;i<il;i++)for(var a=arguments[i],j=0,jl=a.length;j<jl;j++,k++)r[k]=a[j];return r};Object.defineProperty(exports,\"__esModule\",{value:true});exports.Checker=exports.createCheckers=void 0;var types_1=require(\"./types\");var util_1=require(\"./util\");var types_2=require(\"./types\");Object.defineProperty(exports,\"TArray\",{enumerable:true,get:function(){return types_2.TArray}});Object.defineProperty(exports,\"TEnumType\",{enumerable:true,get:function(){return types_2.TEnumType}});Object.defineProperty(exports,\"TEnumLiteral\",{enumerable:true,get:function(){return types_2.TEnumLiteral}});Object.defineProperty(exports,\"TFunc\",{enumerable:true,get:function(){return types_2.TFunc}});Object.defineProperty(exports,\"TIface\",{enumerable:true,get:function(){return types_2.TIface}});Object.defineProperty(exports,\"TLiteral\",{enumerable:true,get:function(){return types_2.TLiteral}});Object.defineProperty(exports,\"TName\",{enumerable:true,get:function(){return types_2.TName}});Object.defineProperty(exports,\"TOptional\",{enumerable:true,get:function(){return types_2.TOptional}});Object.defineProperty(exports,\"TParam\",{enumerable:true,get:function(){return types_2.TParam}});Object.defineProperty(exports,\"TParamList\",{enumerable:true,get:function(){return types_2.TParamList}});Object.defineProperty(exports,\"TProp\",{enumerable:true,get:function(){return types_2.TProp}});Object.defineProperty(exports,\"TTuple\",{enumerable:true,get:function(){return types_2.TTuple}});Object.defineProperty(exports,\"TType\",{enumerable:true,get:function(){return types_2.TType}});Object.defineProperty(exports,\"TUnion\",{enumerable:true,get:function(){return types_2.TUnion}});Object.defineProperty(exports,\"TIntersection\",{enumerable:true,get:function(){return types_2.TIntersection}});Object.defineProperty(exports,\"array\",{enumerable:true,get:function(){return types_2.array}});Object.defineProperty(exports,\"enumlit\",{enumerable:true,get:function(){return types_2.enumlit}});Object.defineProperty(exports,\"enumtype\",{enumerable:true,get:function(){return types_2.enumtype}});Object.defineProperty(exports,\"func\",{enumerable:true,get:function(){return types_2.func}});Object.defineProperty(exports,\"iface\",{enumerable:true,get:function(){return types_2.iface}});Object.defineProperty(exports,\"lit\",{enumerable:true,get:function(){return types_2.lit}});Object.defineProperty(exports,\"name\",{enumerable:true,get:function(){return types_2.name}});Object.defineProperty(exports,\"opt\",{enumerable:true,get:function(){return types_2.opt}});Object.defineProperty(exports,\"param\",{enumerable:true,get:function(){return types_2.param}});Object.defineProperty(exports,\"tuple\",{enumerable:true,get:function(){return types_2.tuple}});Object.defineProperty(exports,\"union\",{enumerable:true,get:function(){return types_2.union}});Object.defineProperty(exports,\"intersection\",{enumerable:true,get:function(){return types_2.intersection}});Object.defineProperty(exports,\"BasicType\",{enumerable:true,get:function(){return types_2.BasicType}});var util_2=require(\"./util\");Object.defineProperty(exports,\"VError\",{enumerable:true,get:function(){return util_2.VError}});function createCheckers(){var typeSuite=[];for(var _i=0;_i<arguments.length;_i++){typeSuite[_i]=arguments[_i]}var fullSuite=Object.assign.apply(Object,__spreadArrays([{},types_1.basicTypes],typeSuite));var checkers={};for(var _a=0,typeSuite_1=typeSuite;_a<typeSuite_1.length;_a++){var suite_1=typeSuite_1[_a];for(var _b=0,_c=Object.keys(suite_1);_b<_c.length;_b++){var name=_c[_b];checkers[name]=new Checker(fullSuite,suite_1[name])}}return checkers}__name(createCheckers,\"createCheckers\");exports.createCheckers=createCheckers;var Checker=function(){function Checker2(suite,ttype,_path){if(_path===void 0){_path=\"value\"}this.suite=suite;this.ttype=ttype;this._path=_path;this.props=new Map;if(ttype instanceof types_1.TIface){for(var _i=0,_a=ttype.props;_i<_a.length;_i++){var p=_a[_i];this.props.set(p.name,p.ttype)}}this.checkerPlain=this.ttype.getChecker(suite,false);this.checkerStrict=this.ttype.getChecker(suite,true)}__name(Checker2,\"Checker\");Checker2.prototype.setReportedPath=function(path){this._path=path};Checker2.prototype.check=function(value){return this._doCheck(this.checkerPlain,value)};Checker2.prototype.test=function(value){return this.checkerPlain(value,new util_1.NoopContext)};Checker2.prototype.validate=function(value){return this._doValidate(this.checkerPlain,value)};Checker2.prototype.strictCheck=function(value){return this._doCheck(this.checkerStrict,value)};Checker2.prototype.strictTest=function(value){return this.checkerStrict(value,new util_1.NoopContext)};Checker2.prototype.strictValidate=function(value){return this._doValidate(this.checkerStrict,value)};Checker2.prototype.getProp=function(prop){var ttype=this.props.get(prop);if(!ttype){throw new Error(\"Type has no property \"+prop)}return new Checker2(this.suite,ttype,this._path+\".\"+prop)};Checker2.prototype.methodArgs=function(methodName){var tfunc=this._getMethod(methodName);return new Checker2(this.suite,tfunc.paramList)};Checker2.prototype.methodResult=function(methodName){var tfunc=this._getMethod(methodName);return new Checker2(this.suite,tfunc.result)};Checker2.prototype.getArgs=function(){if(!(this.ttype instanceof types_1.TFunc)){throw new Error(\"getArgs() applied to non-function\")}return new Checker2(this.suite,this.ttype.paramList)};Checker2.prototype.getResult=function(){if(!(this.ttype instanceof types_1.TFunc)){throw new Error(\"getResult() applied to non-function\")}return new Checker2(this.suite,this.ttype.result)};Checker2.prototype.getType=function(){return this.ttype};Checker2.prototype._doCheck=function(checkerFunc,value){var noopCtx=new util_1.NoopContext;if(!checkerFunc(value,noopCtx)){var detailCtx=new util_1.DetailContext;checkerFunc(value,detailCtx);throw detailCtx.getError(this._path)}};Checker2.prototype._doValidate=function(checkerFunc,value){var noopCtx=new util_1.NoopContext;if(checkerFunc(value,noopCtx)){return null}var detailCtx=new util_1.DetailContext;checkerFunc(value,detailCtx);return detailCtx.getErrorDetail(this._path)};Checker2.prototype._getMethod=function(methodName){var ttype=this.props.get(methodName);if(!ttype){throw new Error(\"Type has no property \"+methodName)}if(!(ttype instanceof types_1.TFunc)){throw new Error(\"Property \"+methodName+\" is not a method\")}return ttype};return Checker2}();exports.Checker=Checker;\n})()\n","warnings":[],"map":{"version":3,"mappings":"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","names":["Checker"],"sources":["/root/projects/zachw-i/packages/plugin/node_modules/.pnpm/ts-interface-checker@0.1.13/node_modules/ts-interface-checker/dist/index.js"],"sourcesContent":["\"use strict\";\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Checker = exports.createCheckers = void 0;\nvar types_1 = require(\"./types\");\nvar util_1 = require(\"./util\");\n/**\n * Export functions used to define interfaces.\n */\nvar types_2 = require(\"./types\");\nObject.defineProperty(exports, \"TArray\", { enumerable: true, get: function () { return types_2.TArray; } });\nObject.defineProperty(exports, \"TEnumType\", { enumerable: true, get: function () { return types_2.TEnumType; } });\nObject.defineProperty(exports, \"TEnumLiteral\", { enumerable: true, get: function () { return types_2.TEnumLiteral; } });\nObject.defineProperty(exports, \"TFunc\", { enumerable: true, get: function () { return types_2.TFunc; } });\nObject.defineProperty(exports, \"TIface\", { enumerable: true, get: function () { return types_2.TIface; } });\nObject.defineProperty(exports, \"TLiteral\", { enumerable: true, get: function () { return types_2.TLiteral; } });\nObject.defineProperty(exports, \"TName\", { enumerable: true, get: function () { return types_2.TName; } });\nObject.defineProperty(exports, \"TOptional\", { enumerable: true, get: function () { return types_2.TOptional; } });\nObject.defineProperty(exports, \"TParam\", { enumerable: true, get: function () { return types_2.TParam; } });\nObject.defineProperty(exports, \"TParamList\", { enumerable: true, get: function () { return types_2.TParamList; } });\nObject.defineProperty(exports, \"TProp\", { enumerable: true, get: function () { return types_2.TProp; } });\nObject.defineProperty(exports, \"TTuple\", { enumerable: true, get: function () { return types_2.TTuple; } });\nObject.defineProperty(exports, \"TType\", { enumerable: true, get: function () { return types_2.TType; } });\nObject.defineProperty(exports, \"TUnion\", { enumerable: true, get: function () { return types_2.TUnion; } });\nObject.defineProperty(exports, \"TIntersection\", { enumerable: true, get: function () { return types_2.TIntersection; } });\nObject.defineProperty(exports, \"array\", { enumerable: true, get: function () { return types_2.array; } });\nObject.defineProperty(exports, \"enumlit\", { enumerable: true, get: function () { return types_2.enumlit; } });\nObject.defineProperty(exports, \"enumtype\", { enumerable: true, get: function () { return types_2.enumtype; } });\nObject.defineProperty(exports, \"func\", { enumerable: true, get: function () { return types_2.func; } });\nObject.defineProperty(exports, \"iface\", { enumerable: true, get: function () { return types_2.iface; } });\nObject.defineProperty(exports, \"lit\", { enumerable: true, get: function () { return types_2.lit; } });\nObject.defineProperty(exports, \"name\", { enumerable: true, get: function () { return types_2.name; } });\nObject.defineProperty(exports, \"opt\", { enumerable: true, get: function () { return types_2.opt; } });\nObject.defineProperty(exports, \"param\", { enumerable: true, get: function () { return types_2.param; } });\nObject.defineProperty(exports, \"tuple\", { enumerable: true, get: function () { return types_2.tuple; } });\nObject.defineProperty(exports, \"union\", { enumerable: true, get: function () { return types_2.union; } });\nObject.defineProperty(exports, \"intersection\", { enumerable: true, get: function () { return types_2.intersection; } });\nObject.defineProperty(exports, \"BasicType\", { enumerable: true, get: function () { return types_2.BasicType; } });\nvar util_2 = require(\"./util\");\nObject.defineProperty(exports, \"VError\", { enumerable: true, get: function () { return util_2.VError; } });\n/**\n * Takes one of more type suites (e.g. a module generated by `ts-interface-builder`), and combines\n * them into a suite of interface checkers. If a type is used by name, that name should be present\n * among the passed-in type suites.\n *\n * The returned object maps type names to Checker objects.\n */\nfunction createCheckers() {\n    var typeSuite = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        typeSuite[_i] = arguments[_i];\n    }\n    var fullSuite = Object.assign.apply(Object, __spreadArrays([{}, types_1.basicTypes], typeSuite));\n    var checkers = {};\n    for (var _a = 0, typeSuite_1 = typeSuite; _a < typeSuite_1.length; _a++) {\n        var suite_1 = typeSuite_1[_a];\n        for (var _b = 0, _c = Object.keys(suite_1); _b < _c.length; _b++) {\n            var name = _c[_b];\n            checkers[name] = new Checker(fullSuite, suite_1[name]);\n        }\n    }\n    return checkers;\n}\nexports.createCheckers = createCheckers;\n/**\n * Checker implements validation of objects, and also includes accessors to validate method calls.\n * Checkers should be created using `createCheckers()`.\n */\nvar Checker = /** @class */ (function () {\n    // Create checkers by using `createCheckers()` function.\n    function Checker(suite, ttype, _path) {\n        if (_path === void 0) { _path = 'value'; }\n        this.suite = suite;\n        this.ttype = ttype;\n        this._path = _path;\n        this.props = new Map();\n        if (ttype instanceof types_1.TIface) {\n            for (var _i = 0, _a = ttype.props; _i < _a.length; _i++) {\n                var p = _a[_i];\n                this.props.set(p.name, p.ttype);\n            }\n        }\n        this.checkerPlain = this.ttype.getChecker(suite, false);\n        this.checkerStrict = this.ttype.getChecker(suite, true);\n    }\n    /**\n     * Set the path to report in errors, instead of the default \"value\". (E.g. if the Checker is for\n     * a \"person\" interface, set path to \"person\" to report e.g. \"person.name is not a string\".)\n     */\n    Checker.prototype.setReportedPath = function (path) {\n        this._path = path;\n    };\n    /**\n     * Check that the given value satisfies this checker's type, or throw Error.\n     */\n    Checker.prototype.check = function (value) { return this._doCheck(this.checkerPlain, value); };\n    /**\n     * A fast check for whether or not the given value satisfies this Checker's type. This returns\n     * true or false, does not produce an error message, and is fast both on success and on failure.\n     */\n    Checker.prototype.test = function (value) {\n        return this.checkerPlain(value, new util_1.NoopContext());\n    };\n    /**\n     * Returns an error object describing the errors if the given value does not satisfy this\n     * Checker's type, or null if it does.\n     */\n    Checker.prototype.validate = function (value) {\n        return this._doValidate(this.checkerPlain, value);\n    };\n    /**\n     * Check that the given value satisfies this checker's type strictly. This checks that objects\n     * and tuples have no extra members. Note that this prevents backward compatibility, so usually\n     * a plain check() is more appropriate.\n     */\n    Checker.prototype.strictCheck = function (value) { return this._doCheck(this.checkerStrict, value); };\n    /**\n     * A fast strict check for whether or not the given value satisfies this Checker's type. Returns\n     * true or false, does not produce an error message, and is fast both on success and on failure.\n     */\n    Checker.prototype.strictTest = function (value) {\n        return this.checkerStrict(value, new util_1.NoopContext());\n    };\n    /**\n     * Returns an error object describing the errors if the given value does not satisfy this\n     * Checker's type strictly, or null if it does.\n     */\n    Checker.prototype.strictValidate = function (value) {\n        return this._doValidate(this.checkerStrict, value);\n    };\n    /**\n     * If this checker is for an interface, returns a Checker for the type required for the given\n     * property of this interface.\n     */\n    Checker.prototype.getProp = function (prop) {\n        var ttype = this.props.get(prop);\n        if (!ttype) {\n            throw new Error(\"Type has no property \" + prop);\n        }\n        return new Checker(this.suite, ttype, this._path + \".\" + prop);\n    };\n    /**\n     * If this checker is for an interface, returns a Checker for the argument-list required to call\n     * the given method of this interface. E.g. if this Checker is for the interface:\n     *    interface Foo {\n     *      find(s: string, pos?: number): number;\n     *    }\n     * Then methodArgs(\"find\").check(...) will succeed for [\"foo\"] and [\"foo\", 3], but not for [17].\n     */\n    Checker.prototype.methodArgs = function (methodName) {\n        var tfunc = this._getMethod(methodName);\n        return new Checker(this.suite, tfunc.paramList);\n    };\n    /**\n     * If this checker is for an interface, returns a Checker for the return value of the given\n     * method of this interface.\n     */\n    Checker.prototype.methodResult = function (methodName) {\n        var tfunc = this._getMethod(methodName);\n        return new Checker(this.suite, tfunc.result);\n    };\n    /**\n     * If this checker is for a function, returns a Checker for its argument-list.\n     */\n    Checker.prototype.getArgs = function () {\n        if (!(this.ttype instanceof types_1.TFunc)) {\n            throw new Error(\"getArgs() applied to non-function\");\n        }\n        return new Checker(this.suite, this.ttype.paramList);\n    };\n    /**\n     * If this checker is for a function, returns a Checker for its result.\n     */\n    Checker.prototype.getResult = function () {\n        if (!(this.ttype instanceof types_1.TFunc)) {\n            throw new Error(\"getResult() applied to non-function\");\n        }\n        return new Checker(this.suite, this.ttype.result);\n    };\n    /**\n     * Return the type for which this is a checker.\n     */\n    Checker.prototype.getType = function () {\n        return this.ttype;\n    };\n    /**\n     * Actual implementation of check() and strictCheck().\n     */\n    Checker.prototype._doCheck = function (checkerFunc, value) {\n        var noopCtx = new util_1.NoopContext();\n        if (!checkerFunc(value, noopCtx)) {\n            var detailCtx = new util_1.DetailContext();\n            checkerFunc(value, detailCtx);\n            throw detailCtx.getError(this._path);\n        }\n    };\n    Checker.prototype._doValidate = function (checkerFunc, value) {\n        var noopCtx = new util_1.NoopContext();\n        if (checkerFunc(value, noopCtx)) {\n            return null;\n        }\n        var detailCtx = new util_1.DetailContext();\n        checkerFunc(value, detailCtx);\n        return detailCtx.getErrorDetail(this._path);\n    };\n    Checker.prototype._getMethod = function (methodName) {\n        var ttype = this.props.get(methodName);\n        if (!ttype) {\n            throw new Error(\"Type has no property \" + methodName);\n        }\n        if (!(ttype instanceof types_1.TFunc)) {\n            throw new Error(\"Property \" + methodName + \" is not a method\");\n        }\n        return ttype;\n    };\n    return Checker;\n}());\nexports.Checker = Checker;\n"]}}