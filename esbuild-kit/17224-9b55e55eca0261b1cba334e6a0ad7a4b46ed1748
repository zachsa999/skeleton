{"code":"(()=>{\n\"use strict\";var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});exports.__esModule=true;exports.LinesAndColumns=void 0;var LF=\"\\n\";var CR=\"\\r\";var LinesAndColumns=function(){function LinesAndColumns2(string){this.string=string;var offsets=[0];for(var offset=0;offset<string.length;){switch(string[offset]){case LF:offset+=LF.length;offsets.push(offset);break;case CR:offset+=CR.length;if(string[offset]===LF){offset+=LF.length}offsets.push(offset);break;default:offset++;break}}this.offsets=offsets}__name(LinesAndColumns2,\"LinesAndColumns\");LinesAndColumns2.prototype.locationForIndex=function(index){if(index<0||index>this.string.length){return null}var line=0;var offsets=this.offsets;while(offsets[line+1]<=index){line++}var column=index-offsets[line];return{line,column}};LinesAndColumns2.prototype.indexForLocation=function(location){var line=location.line,column=location.column;if(line<0||line>=this.offsets.length){return null}if(column<0||column>this.lengthOfLine(line)){return null}return this.offsets[line]+column};LinesAndColumns2.prototype.lengthOfLine=function(line){var offset=this.offsets[line];var nextOffset=line===this.offsets.length-1?this.string.length:this.offsets[line+1];return nextOffset-offset};return LinesAndColumns2}();exports.LinesAndColumns=LinesAndColumns;exports[\"default\"]=LinesAndColumns;\n})()\n","warnings":[],"map":{"version":3,"mappings":";+HACA,QAAQ,WAAa,KACrB,QAAQ,gBAAkB,OAC1B,IAAI,GAAK,KACT,IAAI,GAAK,KACT,IAAI,gBAAiC,UAAY,CAC7C,SAASA,iBAAgB,OAAQ,CAC7B,KAAK,OAAS,OACd,IAAI,QAAU,CAAC,CAAC,EAChB,QAAS,OAAS,EAAG,OAAS,OAAO,QAAS,CAC1C,OAAQ,OAAO,MAAM,EAAG,CACpB,KAAK,GACD,QAAU,GAAG,OACb,QAAQ,KAAK,MAAM,EACnB,MACJ,KAAK,GACD,QAAU,GAAG,OACb,GAAI,OAAO,MAAM,IAAM,GAAI,CACvB,QAAU,GAAG,MACjB,CACA,QAAQ,KAAK,MAAM,EACnB,MACJ,QACI,SACA,KACR,CACJ,CACA,KAAK,QAAU,OACnB,CAtBS,2CAuBTA,iBAAgB,UAAU,iBAAmB,SAAU,MAAO,CAC1D,GAAI,MAAQ,GAAK,MAAQ,KAAK,OAAO,OAAQ,CACzC,OAAO,IACX,CACA,IAAI,KAAO,EACX,IAAI,QAAU,KAAK,QACnB,MAAO,QAAQ,KAAO,CAAC,GAAK,MAAO,CAC/B,MACJ,CACA,IAAI,OAAS,MAAQ,QAAQ,IAAI,EACjC,MAAO,CAAE,KAAY,MAAe,CACxC,EACAA,iBAAgB,UAAU,iBAAmB,SAAU,SAAU,CAC7D,IAAI,KAAO,SAAS,KAAM,OAAS,SAAS,OAC5C,GAAI,KAAO,GAAK,MAAQ,KAAK,QAAQ,OAAQ,CACzC,OAAO,IACX,CACA,GAAI,OAAS,GAAK,OAAS,KAAK,aAAa,IAAI,EAAG,CAChD,OAAO,IACX,CACA,OAAO,KAAK,QAAQ,IAAI,EAAI,MAChC,EACAA,iBAAgB,UAAU,aAAe,SAAU,KAAM,CACrD,IAAI,OAAS,KAAK,QAAQ,IAAI,EAC9B,IAAI,WAAa,OAAS,KAAK,QAAQ,OAAS,EAC1C,KAAK,OAAO,OACZ,KAAK,QAAQ,KAAO,CAAC,EAC3B,OAAO,WAAa,MACxB,EACA,OAAOA,gBACX,EAAE,EACF,QAAQ,gBAAkB,gBAC1B,QAAQ,SAAS,EAAI","names":["LinesAndColumns"],"sources":["/root/projects/zachw-i/packages/plugin/node_modules/.pnpm/lines-and-columns@1.2.4/node_modules/lines-and-columns/build/index.js"],"sourcesContent":["\"use strict\";\nexports.__esModule = true;\nexports.LinesAndColumns = void 0;\nvar LF = '\\n';\nvar CR = '\\r';\nvar LinesAndColumns = /** @class */ (function () {\n    function LinesAndColumns(string) {\n        this.string = string;\n        var offsets = [0];\n        for (var offset = 0; offset < string.length;) {\n            switch (string[offset]) {\n                case LF:\n                    offset += LF.length;\n                    offsets.push(offset);\n                    break;\n                case CR:\n                    offset += CR.length;\n                    if (string[offset] === LF) {\n                        offset += LF.length;\n                    }\n                    offsets.push(offset);\n                    break;\n                default:\n                    offset++;\n                    break;\n            }\n        }\n        this.offsets = offsets;\n    }\n    LinesAndColumns.prototype.locationForIndex = function (index) {\n        if (index < 0 || index > this.string.length) {\n            return null;\n        }\n        var line = 0;\n        var offsets = this.offsets;\n        while (offsets[line + 1] <= index) {\n            line++;\n        }\n        var column = index - offsets[line];\n        return { line: line, column: column };\n    };\n    LinesAndColumns.prototype.indexForLocation = function (location) {\n        var line = location.line, column = location.column;\n        if (line < 0 || line >= this.offsets.length) {\n            return null;\n        }\n        if (column < 0 || column > this.lengthOfLine(line)) {\n            return null;\n        }\n        return this.offsets[line] + column;\n    };\n    LinesAndColumns.prototype.lengthOfLine = function (line) {\n        var offset = this.offsets[line];\n        var nextOffset = line === this.offsets.length - 1\n            ? this.string.length\n            : this.offsets[line + 1];\n        return nextOffset - offset;\n    };\n    return LinesAndColumns;\n}());\nexports.LinesAndColumns = LinesAndColumns;\nexports[\"default\"] = LinesAndColumns;\n"]}}