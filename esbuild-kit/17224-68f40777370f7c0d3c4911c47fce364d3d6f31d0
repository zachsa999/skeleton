{"code":"(()=>{\n\"use strict\";var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});Object.defineProperty(exports,\"__esModule\",{value:true});var _types=require(\"../parser/tokenizer/types\");function getIdentifierNames(code,tokens){const names=[];for(const token of tokens){if(token.type===_types.TokenType.name){names.push(code.slice(token.start,token.end))}}return names}__name(getIdentifierNames,\"getIdentifierNames\");exports.default=getIdentifierNames;\n})()\n","warnings":[],"map":{"version":3,"mappings":";+HAAa,OAAO,eAAe,QAAS,aAAc,CAAC,MAAO,IAAI,CAAC,EACvE,IAAI,OAAS,QAAQ,2BAA2B,EAK/C,SAAS,mBAAmB,KAAM,OAAQ,CACzC,MAAM,MAAQ,CAAC,EACf,UAAW,SAAS,OAAQ,CAC1B,GAAI,MAAM,OAAS,OAAO,UAAU,KAAM,CACxC,MAAM,KAAK,KAAK,MAAM,MAAM,MAAO,MAAM,GAAG,CAAC,CAC/C,CACF,CACA,OAAO,KACT,CARU,gDAQR,QAAQ,QAAU","names":[],"sources":["/root/projects/zachw-i/packages/plugin/node_modules/.pnpm/sucrase@3.32.0/node_modules/sucrase/dist/util/getIdentifierNames.js"],"sourcesContent":["\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\nvar _types = require('../parser/tokenizer/types');\n\n/**\n * Get all identifier names in the code, in order, including duplicates.\n */\n function getIdentifierNames(code, tokens) {\n  const names = [];\n  for (const token of tokens) {\n    if (token.type === _types.TokenType.name) {\n      names.push(code.slice(token.start, token.end));\n    }\n  }\n  return names;\n} exports.default = getIdentifierNames;\n"]}}