{"code":"(()=>{\n\"use strict\";var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});Object.defineProperty(exports,\"__esModule\",{value:true});const utils=require(\"../../utils\");const partial_1=require(\"../matchers/partial\");class DeepFilter{constructor(_settings,_micromatchOptions){this._settings=_settings;this._micromatchOptions=_micromatchOptions}getFilter(basePath,positive,negative){const matcher=this._getMatcher(positive);const negativeRe=this._getNegativePatternsRe(negative);return entry=>this._filter(basePath,entry,matcher,negativeRe)}_getMatcher(patterns){return new partial_1.default(patterns,this._settings,this._micromatchOptions)}_getNegativePatternsRe(patterns){const affectDepthOfReadingPatterns=patterns.filter(utils.pattern.isAffectDepthOfReadingPattern);return utils.pattern.convertPatternsToRe(affectDepthOfReadingPatterns,this._micromatchOptions)}_filter(basePath,entry,matcher,negativeRe){if(this._isSkippedByDeep(basePath,entry.path)){return false}if(this._isSkippedSymbolicLink(entry)){return false}const filepath=utils.path.removeLeadingDotSegment(entry.path);if(this._isSkippedByPositivePatterns(filepath,matcher)){return false}return this._isSkippedByNegativePatterns(filepath,negativeRe)}_isSkippedByDeep(basePath,entryPath){if(this._settings.deep===Infinity){return false}return this._getEntryLevel(basePath,entryPath)>=this._settings.deep}_getEntryLevel(basePath,entryPath){const entryPathDepth=entryPath.split(\"/\").length;if(basePath===\"\"){return entryPathDepth}const basePathDepth=basePath.split(\"/\").length;return entryPathDepth-basePathDepth}_isSkippedSymbolicLink(entry){return!this._settings.followSymbolicLinks&&entry.dirent.isSymbolicLink()}_isSkippedByPositivePatterns(entryPath,matcher){return!this._settings.baseNameMatch&&!matcher.match(entryPath)}_isSkippedByNegativePatterns(entryPath,patternsRe){return!utils.pattern.matchAny(entryPath,patternsRe)}}__name(DeepFilter,\"DeepFilter\");exports.default=DeepFilter;\n})()\n","warnings":[],"map":{"version":3,"mappings":";+HACA,OAAO,eAAe,QAAS,aAAc,CAAE,MAAO,IAAK,CAAC,EAC5D,MAAM,MAAQ,QAAQ,aAAa,EACnC,MAAM,UAAY,QAAQ,qBAAqB,EAC/C,MAAM,UAAW,CACb,YAAY,UAAW,mBAAoB,CACvC,KAAK,UAAY,UACjB,KAAK,mBAAqB,kBAC9B,CACA,UAAU,SAAU,SAAU,SAAU,CACpC,MAAM,QAAU,KAAK,YAAY,QAAQ,EACzC,MAAM,WAAa,KAAK,uBAAuB,QAAQ,EACvD,OAAQ,OAAU,KAAK,QAAQ,SAAU,MAAO,QAAS,UAAU,CACvE,CACA,YAAY,SAAU,CAClB,OAAO,IAAI,UAAU,QAAQ,SAAU,KAAK,UAAW,KAAK,kBAAkB,CAClF,CACA,uBAAuB,SAAU,CAC7B,MAAM,6BAA+B,SAAS,OAAO,MAAM,QAAQ,6BAA6B,EAChG,OAAO,MAAM,QAAQ,oBAAoB,6BAA8B,KAAK,kBAAkB,CAClG,CACA,QAAQ,SAAU,MAAO,QAAS,WAAY,CAC1C,GAAI,KAAK,iBAAiB,SAAU,MAAM,IAAI,EAAG,CAC7C,MAAO,MACX,CACA,GAAI,KAAK,uBAAuB,KAAK,EAAG,CACpC,MAAO,MACX,CACA,MAAM,SAAW,MAAM,KAAK,wBAAwB,MAAM,IAAI,EAC9D,GAAI,KAAK,6BAA6B,SAAU,OAAO,EAAG,CACtD,MAAO,MACX,CACA,OAAO,KAAK,6BAA6B,SAAU,UAAU,CACjE,CACA,iBAAiB,SAAU,UAAW,CAIlC,GAAI,KAAK,UAAU,OAAS,SAAU,CAClC,MAAO,MACX,CACA,OAAO,KAAK,eAAe,SAAU,SAAS,GAAK,KAAK,UAAU,IACtE,CACA,eAAe,SAAU,UAAW,CAChC,MAAM,eAAiB,UAAU,MAAM,GAAG,EAAE,OAC5C,GAAI,WAAa,GAAI,CACjB,OAAO,cACX,CACA,MAAM,cAAgB,SAAS,MAAM,GAAG,EAAE,OAC1C,OAAO,eAAiB,aAC5B,CACA,uBAAuB,MAAO,CAC1B,MAAO,CAAC,KAAK,UAAU,qBAAuB,MAAM,OAAO,eAAe,CAC9E,CACA,6BAA6B,UAAW,QAAS,CAC7C,MAAO,CAAC,KAAK,UAAU,eAAiB,CAAC,QAAQ,MAAM,SAAS,CACpE,CACA,6BAA6B,UAAW,WAAY,CAChD,MAAO,CAAC,MAAM,QAAQ,SAAS,UAAW,UAAU,CACxD,CACJ,CAxDM,gCAyDN,QAAQ,QAAU","names":[],"sources":["/root/projects/zachw-i/packages/plugin/node_modules/.pnpm/fast-glob@3.2.12/node_modules/fast-glob/out/providers/filters/deep.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst utils = require(\"../../utils\");\r\nconst partial_1 = require(\"../matchers/partial\");\r\nclass DeepFilter {\r\n    constructor(_settings, _micromatchOptions) {\r\n        this._settings = _settings;\r\n        this._micromatchOptions = _micromatchOptions;\r\n    }\r\n    getFilter(basePath, positive, negative) {\r\n        const matcher = this._getMatcher(positive);\r\n        const negativeRe = this._getNegativePatternsRe(negative);\r\n        return (entry) => this._filter(basePath, entry, matcher, negativeRe);\r\n    }\r\n    _getMatcher(patterns) {\r\n        return new partial_1.default(patterns, this._settings, this._micromatchOptions);\r\n    }\r\n    _getNegativePatternsRe(patterns) {\r\n        const affectDepthOfReadingPatterns = patterns.filter(utils.pattern.isAffectDepthOfReadingPattern);\r\n        return utils.pattern.convertPatternsToRe(affectDepthOfReadingPatterns, this._micromatchOptions);\r\n    }\r\n    _filter(basePath, entry, matcher, negativeRe) {\r\n        if (this._isSkippedByDeep(basePath, entry.path)) {\r\n            return false;\r\n        }\r\n        if (this._isSkippedSymbolicLink(entry)) {\r\n            return false;\r\n        }\r\n        const filepath = utils.path.removeLeadingDotSegment(entry.path);\r\n        if (this._isSkippedByPositivePatterns(filepath, matcher)) {\r\n            return false;\r\n        }\r\n        return this._isSkippedByNegativePatterns(filepath, negativeRe);\r\n    }\r\n    _isSkippedByDeep(basePath, entryPath) {\r\n        /**\r\n         * Avoid unnecessary depth calculations when it doesn't matter.\r\n         */\r\n        if (this._settings.deep === Infinity) {\r\n            return false;\r\n        }\r\n        return this._getEntryLevel(basePath, entryPath) >= this._settings.deep;\r\n    }\r\n    _getEntryLevel(basePath, entryPath) {\r\n        const entryPathDepth = entryPath.split('/').length;\r\n        if (basePath === '') {\r\n            return entryPathDepth;\r\n        }\r\n        const basePathDepth = basePath.split('/').length;\r\n        return entryPathDepth - basePathDepth;\r\n    }\r\n    _isSkippedSymbolicLink(entry) {\r\n        return !this._settings.followSymbolicLinks && entry.dirent.isSymbolicLink();\r\n    }\r\n    _isSkippedByPositivePatterns(entryPath, matcher) {\r\n        return !this._settings.baseNameMatch && !matcher.match(entryPath);\r\n    }\r\n    _isSkippedByNegativePatterns(entryPath, patternsRe) {\r\n        return !utils.pattern.matchAny(entryPath, patternsRe);\r\n    }\r\n}\r\nexports.default = DeepFilter;\r\n"]}}