{"code":"(()=>{\n\"use strict\";var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});exports.__esModule=true;exports[\"default\"]=void 0;var _parser=_interopRequireDefault(require(\"./parser\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}__name(_interopRequireDefault,\"_interopRequireDefault\");var Processor=function(){function Processor2(func,options){this.func=func||__name(function noop(){},\"noop\");this.funcRes=null;this.options=options}__name(Processor2,\"Processor\");var _proto=Processor2.prototype;_proto._shouldUpdateSelector=__name(function _shouldUpdateSelector(rule,options){if(options===void 0){options={}}var merged=Object.assign({},this.options,options);if(merged.updateSelector===false){return false}else{return typeof rule!==\"string\"}},\"_shouldUpdateSelector\");_proto._isLossy=__name(function _isLossy(options){if(options===void 0){options={}}var merged=Object.assign({},this.options,options);if(merged.lossless===false){return true}else{return false}},\"_isLossy\");_proto._root=__name(function _root(rule,options){if(options===void 0){options={}}var parser=new _parser[\"default\"](rule,this._parseOptions(options));return parser.root},\"_root\");_proto._parseOptions=__name(function _parseOptions(options){return{lossy:this._isLossy(options)}},\"_parseOptions\");_proto._run=__name(function _run(rule,options){var _this=this;if(options===void 0){options={}}return new Promise(function(resolve,reject){try{var root=_this._root(rule,options);Promise.resolve(_this.func(root)).then(function(transform){var string=void 0;if(_this._shouldUpdateSelector(rule,options)){string=root.toString();rule.selector=string}return{transform,root,string}}).then(resolve,reject)}catch(e){reject(e);return}})},\"_run\");_proto._runSync=__name(function _runSync(rule,options){if(options===void 0){options={}}var root=this._root(rule,options);var transform=this.func(root);if(transform&&typeof transform.then===\"function\"){throw new Error(\"Selector processor returned a promise to a synchronous call.\")}var string=void 0;if(options.updateSelector&&typeof rule!==\"string\"){string=root.toString();rule.selector=string}return{transform,root,string}},\"_runSync\");_proto.ast=__name(function ast(rule,options){return this._run(rule,options).then(function(result){return result.root})},\"ast\");_proto.astSync=__name(function astSync(rule,options){return this._runSync(rule,options).root},\"astSync\");_proto.transform=__name(function transform(rule,options){return this._run(rule,options).then(function(result){return result.transform})},\"transform\");_proto.transformSync=__name(function transformSync(rule,options){return this._runSync(rule,options).transform},\"transformSync\");_proto.process=__name(function process(rule,options){return this._run(rule,options).then(function(result){return result.string||result.root.toString()})},\"process\");_proto.processSync=__name(function processSync(rule,options){var result=this._runSync(rule,options);return result.string||result.root.toString()},\"processSync\");return Processor2}();exports[\"default\"]=Processor;module.exports=exports.default;\n})()\n","warnings":[],"map":{"version":3,"mappings":"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","names":["Processor"],"sources":["/root/projects/zachw-i/packages/plugin/node_modules/.pnpm/postcss-selector-parser@6.0.13/node_modules/postcss-selector-parser/dist/processor.js"],"sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _parser = _interopRequireDefault(require(\"./parser\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nvar Processor = /*#__PURE__*/function () {\n  function Processor(func, options) {\n    this.func = func || function noop() {};\n    this.funcRes = null;\n    this.options = options;\n  }\n  var _proto = Processor.prototype;\n  _proto._shouldUpdateSelector = function _shouldUpdateSelector(rule, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    var merged = Object.assign({}, this.options, options);\n    if (merged.updateSelector === false) {\n      return false;\n    } else {\n      return typeof rule !== \"string\";\n    }\n  };\n  _proto._isLossy = function _isLossy(options) {\n    if (options === void 0) {\n      options = {};\n    }\n    var merged = Object.assign({}, this.options, options);\n    if (merged.lossless === false) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  _proto._root = function _root(rule, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    var parser = new _parser[\"default\"](rule, this._parseOptions(options));\n    return parser.root;\n  };\n  _proto._parseOptions = function _parseOptions(options) {\n    return {\n      lossy: this._isLossy(options)\n    };\n  };\n  _proto._run = function _run(rule, options) {\n    var _this = this;\n    if (options === void 0) {\n      options = {};\n    }\n    return new Promise(function (resolve, reject) {\n      try {\n        var root = _this._root(rule, options);\n        Promise.resolve(_this.func(root)).then(function (transform) {\n          var string = undefined;\n          if (_this._shouldUpdateSelector(rule, options)) {\n            string = root.toString();\n            rule.selector = string;\n          }\n          return {\n            transform: transform,\n            root: root,\n            string: string\n          };\n        }).then(resolve, reject);\n      } catch (e) {\n        reject(e);\n        return;\n      }\n    });\n  };\n  _proto._runSync = function _runSync(rule, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    var root = this._root(rule, options);\n    var transform = this.func(root);\n    if (transform && typeof transform.then === \"function\") {\n      throw new Error(\"Selector processor returned a promise to a synchronous call.\");\n    }\n    var string = undefined;\n    if (options.updateSelector && typeof rule !== \"string\") {\n      string = root.toString();\n      rule.selector = string;\n    }\n    return {\n      transform: transform,\n      root: root,\n      string: string\n    };\n  }\n\n  /**\n   * Process rule into a selector AST.\n   *\n   * @param rule {postcss.Rule | string} The css selector to be processed\n   * @param options The options for processing\n   * @returns {Promise<parser.Root>} The AST of the selector after processing it.\n   */;\n  _proto.ast = function ast(rule, options) {\n    return this._run(rule, options).then(function (result) {\n      return result.root;\n    });\n  }\n\n  /**\n   * Process rule into a selector AST synchronously.\n   *\n   * @param rule {postcss.Rule | string} The css selector to be processed\n   * @param options The options for processing\n   * @returns {parser.Root} The AST of the selector after processing it.\n   */;\n  _proto.astSync = function astSync(rule, options) {\n    return this._runSync(rule, options).root;\n  }\n\n  /**\n   * Process a selector into a transformed value asynchronously\n   *\n   * @param rule {postcss.Rule | string} The css selector to be processed\n   * @param options The options for processing\n   * @returns {Promise<any>} The value returned by the processor.\n   */;\n  _proto.transform = function transform(rule, options) {\n    return this._run(rule, options).then(function (result) {\n      return result.transform;\n    });\n  }\n\n  /**\n   * Process a selector into a transformed value synchronously.\n   *\n   * @param rule {postcss.Rule | string} The css selector to be processed\n   * @param options The options for processing\n   * @returns {any} The value returned by the processor.\n   */;\n  _proto.transformSync = function transformSync(rule, options) {\n    return this._runSync(rule, options).transform;\n  }\n\n  /**\n   * Process a selector into a new selector string asynchronously.\n   *\n   * @param rule {postcss.Rule | string} The css selector to be processed\n   * @param options The options for processing\n   * @returns {string} the selector after processing.\n   */;\n  _proto.process = function process(rule, options) {\n    return this._run(rule, options).then(function (result) {\n      return result.string || result.root.toString();\n    });\n  }\n\n  /**\n   * Process a selector into a new selector string synchronously.\n   *\n   * @param rule {postcss.Rule | string} The css selector to be processed\n   * @param options The options for processing\n   * @returns {string} the selector after processing.\n   */;\n  _proto.processSync = function processSync(rule, options) {\n    var result = this._runSync(rule, options);\n    return result.string || result.root.toString();\n  };\n  return Processor;\n}();\nexports[\"default\"] = Processor;\nmodule.exports = exports.default;"]}}