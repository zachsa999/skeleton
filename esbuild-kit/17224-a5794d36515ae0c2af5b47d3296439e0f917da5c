{"code":"(()=>{\n\"use strict\";var __defProp=Object.defineProperty;var __name=(target,value2)=>__defProp(target,\"name\",{value:value2,configurable:true});Object.defineProperty(exports,\"__esModule\",{value:true});Object.defineProperty(exports,\"default\",{enumerable:true,get:function(){return resolveConfig}});const _negateValue=_interop_require_default(require(\"./negateValue\"));const _corePluginList=_interop_require_default(require(\"../corePluginList\"));const _configurePlugins=_interop_require_default(require(\"./configurePlugins\"));const _colors=_interop_require_default(require(\"../public/colors\"));const _defaults=require(\"./defaults\");const _toPath=require(\"./toPath\");const _normalizeConfig=require(\"./normalizeConfig\");const _isPlainObject=_interop_require_default(require(\"./isPlainObject\"));const _cloneDeep=require(\"./cloneDeep\");const _pluginUtils=require(\"./pluginUtils\");const _withAlphaVariable=require(\"./withAlphaVariable\");const _toColorValue=_interop_require_default(require(\"./toColorValue\"));function _interop_require_default(obj){return obj&&obj.__esModule?obj:{default:obj}}__name(_interop_require_default,\"_interop_require_default\");function isFunction(input){return typeof input===\"function\"}__name(isFunction,\"isFunction\");function mergeWith(target,...sources){let customizer=sources.pop();for(let source of sources){for(let k in source){let merged=customizer(target[k],source[k]);if(merged===void 0){if((0,_isPlainObject.default)(target[k])&&(0,_isPlainObject.default)(source[k])){target[k]=mergeWith({},target[k],source[k],customizer)}else{target[k]=source[k]}}else{target[k]=merged}}}return target}__name(mergeWith,\"mergeWith\");const configUtils={colors:_colors.default,negative(scale){return Object.keys(scale).filter(key=>scale[key]!==\"0\").reduce((negativeScale,key)=>{let negativeValue=(0,_negateValue.default)(scale[key]);if(negativeValue!==void 0){negativeScale[`-${key}`]=negativeValue}return negativeScale},{})},breakpoints(screens){return Object.keys(screens).filter(key=>typeof screens[key]===\"string\").reduce((breakpoints,key)=>({...breakpoints,[`screen-${key}`]:screens[key]}),{})}};function value(valueToResolve,...args){return isFunction(valueToResolve)?valueToResolve(...args):valueToResolve}__name(value,\"value\");function collectExtends(items){return items.reduce((merged,{extend})=>{return mergeWith(merged,extend,(mergedValue,extendValue)=>{if(mergedValue===void 0){return[extendValue]}if(Array.isArray(mergedValue)){return[extendValue,...mergedValue]}return[extendValue,mergedValue]})},{})}__name(collectExtends,\"collectExtends\");function mergeThemes(themes){return{...themes.reduce((merged,theme)=>(0,_defaults.defaults)(merged,theme),{}),extend:collectExtends(themes)}}__name(mergeThemes,\"mergeThemes\");function mergeExtensionCustomizer(merged,value2){if(Array.isArray(merged)&&(0,_isPlainObject.default)(merged[0])){return merged.concat(value2)}if(Array.isArray(value2)&&(0,_isPlainObject.default)(value2[0])&&(0,_isPlainObject.default)(merged)){return[merged,...value2]}if(Array.isArray(value2)){return value2}return void 0}__name(mergeExtensionCustomizer,\"mergeExtensionCustomizer\");function mergeExtensions({extend,...theme}){return mergeWith(theme,extend,(themeValue,extensions)=>{if(!isFunction(themeValue)&&!extensions.some(isFunction)){return mergeWith({},themeValue,...extensions,mergeExtensionCustomizer)}return(resolveThemePath,utils)=>mergeWith({},...[themeValue,...extensions].map(e=>value(e,resolveThemePath,utils)),mergeExtensionCustomizer)})}__name(mergeExtensions,\"mergeExtensions\");function*toPaths(key){let path=(0,_toPath.toPath)(key);if(path.length===0){return}yield path;if(Array.isArray(key)){return}let pattern=/^(.*?)\\s*\\/\\s*([^/]+)$/;let matches=key.match(pattern);if(matches!==null){let[,prefix,alpha]=matches;let newPath=(0,_toPath.toPath)(prefix);newPath.alpha=alpha;yield newPath}}__name(toPaths,\"toPaths\");function resolveFunctionKeys(object){const resolvePath=__name((key,defaultValue)=>{for(const path of toPaths(key)){let index=0;let val=object;while(val!==void 0&&val!==null&&index<path.length){val=val[path[index++]];let shouldResolveAsFn=isFunction(val)&&(path.alpha===void 0||index<=path.length-1);val=shouldResolveAsFn?val(resolvePath,configUtils):val}if(val!==void 0){if(path.alpha!==void 0){let normalized=(0,_pluginUtils.parseColorFormat)(val);return(0,_withAlphaVariable.withAlphaValue)(normalized,path.alpha,(0,_toColorValue.default)(normalized))}if((0,_isPlainObject.default)(val)){return(0,_cloneDeep.cloneDeep)(val)}return val}}return defaultValue},\"resolvePath\");Object.assign(resolvePath,{theme:resolvePath,...configUtils});return Object.keys(object).reduce((resolved,key)=>{resolved[key]=isFunction(object[key])?object[key](resolvePath,configUtils):object[key];return resolved},{})}__name(resolveFunctionKeys,\"resolveFunctionKeys\");function extractPluginConfigs(configs){let allConfigs=[];configs.forEach(config=>{allConfigs=[...allConfigs,config];var _config_plugins;const plugins=(_config_plugins=config===null||config===void 0?void 0:config.plugins)!==null&&_config_plugins!==void 0?_config_plugins:[];if(plugins.length===0){return}plugins.forEach(plugin=>{if(plugin.__isOptionsFunction){plugin=plugin()}var _plugin_config;allConfigs=[...allConfigs,...extractPluginConfigs([(_plugin_config=plugin===null||plugin===void 0?void 0:plugin.config)!==null&&_plugin_config!==void 0?_plugin_config:{}])]})});return allConfigs}__name(extractPluginConfigs,\"extractPluginConfigs\");function resolveCorePlugins(corePluginConfigs){const result=[...corePluginConfigs].reduceRight((resolved,corePluginConfig)=>{if(isFunction(corePluginConfig)){return corePluginConfig({corePlugins:resolved})}return(0,_configurePlugins.default)(corePluginConfig,resolved)},_corePluginList.default);return result}__name(resolveCorePlugins,\"resolveCorePlugins\");function resolvePluginLists(pluginLists){const result=[...pluginLists].reduceRight((resolved,pluginList)=>{return[...resolved,...pluginList]},[]);return result}__name(resolvePluginLists,\"resolvePluginLists\");function resolveConfig(configs){let allConfigs=[...extractPluginConfigs(configs),{prefix:\"\",important:false,separator:\":\"}];var _t_theme,_c_plugins;return(0,_normalizeConfig.normalizeConfig)((0,_defaults.defaults)({theme:resolveFunctionKeys(mergeExtensions(mergeThemes(allConfigs.map(t=>{return(_t_theme=t===null||t===void 0?void 0:t.theme)!==null&&_t_theme!==void 0?_t_theme:{}})))),corePlugins:resolveCorePlugins(allConfigs.map(c=>c.corePlugins)),plugins:resolvePluginLists(configs.map(c=>{return(_c_plugins=c===null||c===void 0?void 0:c.plugins)!==null&&_c_plugins!==void 0?_c_plugins:[]}))},...allConfigs))}__name(resolveConfig,\"resolveConfig\");\n})()\n","warnings":[],"map":{"version":3,"mappings":"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","names":["value"],"sources":["/root/projects/zachw-i/packages/plugin/node_modules/.pnpm/tailwindcss@3.3.2/node_modules/tailwindcss/lib/util/resolveConfig.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function() {\n        return resolveConfig;\n    }\n});\nconst _negateValue = /*#__PURE__*/ _interop_require_default(require(\"./negateValue\"));\nconst _corePluginList = /*#__PURE__*/ _interop_require_default(require(\"../corePluginList\"));\nconst _configurePlugins = /*#__PURE__*/ _interop_require_default(require(\"./configurePlugins\"));\nconst _colors = /*#__PURE__*/ _interop_require_default(require(\"../public/colors\"));\nconst _defaults = require(\"./defaults\");\nconst _toPath = require(\"./toPath\");\nconst _normalizeConfig = require(\"./normalizeConfig\");\nconst _isPlainObject = /*#__PURE__*/ _interop_require_default(require(\"./isPlainObject\"));\nconst _cloneDeep = require(\"./cloneDeep\");\nconst _pluginUtils = require(\"./pluginUtils\");\nconst _withAlphaVariable = require(\"./withAlphaVariable\");\nconst _toColorValue = /*#__PURE__*/ _interop_require_default(require(\"./toColorValue\"));\nfunction _interop_require_default(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction isFunction(input) {\n    return typeof input === \"function\";\n}\nfunction mergeWith(target, ...sources) {\n    let customizer = sources.pop();\n    for (let source of sources){\n        for(let k in source){\n            let merged = customizer(target[k], source[k]);\n            if (merged === undefined) {\n                if ((0, _isPlainObject.default)(target[k]) && (0, _isPlainObject.default)(source[k])) {\n                    target[k] = mergeWith({}, target[k], source[k], customizer);\n                } else {\n                    target[k] = source[k];\n                }\n            } else {\n                target[k] = merged;\n            }\n        }\n    }\n    return target;\n}\nconst configUtils = {\n    colors: _colors.default,\n    negative (scale) {\n        // TODO: Log that this function isn't really needed anymore?\n        return Object.keys(scale).filter((key)=>scale[key] !== \"0\").reduce((negativeScale, key)=>{\n            let negativeValue = (0, _negateValue.default)(scale[key]);\n            if (negativeValue !== undefined) {\n                negativeScale[`-${key}`] = negativeValue;\n            }\n            return negativeScale;\n        }, {});\n    },\n    breakpoints (screens) {\n        return Object.keys(screens).filter((key)=>typeof screens[key] === \"string\").reduce((breakpoints, key)=>({\n                ...breakpoints,\n                [`screen-${key}`]: screens[key]\n            }), {});\n    }\n};\nfunction value(valueToResolve, ...args) {\n    return isFunction(valueToResolve) ? valueToResolve(...args) : valueToResolve;\n}\nfunction collectExtends(items) {\n    return items.reduce((merged, { extend  })=>{\n        return mergeWith(merged, extend, (mergedValue, extendValue)=>{\n            if (mergedValue === undefined) {\n                return [\n                    extendValue\n                ];\n            }\n            if (Array.isArray(mergedValue)) {\n                return [\n                    extendValue,\n                    ...mergedValue\n                ];\n            }\n            return [\n                extendValue,\n                mergedValue\n            ];\n        });\n    }, {});\n}\nfunction mergeThemes(themes) {\n    return {\n        ...themes.reduce((merged, theme)=>(0, _defaults.defaults)(merged, theme), {}),\n        // In order to resolve n config objects, we combine all of their `extend` properties\n        // into arrays instead of objects so they aren't overridden.\n        extend: collectExtends(themes)\n    };\n}\nfunction mergeExtensionCustomizer(merged, value) {\n    // When we have an array of objects, we do want to merge it\n    if (Array.isArray(merged) && (0, _isPlainObject.default)(merged[0])) {\n        return merged.concat(value);\n    }\n    // When the incoming value is an array, and the existing config is an object, prepend the existing object\n    if (Array.isArray(value) && (0, _isPlainObject.default)(value[0]) && (0, _isPlainObject.default)(merged)) {\n        return [\n            merged,\n            ...value\n        ];\n    }\n    // Override arrays (for example for font-families, box-shadows, ...)\n    if (Array.isArray(value)) {\n        return value;\n    }\n    // Execute default behaviour\n    return undefined;\n}\nfunction mergeExtensions({ extend , ...theme }) {\n    return mergeWith(theme, extend, (themeValue, extensions)=>{\n        // The `extend` property is an array, so we need to check if it contains any functions\n        if (!isFunction(themeValue) && !extensions.some(isFunction)) {\n            return mergeWith({}, themeValue, ...extensions, mergeExtensionCustomizer);\n        }\n        return (resolveThemePath, utils)=>mergeWith({}, ...[\n                themeValue,\n                ...extensions\n            ].map((e)=>value(e, resolveThemePath, utils)), mergeExtensionCustomizer);\n    });\n}\n/**\n *\n * @param {string} key\n * @return {Iterable<string[] & {alpha: string | undefined}>}\n */ function* toPaths(key) {\n    let path = (0, _toPath.toPath)(key);\n    if (path.length === 0) {\n        return;\n    }\n    yield path;\n    if (Array.isArray(key)) {\n        return;\n    }\n    let pattern = /^(.*?)\\s*\\/\\s*([^/]+)$/;\n    let matches = key.match(pattern);\n    if (matches !== null) {\n        let [, prefix, alpha] = matches;\n        let newPath = (0, _toPath.toPath)(prefix);\n        newPath.alpha = alpha;\n        yield newPath;\n    }\n}\nfunction resolveFunctionKeys(object) {\n    // theme('colors.red.500 / 0.5') -> ['colors', 'red', '500 / 0', '5]\n    const resolvePath = (key, defaultValue)=>{\n        for (const path of toPaths(key)){\n            let index = 0;\n            let val = object;\n            while(val !== undefined && val !== null && index < path.length){\n                val = val[path[index++]];\n                let shouldResolveAsFn = isFunction(val) && (path.alpha === undefined || index <= path.length - 1);\n                val = shouldResolveAsFn ? val(resolvePath, configUtils) : val;\n            }\n            if (val !== undefined) {\n                if (path.alpha !== undefined) {\n                    let normalized = (0, _pluginUtils.parseColorFormat)(val);\n                    return (0, _withAlphaVariable.withAlphaValue)(normalized, path.alpha, (0, _toColorValue.default)(normalized));\n                }\n                if ((0, _isPlainObject.default)(val)) {\n                    return (0, _cloneDeep.cloneDeep)(val);\n                }\n                return val;\n            }\n        }\n        return defaultValue;\n    };\n    Object.assign(resolvePath, {\n        theme: resolvePath,\n        ...configUtils\n    });\n    return Object.keys(object).reduce((resolved, key)=>{\n        resolved[key] = isFunction(object[key]) ? object[key](resolvePath, configUtils) : object[key];\n        return resolved;\n    }, {});\n}\nfunction extractPluginConfigs(configs) {\n    let allConfigs = [];\n    configs.forEach((config)=>{\n        allConfigs = [\n            ...allConfigs,\n            config\n        ];\n        var _config_plugins;\n        const plugins = (_config_plugins = config === null || config === void 0 ? void 0 : config.plugins) !== null && _config_plugins !== void 0 ? _config_plugins : [];\n        if (plugins.length === 0) {\n            return;\n        }\n        plugins.forEach((plugin)=>{\n            if (plugin.__isOptionsFunction) {\n                plugin = plugin();\n            }\n            var _plugin_config;\n            allConfigs = [\n                ...allConfigs,\n                ...extractPluginConfigs([\n                    (_plugin_config = plugin === null || plugin === void 0 ? void 0 : plugin.config) !== null && _plugin_config !== void 0 ? _plugin_config : {}\n                ])\n            ];\n        });\n    });\n    return allConfigs;\n}\nfunction resolveCorePlugins(corePluginConfigs) {\n    const result = [\n        ...corePluginConfigs\n    ].reduceRight((resolved, corePluginConfig)=>{\n        if (isFunction(corePluginConfig)) {\n            return corePluginConfig({\n                corePlugins: resolved\n            });\n        }\n        return (0, _configurePlugins.default)(corePluginConfig, resolved);\n    }, _corePluginList.default);\n    return result;\n}\nfunction resolvePluginLists(pluginLists) {\n    const result = [\n        ...pluginLists\n    ].reduceRight((resolved, pluginList)=>{\n        return [\n            ...resolved,\n            ...pluginList\n        ];\n    }, []);\n    return result;\n}\nfunction resolveConfig(configs) {\n    let allConfigs = [\n        ...extractPluginConfigs(configs),\n        {\n            prefix: \"\",\n            important: false,\n            separator: \":\"\n        }\n    ];\n    var _t_theme, _c_plugins;\n    return (0, _normalizeConfig.normalizeConfig)((0, _defaults.defaults)({\n        theme: resolveFunctionKeys(mergeExtensions(mergeThemes(allConfigs.map((t)=>{\n            return (_t_theme = t === null || t === void 0 ? void 0 : t.theme) !== null && _t_theme !== void 0 ? _t_theme : {};\n        })))),\n        corePlugins: resolveCorePlugins(allConfigs.map((c)=>c.corePlugins)),\n        plugins: resolvePluginLists(configs.map((c)=>{\n            return (_c_plugins = c === null || c === void 0 ? void 0 : c.plugins) !== null && _c_plugins !== void 0 ? _c_plugins : [];\n        }))\n    }, ...allConfigs));\n}\n"]}}